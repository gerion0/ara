stages:
  - prepare
  - build
  - test
  - cleanup

variables:
  PERSISTENT_DIR: '/home/gitlab-runner/dont_backup/ara-build$CI_PIPELINE_ID'
  WRAP_BUILD: '$PERSISTENT_DIR/build'
  WRAP_SUBPROJECTS: '$PERSISTENT_DIR/subprojects'
  C_SOURCE: '/tmp/ara'
  C_BUILD: '/tmp/ara-build'
  BWRAP: 'bwrap --bind / / --dev-bind /dev /dev --bind . $C_SOURCE --bind $WRAP_SUBPROJECTS $C_SOURCE/subprojects --chdir $C_SOURCE'

prepare:
  stage: prepare
  tags: ["sra.labor"]
  only: [soso, citest]
  script:
    - echo "persistent dir = $PERSISTENT_DIR"
    - mkdir -p "$WRAP_SUBPROJECTS"
    - mkdir -p "$WRAP_BUILD"
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}/".insteadOf "git@${CI_SERVER_HOST}:"
    - eval $BWRAP -- ./init
    - sync

build-gcc-no-pch:
  stage: build
  needs: ["prepare"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  variables:
    BUILD_DIR: '$PERSISTENT_DIR/build-gcc-no-pch'
  script:
    - CC=gcc CXX=g++ eval $BWRAP -- meson setup --native-file $C_SOURCE/native-lab.txt -Db_pch=false $BUILD_DIR $C_SOURCE
    - eval $BWRAP meson compile -C $BUILD_DIR ara-py

build-clang-no-pch:
  stage: build
  needs: ["prepare"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  variables:
    BUILD_DIR: '$PERSISTENT_DIR/build-clang-no-pch'
  script:
    - CC=clang CXX=clang++ eval $BWRAP -- meson setup --native-file $C_SOURCE/native-lab.txt -Db_pch=false $BUILD_DIR $C_SOURCE
    - eval $BWRAP -- meson compile -C $BUILD_DIR ara-py

build-gcc:
  stage: build
  needs: ["prepare"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  script:
    - echo "Building with gcc"
    - CC=gcc CXX=g++ eval $BWRAP --bind $WRAP_BUILD $C_BUILD -- meson setup --native-file $C_SOURCE/native-lab.txt -Db_pch=true $C_BUILD $C_SOURCE
    - eval $BWRAP --bind $WRAP_BUILD $C_BUILD -- meson compile -C $C_BUILD ara-py
    - echo "Emptying files for further processing."
    - eval $BWRAP --bind $WRAP_BUILD $C_BUILD -- $C_SOURCE/tools/clean_build_directory.py $C_BUILD
    - sync

build-clang:
  stage: build
  needs: ["prepare"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  variables:
    BUILD_DIR: '$PERSISTENT_DIR/build-clang'
  script:
    - CC=clang CXX=clang++ eval $BWRAP -- meson setup --native-file $C_SOURCE/native-lab.txt -Db_pch=true $BUILD_DIR $C_SOURCE
    - eval $BWRAP -- meson compile -C $BUILD_DIR ara-py

test-preproc:
  stage: test
  needs: ["build-gcc"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  variables:
    TEST_BUILD: '$PERSISTENT_DIR/build-preproc-tests'
  script:
    - echo "Make a copy of the build directory (from $WRAP_BUILD to $TEST_BUILD)"
    - cp -a $WRAP_BUILD/. $TEST_BUILD
    - echo "Run tests"
    - eval $BWRAP --bind $TEST_BUILD $C_BUILD -- meson test -C $C_BUILD -v --suite ara-link
    - eval $BWRAP --bind $TEST_BUILD $C_BUILD -- meson test -C $C_BUILD -v --suite preproc

test-sia:
  stage: test
  needs: ["build-gcc"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  variables:
    TEST_BUILD: '$PERSISTENT_DIR/build-sia-tests'
  script:
    - echo "Make a copy of the build directory (from $WRAP_BUILD to $TEST_BUILD)"
    - cp -a $WRAP_BUILD/. $TEST_BUILD
    - echo "Run tests"
    - eval $BWRAP --bind $TEST_BUILD $C_BUILD -- meson test -C $C_BUILD --suite sia

test-sse:
  stage: test
  needs: ["build-gcc"]
  tags: ["sra.labor"]
  only: [soso, citest]
  interruptible: true
  variables:
    TEST_BUILD: '$PERSISTENT_DIR/build-sse-tests'
  script:
    - echo "Make a copy of the build directory (from $WRAP_BUILD to $TEST_BUILD)"
    - cp -a $WRAP_BUILD/. $TEST_BUILD
    - echo "Run tests"
    - eval $BWRAP --bind $TEST_BUILD $C_BUILD -- meson test -C $C_BUILD --suite sse

cleanup:
  stage: cleanup
  needs: ["prepare", "build-gcc", "build-clang", "build-clang-no-pch", "build-gcc-no-pch", "test-preproc", 'test-sia', 'test-sse']
  tags: ["sra.labor"]
  only: [soso, citest]
  when: always
  script:
    - echo "Cleanup Files in $PERSISTENT_DIR"
    - rm -rf "$PERSISTENT_DIR"
    - sync
