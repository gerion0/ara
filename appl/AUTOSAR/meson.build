autosar_includes = ['-I', meson.current_source_dir() / 'source' / 'os']

autosar_apps = [
  ['singlecore' / 'bcc1' / 'alarm1',    ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm1',    ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm1',    ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm1',    ['d', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm1',    ['e', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm1',    ['f', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm2',    ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm2',    ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm2',    ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm3',    ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm3',    ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm3',    ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm3',    ['d', 'system.json']],
  ['singlecore' / 'bcc1' / 'alarm3',    ['e', 'system.json']],
  ['singlecore' / 'bcc1' / 'complex1',  ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'complex1',  ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'complex1',  ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'complex1',  ['d', 'system.json']],
  ['singlecore' / 'bcc1' / 'complex2',  ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'counter1',  ['a', 'system.json']],
  # ['singlecore' / 'bcc1' / 'depsvc',    ['depsvc', 'system.json']],
  ['singlecore' / 'bcc1' / 'hoffmann',  ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'isr2',      ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'isr2',      ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'isr2',      ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'isr2',      ['d', 'system.json']],
  ['singlecore' / 'bcc1' / 'isr2',      ['e', 'system.json']],
  ['singlecore' / 'bcc1' / 'lukas',     ['alarmstress', 'alarmstress.json']],
  ['singlecore' / 'bcc1' / 'lukas',     ['dispatch', 'dispatch.json']],
  ['singlecore' / 'bcc1' / 'lukas',     ['isr2', 'isr2.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['d', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['e', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['f', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['g', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['h', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['j', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource1', ['k', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource2', ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'resource2', ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'sse1',      ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'sse1',      ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'sse1',      ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['a', 'system.json', 'a.trace.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['c', 'system.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['d', 'system.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['e', 'system.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['f', 'system.json']],
  ['singlecore' / 'bcc1' / 'task1',     ['g', 'system.json']],
  ['singlecore' / 'bcc1' / 'task2',     ['a', 'system.json']],
  ['singlecore' / 'bcc1' / 'task2',     ['b', 'system.json']],
  ['singlecore' / 'bcc1' / 'task2',     ['c', 'system.json']],
  ['singlecore' / 'complex',            ['copter-without-alarms', 'system-without-alarms.json']],
  ['singlecore' / 'complex',            ['isorc', 'isorc.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['a', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['b', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['c', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['d', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['e', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['f', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['g', 'system.json']],
  ['singlecore' / 'ecc1' / 'bt1',       ['h', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['a', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['b', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['c', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['d', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['e', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['f', 'system.json']],
  ['singlecore' / 'ecc1' / 'event1',    ['g', 'system.json']],
  ['singlecore' / 'ecc1' / 'eventisr1', ['a', 'system.json']],
  ['singlecore' / 'ecc1' / 'eventisr1', ['b', 'system.json']],
  ['singlecore' / 'ecc1' / 'eventisr1', ['c', 'system.json']],
  ['singlecore' / 'ecc1' / 'eventisr1', ['d', 'system.json']],
  ['singlecore' / 'ecc1' / 'eventisr1', ['e', 'system.json']],
  ['singlecore' / 'ecc1' / 'eventisr1', ['f', 'system.json']],
  ['multicore',                         ['minexample', 'minexample.json']],
]

autosar_targets = []
autosar_targets_with_test = []
foreach app : autosar_apps
  sys = app[0] / app[1][0]
  oil = files(app[0] / app[1][1])

  app_ll = custom_target('autosar_' + sys.underscorify(),
                         input : sys + '.cc',
                         output : 'autosar_' + sys.underscorify() + '.ll',
                         depfile : 'autosar_' + sys.underscorify() + '.ll.dep',
                         command : clang_cpp +
                                   libs_includes +
                                   ir_flags +
                                   clang_flags)
  if app[1].length() == 2
    set_variable('autosar_' + sys.underscorify(), [app_ll, oil])
    autosar_targets += [[app_ll, oil]]
  endif
  if app[1].length() == 3
    sys_test = files(app[0] / app[1][2])
    set_variable('autosar_' + sys.underscorify(), [app_ll, oil, sys_test])
    autosar_targets_with_test += [[app_ll, oil, sys_test, sys.underscorify()]]
  endif
endforeach

