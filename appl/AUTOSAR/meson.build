autosar_includes = ['-I', meson.current_source_dir() / 'source' / 'os']

autosar_apps = [
  ['singlecore/bcc1/alarm1/a', 'singlecore/bcc1/alarm1/system.json'],
  ['singlecore/bcc1/alarm1/b', 'singlecore/bcc1/alarm1/system.json'],
  ['singlecore/bcc1/alarm1/c', 'singlecore/bcc1/alarm1/system.json'],
  ['singlecore/bcc1/alarm1/d', 'singlecore/bcc1/alarm1/system.json'],
  ['singlecore/bcc1/alarm1/e', 'singlecore/bcc1/alarm1/system.json'],
  ['singlecore/bcc1/alarm1/f', 'singlecore/bcc1/alarm1/system.json'],
  ['singlecore/bcc1/alarm2/a', 'singlecore/bcc1/alarm2/system.json'],
  ['singlecore/bcc1/alarm2/b', 'singlecore/bcc1/alarm2/system.json'],
  ['singlecore/bcc1/alarm2/c', 'singlecore/bcc1/alarm2/system.json'],
  ['singlecore/bcc1/alarm3/a', 'singlecore/bcc1/alarm3/system.json'],
  ['singlecore/bcc1/alarm3/b', 'singlecore/bcc1/alarm3/system.json'],
  ['singlecore/bcc1/alarm3/c', 'singlecore/bcc1/alarm3/system.json'],
  ['singlecore/bcc1/alarm3/d', 'singlecore/bcc1/alarm3/system.json'],
  ['singlecore/bcc1/alarm3/e', 'singlecore/bcc1/alarm3/system.json'],
  ['singlecore/bcc1/complex1/a', 'singlecore/bcc1/complex1/system.json'],
  ['singlecore/bcc1/complex1/b', 'singlecore/bcc1/complex1/system.json'],
  ['singlecore/bcc1/complex1/c', 'singlecore/bcc1/complex1/system.json'],
  ['singlecore/bcc1/complex1/d', 'singlecore/bcc1/complex1/system.json'],
  ['singlecore/bcc1/complex2/a', 'singlecore/bcc1/complex2/system.json'],
  ['singlecore/bcc1/counter1/a', 'singlecore/bcc1/complex1/system.json'],
  #  ['singlecore/bcc1/depsvc/depsvc', 'singlecore/bcc1/depsvc/system.json'],
  ['singlecore/bcc1/hoffmann/a', 'singlecore/bcc1/hoffmann/system.json'],
  ['singlecore/bcc1/isr2/a', 'singlecore/bcc1/isr2/system.json'],
  ['singlecore/bcc1/isr2/b', 'singlecore/bcc1/isr2/system.json'],
  ['singlecore/bcc1/isr2/c', 'singlecore/bcc1/isr2/system.json'],
  ['singlecore/bcc1/isr2/d', 'singlecore/bcc1/isr2/system.json'],
  ['singlecore/bcc1/isr2/e', 'singlecore/bcc1/isr2/system.json'],
  ['singlecore/bcc1/lukas/alarmstress', 'singlecore/bcc1/lukas/alarmstress.json'],
  ['singlecore/bcc1/lukas/dispatch', 'singlecore/bcc1/lukas/dispatch.json'],
  ['singlecore/bcc1/lukas/isr2', 'singlecore/bcc1/lukas/isr2.json'],
  ['singlecore/bcc1/resource1/a', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/b', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/c', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/d', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/e', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/f', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/g', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/h', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/j', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource1/k', 'singlecore/bcc1/resource1/system.json'],
  ['singlecore/bcc1/resource2/a', 'singlecore/bcc1/resource2/system.json'],
  ['singlecore/bcc1/resource2/b', 'singlecore/bcc1/resource2/system.json'],
  ['singlecore/bcc1/sse1/a', 'singlecore/bcc1/sse1/system.json'],
  ['singlecore/bcc1/sse1/b', 'singlecore/bcc1/sse1/system.json'],
  ['singlecore/bcc1/sse1/c', 'singlecore/bcc1/sse1/system.json'],
  ['singlecore/bcc1/task1/a', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task1/b', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task1/c', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task1/d', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task1/e', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task1/f', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task1/g', 'singlecore/bcc1/task1/system.json'],
  ['singlecore/bcc1/task2/a', 'singlecore/bcc1/task2/system.json'],
  ['singlecore/bcc1/task2/b', 'singlecore/bcc1/task2/system.json'],
  ['singlecore/bcc1/task2/c', 'singlecore/bcc1/task2/system.json'],
  ['singlecore/complex/copter-without-alarms', 'singlecore/complex/system-without-alarms.json'],
  ['singlecore/complex/isorc', 'singlecore/complex/isorc.json'],
  ['singlecore/ecc1/bt1/a', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/b', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/c', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/d', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/e', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/f', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/g', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/bt1/h', 'singlecore/ecc1/bt1/system.json'],
  ['singlecore/ecc1/event1/a', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/event1/b', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/event1/c', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/event1/d', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/event1/e', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/event1/f', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/event1/g', 'singlecore/ecc1/event1/system.json'],
  ['singlecore/ecc1/eventisr1/a', 'singlecore/ecc1/eventisr1/system.json'],
  ['singlecore/ecc1/eventisr1/b', 'singlecore/ecc1/eventisr1/system.json'],
  ['singlecore/ecc1/eventisr1/c', 'singlecore/ecc1/eventisr1/system.json'],
  ['singlecore/ecc1/eventisr1/d', 'singlecore/ecc1/eventisr1/system.json'],
  ['singlecore/ecc1/eventisr1/e', 'singlecore/ecc1/eventisr1/system.json'],
  ['singlecore/ecc1/eventisr1/f', 'singlecore/ecc1/eventisr1/system.json'],
  ['multicore/minexample', 'multicore/minexample.json'],
]

autosar_targets = []
foreach app : autosar_apps
  app_ll = custom_target('autosar_' + app[0].underscorify(),
                         input : app[0] + '.cc',
                         output : 'autosar_' + app[0].underscorify() + '.ll',
                         depfile : 'autosar_' + app[0].underscorify() + '.ll.dep',
                         command : clang_cpp +
                                   libs_includes +
                                   ir_flags +
                                   clang_flags)
  set_variable('autosar_' + app[0].underscorify(), [app_ll, files(app[1])])
  autosar_targets += [app_ll, files(app[1])]
endforeach

