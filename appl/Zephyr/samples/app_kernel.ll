; ModuleID = 'llvm-link'
source_filename = "llvm-link"
target datalayout = "e-m:e-p:32:32-Fi8-i64:64-v128:64:128-a:0:32-n32-S64"
target triple = "thumbv7em-none-unknown-eabi"

%struct.k_mbox_msg = type { i32, i32, i32, i8*, i8*, %struct.k_mem_block, %struct.k_thread.30*, %struct.k_thread.30*, %struct.k_thread.30*, %struct.k_sem* }
%struct.k_mem_block = type { %union.anon.3 }
%union.anon.3 = type { %struct.k_mem_block_id }
%struct.k_mem_block_id = type { i8*, %struct.k_heap.31* }
%struct.k_heap.31 = type { %struct.sys_heap.32, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap.32 = type { %struct.z_heap.33*, i8*, i32 }
%struct.z_heap.33 = type opaque
%struct._wait_q_t = type { %struct._dnode }
%struct._dnode = type { %union.anon.0, %union.anon.0 }
%union.anon.0 = type { %struct._dnode* }
%struct.k_spinlock = type { i32 }
%struct.k_thread.30 = type { %struct._thread_base.34, %struct._callee_saved.35, i8*, void ()*, [32 x i8], i32, %struct.getinfo, %struct.k_mem_pool.37*, %struct._thread_arch.38 }
%struct._thread_base.34 = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2.40, i32, i8*, %struct._timeout.41, %struct._wait_q_t }
%union.anon.2.40 = type { i16 }
%struct._timeout.41 = type { %struct._dnode, void (%struct._timeout.41*)*, i64 }
%struct._callee_saved.35 = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.getinfo = type { i32, i32, i32 }
%struct.k_mem_pool.37 = type { %struct.k_heap.31* }
%struct._thread_arch.38 = type { i32, i32 }
%struct.k_sem = type { %struct._wait_q_t, i32, i32 }
%struct.k_pipe = type { i8*, i32, i32, i32, i32, %struct.k_spinlock, %struct.anon.3, i8 }
%struct.anon.3 = type { %struct._wait_q_t, %struct._wait_q_t }
%struct.k_thread.82 = type { %struct._thread_base.83, %struct._callee_saved.35, i8*, void ()*, [32 x i8], i32, %struct.getinfo, %struct.k_mem_pool.86*, %struct._thread_arch.38 }
%struct._thread_base.83 = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2.40, i32, i8*, %struct._timeout.90, %struct._wait_q_t }
%struct._timeout.90 = type { %struct._dnode, void (%struct._timeout.90*)*, i64 }
%struct.k_mem_pool.86 = type { %struct.k_heap.91* }
%struct.k_heap.91 = type { %struct.sys_heap.92, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap.92 = type { %struct.z_heap.93*, i8*, i32 }
%struct.z_heap.93 = type opaque
%struct.z_thread_stack_element = type { i8 }
%struct._static_thread_data = type { %struct.k_thread.82*, %struct.z_thread_stack_element*, i32, void (i8*, i8*, i8*)*, i8*, i8*, i8*, i32, i32, i32, void ()*, i8* }
%struct.k_msgq = type { %struct._wait_q_t, %struct.k_spinlock, i32, i32, i8*, i8*, i8*, i8*, i32, i8 }
%struct.k_mem_slab = type { %struct._wait_q_t, i32, i32, i8*, i8*, i32 }
%struct.k_mbox = type { %struct._wait_q_t, %struct._wait_q_t, %struct.k_spinlock }
%struct.k_mutex = type { %struct._wait_q_t, %struct.k_thread.82*, i32, i32 }
%struct.k_timeout_t = type { i64 }
%struct.k_mem_block.152 = type { %union.anon.3.153 }
%union.anon.3.153 = type { %struct.k_mem_block_id.154 }
%struct.k_mem_block_id.154 = type { i8*, %struct.k_heap.91* }
%struct.k_thread.188 = type { %struct._thread_base.189, %struct._callee_saved.35, i8*, void ()*, [32 x i8], i32, %struct.getinfo, %struct.k_mem_pool.192*, %struct._thread_arch.38 }
%struct._thread_base.189 = type { %struct._wait_q_t, %struct._wait_q_t*, i8, i8, %union.anon.2.40, i32, i8*, %struct._timeout.196, %struct._wait_q_t }
%struct._timeout.196 = type { %struct._dnode, void (%struct._timeout.196*)*, i64 }
%struct.k_mem_pool.192 = type { %struct.k_heap.197* }
%struct.k_heap.197 = type { %struct.sys_heap.198, %struct._wait_q_t, %struct.k_spinlock }
%struct.sys_heap.198 = type { %struct.z_heap.199*, i8*, i32 }
%struct.z_heap.199 = type opaque

@.str = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"| %-65s|%10u|\0A\00", align 1
@.str.2 = private unnamed_addr constant [27 x i8] c"enqueue 1 byte msg in FIFO\00", align 1
@.str.3 = private unnamed_addr constant [27 x i8] c"dequeue 1 byte msg in FIFO\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"enqueue 4 bytes msg in FIFO\00", align 1
@.str.5 = private unnamed_addr constant [28 x i8] c"dequeue 4 bytes msg in FIFO\00", align 1
@.str.6 = private unnamed_addr constant [61 x i8] c"enqueue 1 byte msg in FIFO to a waiting higher priority task\00", align 1
@.str.7 = private unnamed_addr constant [58 x i8] c"enqueue 4 bytes in FIFO to a waiting higher priority task\00", align 1
@.str.8 = private unnamed_addr constant [77 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/master.h:%d Error: tick occurred\0A\00", align 1
@timestamp_check = internal global i64 0, align 8, !dbg !0
@.str.9 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1.10 = private unnamed_addr constant [81 x i8] c"|                M A I L B O X   M E A S U R E M E N T S                      |\0A\00", align 1
@.str.2.11 = private unnamed_addr constant [81 x i8] c"| Send mailbox message to waiting high priority task and wait                 |\0A\00", align 1
@.str.3.12 = private unnamed_addr constant [80 x i8] c"| repeat for %4d times and take the average                                  |\0A\00", align 1
@.str.4.13 = private unnamed_addr constant [81 x i8] c"|   size(B) |       time/packet (nsec)       |          KB/sec                |\0A\00", align 1
@.str.5.16 = private unnamed_addr constant [18 x i8] c"|%11u|%32u|%32u|\0A\00", align 1
@.str.6.17 = private unnamed_addr constant [75 x i8] c"| message overhead:  %10u     nsec/packet                               |\0A\00", align 1
@.str.7.18 = private unnamed_addr constant [75 x i8] c"| raw transfer rate:     %10u KB/sec (without overhead)                 |\0A\00", align 1
@message = internal global %struct.k_mbox_msg zeroinitializer, align 4, !dbg !64
@.str.8.24 = private unnamed_addr constant [77 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/master.h:%d Error: tick occurred\0A\00", align 1
@timestamp_check.25 = internal global i64 0, align 8, !dbg !72
@.str.41 = private unnamed_addr constant [80 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/mailbox_r.c:%d Error: tick occurred\0A\00", align 1
@timestamp_check.42 = internal global i64 0, align 8, !dbg !239
@PIPE_NOBUFF = dso_local global %struct.k_pipe { i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_k_pipe_buf_PIPE_NOBUFF, i32 0, i32 0), i32 0, i32 0, i32 0, i32 0, %struct.k_spinlock zeroinitializer, %struct.anon.3 { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_NOBUFF to i8*), i64 24) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_NOBUFF to i8*), i64 24) to %struct._dnode*) } } }, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_NOBUFF to i8*), i64 32) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_NOBUFF to i8*), i64 32) to %struct._dnode*) } } } }, i8 0 }, section "._k_pipe.static.PIPE_NOBUFF", align 4, !dbg !244
@_k_pipe_buf_PIPE_NOBUFF = internal global [0 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.20", align 4, !dbg !536
@PIPE_SMALLBUFF = dso_local global %struct.k_pipe { i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_k_pipe_buf_PIPE_SMALLBUFF, i32 0, i32 0), i32 256, i32 0, i32 0, i32 0, %struct.k_spinlock zeroinitializer, %struct.anon.3 { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_SMALLBUFF to i8*), i64 24) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_SMALLBUFF to i8*), i64 24) to %struct._dnode*) } } }, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_SMALLBUFF to i8*), i64 32) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_SMALLBUFF to i8*), i64 32) to %struct._dnode*) } } } }, i8 0 }, section "._k_pipe.static.PIPE_SMALLBUFF", align 4, !dbg !483
@_k_pipe_buf_PIPE_SMALLBUFF = internal global [256 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.21", align 4, !dbg !541
@PIPE_BIGBUFF = dso_local global %struct.k_pipe { i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @_k_pipe_buf_PIPE_BIGBUFF, i32 0, i32 0), i32 4096, i32 0, i32 0, i32 0, %struct.k_spinlock zeroinitializer, %struct.anon.3 { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_BIGBUFF to i8*), i64 24) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_BIGBUFF to i8*), i64 24) to %struct._dnode*) } } }, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_BIGBUFF to i8*), i64 32) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_pipe* @PIPE_BIGBUFF to i8*), i64 32) to %struct._dnode*) } } } }, i8 0 }, section "._k_pipe.static.PIPE_BIGBUFF", align 4, !dbg !485
@_k_pipe_buf_PIPE_BIGBUFF = internal global [4096 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.22", align 4, !dbg !544
@test_pipes = dso_local global [3 x %struct.k_pipe*] [%struct.k_pipe* @PIPE_NOBUFF, %struct.k_pipe* @PIPE_SMALLBUFF, %struct.k_pipe* @PIPE_BIGBUFF], align 4, !dbg !253
@newline = dso_local constant [2 x i8] c"\0A\00", align 1, !dbg !296
@_k_thread_obj_RECVTASK = dso_local global %struct.k_thread.82 zeroinitializer, align 8, !dbg !515
@_k_thread_stack_RECVTASK = dso_local global [1024 x %struct.z_thread_stack_element] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.2", align 8, !dbg !510
@_k_thread_data_RECVTASK = dso_local global %struct._static_thread_data { %struct.k_thread.82* @_k_thread_obj_RECVTASK, %struct.z_thread_stack_element* getelementptr inbounds ([1024 x %struct.z_thread_stack_element], [1024 x %struct.z_thread_stack_element]* @_k_thread_stack_RECVTASK, i32 0, i32 0), i32 1024, void (i8*, i8*, i8*)* @recvtask, i8* null, i8* null, i8* null, i32 5, i32 0, i32 0, void ()* null, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.53, i32 0, i32 0) }, section ".__static_thread_data.static._k_thread_data_RECVTASK", align 4, !dbg !300
@.str.53 = private unnamed_addr constant [9 x i8] c"RECVTASK\00", align 1
@RECVTASK = dso_local constant %struct.k_thread.82* @_k_thread_obj_RECVTASK, align 4, !dbg !416
@DEMOQX1 = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @DEMOQX1, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @DEMOQX1, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 1, i32 500, i8* getelementptr inbounds ([500 x i8], [500 x i8]* @_k_fifo_buf_DEMOQX1, i32 0, i32 0), i8* getelementptr (i8, i8* getelementptr inbounds ([500 x i8], [500 x i8]* @_k_fifo_buf_DEMOQX1, i32 0, i32 0), i64 500), i8* getelementptr inbounds ([500 x i8], [500 x i8]* @_k_fifo_buf_DEMOQX1, i32 0, i32 0), i8* getelementptr inbounds ([500 x i8], [500 x i8]* @_k_fifo_buf_DEMOQX1, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.DEMOQX1", align 4, !dbg !420
@_k_fifo_buf_DEMOQX1 = internal global [500 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.3", align 4, !dbg !517
@DEMOQX4 = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @DEMOQX4, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @DEMOQX4, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 4, i32 500, i8* getelementptr inbounds ([2000 x i8], [2000 x i8]* @_k_fifo_buf_DEMOQX4, i32 0, i32 0), i8* getelementptr (i8, i8* getelementptr inbounds ([2000 x i8], [2000 x i8]* @_k_fifo_buf_DEMOQX4, i32 0, i32 0), i64 2000), i8* getelementptr inbounds ([2000 x i8], [2000 x i8]* @_k_fifo_buf_DEMOQX4, i32 0, i32 0), i8* getelementptr inbounds ([2000 x i8], [2000 x i8]* @_k_fifo_buf_DEMOQX4, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.DEMOQX4", align 4, !dbg !435
@_k_fifo_buf_DEMOQX4 = internal global [2000 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.4", align 4, !dbg !522
@MB_COMM = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @MB_COMM, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @MB_COMM, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 12, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_MB_COMM, i32 0, i32 0), i8* getelementptr (i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_MB_COMM, i32 0, i32 0), i64 12), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_MB_COMM, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_MB_COMM, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.MB_COMM", align 4, !dbg !437
@_k_fifo_buf_MB_COMM = internal global [12 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.5", align 4, !dbg !527
@CH_COMM = dso_local global %struct.k_msgq { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @CH_COMM, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_msgq, %struct.k_msgq* @CH_COMM, i32 0, i32 0, i32 0) } } }, %struct.k_spinlock zeroinitializer, i32 12, i32 1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_CH_COMM, i32 0, i32 0), i8* getelementptr (i8, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_CH_COMM, i32 0, i32 0), i64 12), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_CH_COMM, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @_k_fifo_buf_CH_COMM, i32 0, i32 0), i32 0, i8 0 }, section "._k_msgq.static.CH_COMM", align 4, !dbg !439
@_k_fifo_buf_CH_COMM = internal global [12 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.6", align 4, !dbg !532
@MAP1 = dso_local global %struct.k_mem_slab { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @MAP1, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mem_slab, %struct.k_mem_slab* @MAP1, i32 0, i32 0, i32 0) } } }, i32 2, i32 16, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @_k_mem_slab_buf_MAP1, i32 0, i32 0), i8* null, i32 0 }, section "._k_mem_slab.static.MAP1", align 4, !dbg !441
@_k_mem_slab_buf_MAP1 = dso_local global [32 x i8] zeroinitializer, section ".noinit.\22/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c\22.7", align 4, !dbg !534
@SEM0 = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM0, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM0, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.SEM0", align 4, !dbg !451
@SEM1 = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM1, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM1, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.SEM1", align 4, !dbg !458
@SEM2 = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM2, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM2, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.SEM2", align 4, !dbg !460
@SEM3 = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM3, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM3, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.SEM3", align 4, !dbg !462
@SEM4 = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM4, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @SEM4, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.SEM4", align 4, !dbg !464
@STARTRCV = dso_local global %struct.k_sem { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @STARTRCV, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_sem, %struct.k_sem* @STARTRCV, i32 0, i32 0, i32 0) } } }, i32 0, i32 1 }, section "._k_sem.static.STARTRCV", align 4, !dbg !466
@MAILB1 = dso_local global %struct.k_mbox { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mbox, %struct.k_mbox* @MAILB1, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mbox, %struct.k_mbox* @MAILB1, i32 0, i32 0, i32 0) } } }, %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_mbox* @MAILB1 to i8*), i64 8) to %struct._dnode*) }, %union.anon.0 { %struct._dnode* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.k_mbox* @MAILB1 to i8*), i64 8) to %struct._dnode*) } } }, %struct.k_spinlock zeroinitializer }, section "._k_mbox.static.MAILB1", align 4, !dbg !468
@DEMO_MUTEX = dso_local global %struct.k_mutex { %struct._wait_q_t { %struct._dnode { %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @DEMO_MUTEX, i32 0, i32 0, i32 0) }, %union.anon.0 { %struct._dnode* getelementptr inbounds (%struct.k_mutex, %struct.k_mutex* @DEMO_MUTEX, i32 0, i32 0, i32 0) } } }, %struct.k_thread.82* null, i32 0, i32 15 }, section "._k_mutex.static.DEMO_MUTEX", align 4, !dbg !475
@kheap_poolheap_DEMOPOOL = dso_local global [84 x i8] zeroinitializer, align 4, !dbg !547
@poolheap_DEMOPOOL = dso_local global %struct.k_heap.91 { %struct.sys_heap.92 { %struct.z_heap.93* null, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @kheap_poolheap_DEMOPOOL, i32 0, i32 0), i32 84 }, %struct._wait_q_t zeroinitializer, %struct.k_spinlock zeroinitializer }, section "._k_heap.static.poolheap_DEMOPOOL", align 4, !dbg !487
@DEMOPOOL = dso_local global %struct.k_mem_pool.86 { %struct.k_heap.91* @poolheap_DEMOPOOL }, align 4, !dbg !489
@output_file = dso_local global i32* null, align 4, !dbg !506
@msg = dso_local global [256 x i8] zeroinitializer, align 1, !dbg !491
@data_bench = dso_local global [4096 x i8] zeroinitializer, align 1, !dbg !496
@sline = dso_local global [257 x i8] zeroinitializer, align 1, !dbg !501
@tm_off = dso_local global i32 0, align 4, !dbg !508
@llvm.used = appending global [18 x i8*] [i8* bitcast (%struct._static_thread_data* @_k_thread_data_RECVTASK to i8*), i8* bitcast (%struct.k_msgq* @DEMOQX1 to i8*), i8* bitcast (%struct.k_msgq* @DEMOQX4 to i8*), i8* bitcast (%struct.k_msgq* @MB_COMM to i8*), i8* bitcast (%struct.k_msgq* @CH_COMM to i8*), i8* bitcast (%struct.k_mem_slab* @MAP1 to i8*), i8* bitcast (%struct.k_sem* @SEM0 to i8*), i8* bitcast (%struct.k_sem* @SEM1 to i8*), i8* bitcast (%struct.k_sem* @SEM2 to i8*), i8* bitcast (%struct.k_sem* @SEM3 to i8*), i8* bitcast (%struct.k_sem* @SEM4 to i8*), i8* bitcast (%struct.k_sem* @STARTRCV to i8*), i8* bitcast (%struct.k_mbox* @MAILB1 to i8*), i8* bitcast (%struct.k_mutex* @DEMO_MUTEX to i8*), i8* bitcast (%struct.k_pipe* @PIPE_NOBUFF to i8*), i8* bitcast (%struct.k_pipe* @PIPE_SMALLBUFF to i8*), i8* bitcast (%struct.k_pipe* @PIPE_BIGBUFF to i8*), i8* bitcast (%struct.k_heap.91* @poolheap_DEMOPOOL to i8*)], section "llvm.metadata"
@.str.1.74 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.2.75 = private unnamed_addr constant [81 x i8] c"|          S I M P L E   S E R V I C E    M E A S U R E M E N T S  |  nsec    |\0A\00", align 1
@.str.3.76 = private unnamed_addr constant [81 x i8] c"|         END OF TESTS                                                        |\0A\00", align 1
@.str.4.77 = private unnamed_addr constant [30 x i8] c"PROJECT EXECUTION SUCCESSFUL\0A\00", align 1
@.str.82 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1.84 = private unnamed_addr constant [15 x i8] c"| %-65s|%10u|\0A\00", align 1
@.str.2.85 = private unnamed_addr constant [31 x i8] c"Error: Slab allocation failed.\00", align 1
@.str.3.89 = private unnamed_addr constant [38 x i8] c"average alloc and dealloc memory page\00", align 1
@.str.4.92 = private unnamed_addr constant [77 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/master.h:%d Error: tick occurred\0A\00", align 1
@timestamp_check.93 = internal global i64 0, align 8, !dbg !552
@.str.105 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1.110 = private unnamed_addr constant [15 x i8] c"| %-65s|%10u|\0A\00", align 1
@.str.2.111 = private unnamed_addr constant [44 x i8] c"average alloc and dealloc memory pool block\00", align 1
@.str.3.114 = private unnamed_addr constant [77 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/master.h:%d Error: tick occurred\0A\00", align 1
@timestamp_check.115 = internal global i64 0, align 8, !dbg !557
@.str.127 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1.132 = private unnamed_addr constant [15 x i8] c"| %-65s|%10u|\0A\00", align 1
@.str.2.133 = private unnamed_addr constant [30 x i8] c"average lock and unlock mutex\00", align 1
@.str.3.136 = private unnamed_addr constant [77 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/master.h:%d Error: tick occurred\0A\00", align 1
@timestamp_check.137 = internal global i64 0, align 8, !dbg !562
@.str.151 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1.152 = private unnamed_addr constant [81 x i8] c"|                   P I P E   M E A S U R E M E N T S                         |\0A\00", align 1
@.str.2.153 = private unnamed_addr constant [81 x i8] c"| Send data into a pipe towards a receiving high priority task and wait       |\0A\00", align 1
@.str.3.154 = private unnamed_addr constant [81 x i8] c"|                          matching sizes (_ALL_N)                            |\0A\00", align 1
@.str.4.155 = private unnamed_addr constant [81 x i8] c"|   size(B) |       time/packet (nsec)       |          KB/sec                |\0A\00", align 1
@.str.5.156 = private unnamed_addr constant [81 x i8] c"| put | get |  no buf  | small buf| big buf  |  no buf  | small buf| big buf  |\0A\00", align 1
@.str.6.158 = private unnamed_addr constant [41 x i8] c"|%5u|%5u|%10u|%10u|%10u|%10u|%10u|%10u|\0A\00", align 1
@.str.7.159 = private unnamed_addr constant [81 x i8] c"|                      non-matching sizes (1_TO_N) to higher priority         |\0A\00", align 1
@.str.8.160 = private unnamed_addr constant [81 x i8] c"|                      non-matching sizes (1_TO_N) to lower priority          |\0A\00", align 1
@.str.9.161 = private unnamed_addr constant [41 x i8] c"|%5u|%5d|%10u|%10u|%10u|%10u|%10u|%10u|\0A\00", align 1
@.str.10 = private unnamed_addr constant [49 x i8] c"| Timer overflow.Results are invalid            \00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"| Tick occurred. Results may be inaccurate       \00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"                             |\0A\00", align 1
@timestamp_check.166 = internal global i64 0, align 8, !dbg !567
@.str.185 = private unnamed_addr constant [50 x i8] c"| Timer overflow. Results are invalid            \00", align 1
@.str.1.186 = private unnamed_addr constant [50 x i8] c"| Tick occurred. Results may be inaccurate       \00", align 1
@.str.2.187 = private unnamed_addr constant [32 x i8] c"                             |\0A\00", align 1
@timestamp_check.188 = internal global i64 0, align 8, !dbg !579
@data_recv = dso_local global [4096 x i8] zeroinitializer, align 1, !dbg !584
@.str.206 = private unnamed_addr constant [81 x i8] c"|-----------------------------------------------------------------------------|\0A\00", align 1
@.str.1.212 = private unnamed_addr constant [15 x i8] c"| %-65s|%10u|\0A\00", align 1
@.str.2.213 = private unnamed_addr constant [17 x i8] c"signal semaphore\00", align 1
@.str.3.215 = private unnamed_addr constant [32 x i8] c"signal to waiting high pri task\00", align 1
@.str.4.216 = private unnamed_addr constant [46 x i8] c"signal to waiting high pri task, with timeout\00", align 1
@.str.5.220 = private unnamed_addr constant [77 x i8] c"/home/kenny/ara/appl/Zephyr/app_kernel/src/master.h:%d Error: tick occurred\0A\00", align 1
@timestamp_check.221 = internal global i64 0, align 8, !dbg !591

; Function Attrs: noinline nounwind optnone
define dso_local void @queue_test() #0 !dbg !607 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_timeout_t, align 8
  %6 = alloca %struct.k_timeout_t, align 8
  %7 = alloca %struct.k_timeout_t, align 8
  %8 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !610, metadata !DIExpression()), !dbg !611
  call void @llvm.dbg.declare(metadata i32* %2, metadata !612, metadata !DIExpression()), !dbg !613
  %9 = load i32*, i32** @output_file, align 4, !dbg !614
  %10 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str, i32 0, i32 0), i32* %9) #3, !dbg !614
  %11 = call i32 @BENCH_START() #3, !dbg !615
  store i32 %11, i32* %1, align 4, !dbg !616
  store i32 0, i32* %2, align 4, !dbg !617
  br label %12, !dbg !619

12:                                               ; preds = %21, %0
  %13 = load i32, i32* %2, align 4, !dbg !620
  %14 = icmp slt i32 %13, 500, !dbg !622
  br i1 %14, label %15, label %24, !dbg !623

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !624
  store i64 -1, i64* %16, align 8, !dbg !624
  %17 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !626
  %18 = bitcast i64* %17 to [1 x i64]*, !dbg !626
  %19 = load [1 x i64], [1 x i64]* %18, align 8, !dbg !626
  %20 = call i32 @k_msgq_put(%struct.k_msgq* @DEMOQX1, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), [1 x i64] %19) #3, !dbg !626
  br label %21, !dbg !627

21:                                               ; preds = %15
  %22 = load i32, i32* %2, align 4, !dbg !628
  %23 = add i32 %22, 1, !dbg !628
  store i32 %23, i32* %2, align 4, !dbg !628
  br label %12, !dbg !629, !llvm.loop !630

24:                                               ; preds = %12
  %25 = load i32, i32* %1, align 4, !dbg !632
  %26 = call i32 @TIME_STAMP_DELTA_GET(i32 %25) #3, !dbg !633
  store i32 %26, i32* %1, align 4, !dbg !634
  %27 = load i32, i32* %1, align 4, !dbg !635
  %28 = zext i32 %27 to i64, !dbg !635
  %29 = call i64 @k_cyc_to_ns_floor64(i64 %28) #3, !dbg !635
  %30 = udiv i64 %29, 500, !dbg !635
  %31 = trunc i64 %30 to i32, !dbg !635
  %32 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.2, i32 0, i32 0), i32 %31) #3, !dbg !635
  %33 = load i32*, i32** @output_file, align 4, !dbg !635
  %34 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %33) #3, !dbg !635
  %35 = call i32 @BENCH_START() #3, !dbg !637
  store i32 %35, i32* %1, align 4, !dbg !638
  store i32 0, i32* %2, align 4, !dbg !639
  br label %36, !dbg !641

36:                                               ; preds = %45, %24
  %37 = load i32, i32* %2, align 4, !dbg !642
  %38 = icmp slt i32 %37, 500, !dbg !644
  br i1 %38, label %39, label %48, !dbg !645

39:                                               ; preds = %36
  %40 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !646
  store i64 -1, i64* %40, align 8, !dbg !646
  %41 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !648
  %42 = bitcast i64* %41 to [1 x i64]*, !dbg !648
  %43 = load [1 x i64], [1 x i64]* %42, align 8, !dbg !648
  %44 = call i32 @k_msgq_get(%struct.k_msgq* @DEMOQX1, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), [1 x i64] %43) #3, !dbg !648
  br label %45, !dbg !649

45:                                               ; preds = %39
  %46 = load i32, i32* %2, align 4, !dbg !650
  %47 = add i32 %46, 1, !dbg !650
  store i32 %47, i32* %2, align 4, !dbg !650
  br label %36, !dbg !651, !llvm.loop !652

48:                                               ; preds = %36
  %49 = load i32, i32* %1, align 4, !dbg !654
  %50 = call i32 @TIME_STAMP_DELTA_GET(i32 %49) #3, !dbg !655
  store i32 %50, i32* %1, align 4, !dbg !656
  call void @check_result() #3, !dbg !657
  %51 = load i32, i32* %1, align 4, !dbg !658
  %52 = zext i32 %51 to i64, !dbg !658
  %53 = call i64 @k_cyc_to_ns_floor64(i64 %52) #3, !dbg !658
  %54 = udiv i64 %53, 500, !dbg !658
  %55 = trunc i64 %54 to i32, !dbg !658
  %56 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 %55) #3, !dbg !658
  %57 = load i32*, i32** @output_file, align 4, !dbg !658
  %58 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %57) #3, !dbg !658
  %59 = call i32 @BENCH_START() #3, !dbg !660
  store i32 %59, i32* %1, align 4, !dbg !661
  store i32 0, i32* %2, align 4, !dbg !662
  br label %60, !dbg !664

60:                                               ; preds = %69, %48
  %61 = load i32, i32* %2, align 4, !dbg !665
  %62 = icmp slt i32 %61, 500, !dbg !667
  br i1 %62, label %63, label %72, !dbg !668

63:                                               ; preds = %60
  %64 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !669
  store i64 -1, i64* %64, align 8, !dbg !669
  %65 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !671
  %66 = bitcast i64* %65 to [1 x i64]*, !dbg !671
  %67 = load [1 x i64], [1 x i64]* %66, align 8, !dbg !671
  %68 = call i32 @k_msgq_put(%struct.k_msgq* @DEMOQX4, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), [1 x i64] %67) #3, !dbg !671
  br label %69, !dbg !672

69:                                               ; preds = %63
  %70 = load i32, i32* %2, align 4, !dbg !673
  %71 = add i32 %70, 1, !dbg !673
  store i32 %71, i32* %2, align 4, !dbg !673
  br label %60, !dbg !674, !llvm.loop !675

72:                                               ; preds = %60
  %73 = load i32, i32* %1, align 4, !dbg !677
  %74 = call i32 @TIME_STAMP_DELTA_GET(i32 %73) #3, !dbg !678
  store i32 %74, i32* %1, align 4, !dbg !679
  call void @check_result() #3, !dbg !680
  %75 = load i32, i32* %1, align 4, !dbg !681
  %76 = zext i32 %75 to i64, !dbg !681
  %77 = call i64 @k_cyc_to_ns_floor64(i64 %76) #3, !dbg !681
  %78 = udiv i64 %77, 500, !dbg !681
  %79 = trunc i64 %78 to i32, !dbg !681
  %80 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0), i32 %79) #3, !dbg !681
  %81 = load i32*, i32** @output_file, align 4, !dbg !681
  %82 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %81) #3, !dbg !681
  %83 = call i32 @BENCH_START() #3, !dbg !683
  store i32 %83, i32* %1, align 4, !dbg !684
  store i32 0, i32* %2, align 4, !dbg !685
  br label %84, !dbg !687

84:                                               ; preds = %93, %72
  %85 = load i32, i32* %2, align 4, !dbg !688
  %86 = icmp slt i32 %85, 500, !dbg !690
  br i1 %86, label %87, label %96, !dbg !691

87:                                               ; preds = %84
  %88 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %6, i32 0, i32 0, !dbg !692
  store i64 -1, i64* %88, align 8, !dbg !692
  %89 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %6, i32 0, i32 0, !dbg !694
  %90 = bitcast i64* %89 to [1 x i64]*, !dbg !694
  %91 = load [1 x i64], [1 x i64]* %90, align 8, !dbg !694
  %92 = call i32 @k_msgq_get(%struct.k_msgq* @DEMOQX4, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), [1 x i64] %91) #3, !dbg !694
  br label %93, !dbg !695

93:                                               ; preds = %87
  %94 = load i32, i32* %2, align 4, !dbg !696
  %95 = add i32 %94, 1, !dbg !696
  store i32 %95, i32* %2, align 4, !dbg !696
  br label %84, !dbg !697, !llvm.loop !698

96:                                               ; preds = %84
  %97 = load i32, i32* %1, align 4, !dbg !700
  %98 = call i32 @TIME_STAMP_DELTA_GET(i32 %97) #3, !dbg !701
  store i32 %98, i32* %1, align 4, !dbg !702
  call void @check_result() #3, !dbg !703
  %99 = load i32, i32* %1, align 4, !dbg !704
  %100 = zext i32 %99 to i64, !dbg !704
  %101 = call i64 @k_cyc_to_ns_floor64(i64 %100) #3, !dbg !704
  %102 = udiv i64 %101, 500, !dbg !704
  %103 = trunc i64 %102 to i32, !dbg !704
  %104 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.5, i32 0, i32 0), i32 %103) #3, !dbg !704
  %105 = load i32*, i32** @output_file, align 4, !dbg !704
  %106 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %105) #3, !dbg !704
  call void @k_sem_give(%struct.k_sem* @STARTRCV) #3, !dbg !706
  %107 = call i32 @BENCH_START() #3, !dbg !707
  store i32 %107, i32* %1, align 4, !dbg !708
  store i32 0, i32* %2, align 4, !dbg !709
  br label %108, !dbg !711

108:                                              ; preds = %117, %96
  %109 = load i32, i32* %2, align 4, !dbg !712
  %110 = icmp slt i32 %109, 500, !dbg !714
  br i1 %110, label %111, label %120, !dbg !715

111:                                              ; preds = %108
  %112 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !716
  store i64 -1, i64* %112, align 8, !dbg !716
  %113 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !718
  %114 = bitcast i64* %113 to [1 x i64]*, !dbg !718
  %115 = load [1 x i64], [1 x i64]* %114, align 8, !dbg !718
  %116 = call i32 @k_msgq_put(%struct.k_msgq* @DEMOQX1, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), [1 x i64] %115) #3, !dbg !718
  br label %117, !dbg !719

117:                                              ; preds = %111
  %118 = load i32, i32* %2, align 4, !dbg !720
  %119 = add i32 %118, 1, !dbg !720
  store i32 %119, i32* %2, align 4, !dbg !720
  br label %108, !dbg !721, !llvm.loop !722

120:                                              ; preds = %108
  %121 = load i32, i32* %1, align 4, !dbg !724
  %122 = call i32 @TIME_STAMP_DELTA_GET(i32 %121) #3, !dbg !725
  store i32 %122, i32* %1, align 4, !dbg !726
  call void @check_result() #3, !dbg !727
  %123 = load i32, i32* %1, align 4, !dbg !728
  %124 = zext i32 %123 to i64, !dbg !728
  %125 = call i64 @k_cyc_to_ns_floor64(i64 %124) #3, !dbg !728
  %126 = udiv i64 %125, 500, !dbg !728
  %127 = trunc i64 %126 to i32, !dbg !728
  %128 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.6, i32 0, i32 0), i32 %127) #3, !dbg !728
  %129 = load i32*, i32** @output_file, align 4, !dbg !728
  %130 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %129) #3, !dbg !728
  %131 = call i32 @BENCH_START() #3, !dbg !730
  store i32 %131, i32* %1, align 4, !dbg !731
  store i32 0, i32* %2, align 4, !dbg !732
  br label %132, !dbg !734

132:                                              ; preds = %141, %120
  %133 = load i32, i32* %2, align 4, !dbg !735
  %134 = icmp slt i32 %133, 500, !dbg !737
  br i1 %134, label %135, label %144, !dbg !738

135:                                              ; preds = %132
  %136 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %8, i32 0, i32 0, !dbg !739
  store i64 -1, i64* %136, align 8, !dbg !739
  %137 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %8, i32 0, i32 0, !dbg !741
  %138 = bitcast i64* %137 to [1 x i64]*, !dbg !741
  %139 = load [1 x i64], [1 x i64]* %138, align 8, !dbg !741
  %140 = call i32 @k_msgq_put(%struct.k_msgq* @DEMOQX4, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), [1 x i64] %139) #3, !dbg !741
  br label %141, !dbg !742

141:                                              ; preds = %135
  %142 = load i32, i32* %2, align 4, !dbg !743
  %143 = add i32 %142, 1, !dbg !743
  store i32 %143, i32* %2, align 4, !dbg !743
  br label %132, !dbg !744, !llvm.loop !745

144:                                              ; preds = %132
  %145 = load i32, i32* %1, align 4, !dbg !747
  %146 = call i32 @TIME_STAMP_DELTA_GET(i32 %145) #3, !dbg !748
  store i32 %146, i32* %1, align 4, !dbg !749
  call void @check_result() #3, !dbg !750
  %147 = load i32, i32* %1, align 4, !dbg !751
  %148 = zext i32 %147 to i64, !dbg !751
  %149 = call i64 @k_cyc_to_ns_floor64(i64 %148) #3, !dbg !751
  %150 = udiv i64 %149, 500, !dbg !751
  %151 = trunc i64 %150 to i32, !dbg !751
  %152 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.7, i32 0, i32 0), i32 %151) #3, !dbg !751
  %153 = load i32*, i32** @output_file, align 4, !dbg !751
  %154 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %153) #3, !dbg !751
  ret void, !dbg !753
}

; Function Attrs: nounwind readnone speculatable
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @fputs(i8*, i32*) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START() #0 !dbg !754 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !757, metadata !DIExpression()), !dbg !758
  call void @bench_test_start() #3, !dbg !759
  %2 = call i32 @TIME_STAMP_DELTA_GET(i32 0) #3, !dbg !760
  store i32 %2, i32* %1, align 4, !dbg !761
  %3 = load i32, i32* %1, align 4, !dbg !762
  ret i32 %3, !dbg !763
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_put(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !764 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !808, metadata !DIExpression()), !dbg !809
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !810, metadata !DIExpression()), !dbg !811
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !812, metadata !DIExpression()), !dbg !813
  br label %9, !dbg !814

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !815, !srcloc !817
  br label %10, !dbg !815

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !818
  %12 = load i8*, i8** %6, align 4, !dbg !819
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !820
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !820
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !820
  %16 = call i32 @z_impl_k_msgq_put(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !820
  ret i32 %16, !dbg !821
}

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET(i32) #0 !dbg !822 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !825, metadata !DIExpression()), !dbg !826
  call void @llvm.dbg.declare(metadata i32* %3, metadata !827, metadata !DIExpression()), !dbg !828
  call void @timestamp_serialize() #3, !dbg !829
  %5 = call i32 @k_cycle_get_32() #3, !dbg !830
  store i32 %5, i32* %3, align 4, !dbg !831
  call void @llvm.dbg.declare(metadata i32* %4, metadata !832, metadata !DIExpression()), !dbg !833
  %6 = load i32, i32* %3, align 4, !dbg !834
  %7 = load i32, i32* %2, align 4, !dbg !835
  %8 = icmp uge i32 %6, %7, !dbg !836
  br i1 %8, label %9, label %13, !dbg !837

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !838
  %11 = load i32, i32* %2, align 4, !dbg !839
  %12 = sub i32 %10, %11, !dbg !840
  br label %18, !dbg !837

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !841
  %15 = sub i32 -1, %14, !dbg !842
  %16 = load i32, i32* %3, align 4, !dbg !843
  %17 = add i32 %15, %16, !dbg !844
  br label %18, !dbg !837

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !837
  store i32 %19, i32* %4, align 4, !dbg !833
  %20 = load i32, i32* %2, align 4, !dbg !845
  %21 = icmp ugt i32 %20, 0, !dbg !847
  br i1 %21, label %22, label %26, !dbg !848

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !849
  %24 = load i32, i32* %4, align 4, !dbg !851
  %25 = sub i32 %24, %23, !dbg !851
  store i32 %25, i32* %4, align 4, !dbg !851
  br label %26, !dbg !852

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !853
  ret i32 %27, !dbg !854
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64(i64) #0 !dbg !855 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !859, metadata !DIExpression()), !dbg !864
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !866, metadata !DIExpression()), !dbg !867
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !868, metadata !DIExpression()), !dbg !869
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !870, metadata !DIExpression()), !dbg !871
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !872, metadata !DIExpression()), !dbg !873
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !874, metadata !DIExpression()), !dbg !875
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !876, metadata !DIExpression()), !dbg !877
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !878, metadata !DIExpression()), !dbg !879
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !880, metadata !DIExpression()), !dbg !881
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !882, metadata !DIExpression()), !dbg !883
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !884, metadata !DIExpression()), !dbg !887
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !888, metadata !DIExpression()), !dbg !889
  %15 = load i64, i64* %14, align 8, !dbg !890
  %16 = call i32 @sys_clock_hw_cycles_per_sec() #3, !dbg !891
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !892
  %18 = trunc i8 %17 to i1, !dbg !892
  br i1 %18, label %19, label %28, !dbg !893

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !894
  %21 = load i32, i32* %4, align 4, !dbg !895
  %22 = icmp ugt i32 %20, %21, !dbg !896
  br i1 %22, label %23, label %28, !dbg !897

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !898
  %25 = load i32, i32* %4, align 4, !dbg !899
  %26 = urem i32 %24, %25, !dbg !900
  %27 = icmp eq i32 %26, 0, !dbg !901
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !902
  %30 = zext i1 %29 to i8, !dbg !879
  store i8 %30, i8* %10, align 1, !dbg !879
  %31 = load i8, i8* %6, align 1, !dbg !903
  %32 = trunc i8 %31 to i1, !dbg !903
  br i1 %32, label %33, label %42, !dbg !904

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !905
  %35 = load i32, i32* %5, align 4, !dbg !906
  %36 = icmp ugt i32 %34, %35, !dbg !907
  br i1 %36, label %37, label %42, !dbg !908

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !909
  %39 = load i32, i32* %5, align 4, !dbg !910
  %40 = urem i32 %38, %39, !dbg !911
  %41 = icmp eq i32 %40, 0, !dbg !912
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !902
  %44 = zext i1 %43 to i8, !dbg !881
  store i8 %44, i8* %11, align 1, !dbg !881
  %45 = load i32, i32* %4, align 4, !dbg !913
  %46 = load i32, i32* %5, align 4, !dbg !915
  %47 = icmp eq i32 %45, %46, !dbg !916
  br i1 %47, label %48, label %59, !dbg !917

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !918
  %50 = trunc i8 %49 to i1, !dbg !918
  br i1 %50, label %51, label %55, !dbg !918

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !920
  %53 = trunc i64 %52 to i32, !dbg !921
  %54 = zext i32 %53 to i64, !dbg !922
  br label %57, !dbg !918

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !923
  br label %57, !dbg !918

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !918
  store i64 %58, i64* %2, align 8, !dbg !924
  br label %161, !dbg !924

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !883
  %60 = load i8, i8* %10, align 1, !dbg !925
  %61 = trunc i8 %60 to i1, !dbg !925
  br i1 %61, label %88, label %62, !dbg !926

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !927
  %64 = trunc i8 %63 to i1, !dbg !927
  br i1 %64, label %65, label %69, !dbg !927

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !928
  %67 = load i32, i32* %5, align 4, !dbg !929
  %68 = udiv i32 %66, %67, !dbg !930
  br label %71, !dbg !927

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !931
  br label %71, !dbg !927

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !927
  store i32 %72, i32* %13, align 4, !dbg !887
  %73 = load i8, i8* %8, align 1, !dbg !932
  %74 = trunc i8 %73 to i1, !dbg !932
  br i1 %74, label %75, label %79, !dbg !934

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !935
  %77 = sub i32 %76, 1, !dbg !937
  %78 = zext i32 %77 to i64, !dbg !935
  store i64 %78, i64* %12, align 8, !dbg !938
  br label %87, !dbg !939

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !940
  %81 = trunc i8 %80 to i1, !dbg !940
  br i1 %81, label %82, label %86, !dbg !942

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !943
  %84 = udiv i32 %83, 2, !dbg !945
  %85 = zext i32 %84 to i64, !dbg !943
  store i64 %85, i64* %12, align 8, !dbg !946
  br label %86, !dbg !947

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !948

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !949
  %90 = trunc i8 %89 to i1, !dbg !949
  br i1 %90, label %91, label %115, !dbg !951

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !952
  %93 = load i64, i64* %3, align 8, !dbg !954
  %94 = add i64 %93, %92, !dbg !954
  store i64 %94, i64* %3, align 8, !dbg !954
  %95 = load i8, i8* %7, align 1, !dbg !955
  %96 = trunc i8 %95 to i1, !dbg !955
  br i1 %96, label %97, label %108, !dbg !957

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !958
  %99 = icmp ult i64 %98, 4294967296, !dbg !959
  br i1 %99, label %100, label %108, !dbg !960

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !961
  %102 = trunc i64 %101 to i32, !dbg !963
  %103 = load i32, i32* %4, align 4, !dbg !964
  %104 = load i32, i32* %5, align 4, !dbg !965
  %105 = udiv i32 %103, %104, !dbg !966
  %106 = udiv i32 %102, %105, !dbg !967
  %107 = zext i32 %106 to i64, !dbg !968
  store i64 %107, i64* %2, align 8, !dbg !969
  br label %161, !dbg !969

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !970
  %110 = load i32, i32* %4, align 4, !dbg !972
  %111 = load i32, i32* %5, align 4, !dbg !973
  %112 = udiv i32 %110, %111, !dbg !974
  %113 = zext i32 %112 to i64, !dbg !975
  %114 = udiv i64 %109, %113, !dbg !976
  store i64 %114, i64* %2, align 8, !dbg !977
  br label %161, !dbg !977

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !978
  %117 = trunc i8 %116 to i1, !dbg !978
  br i1 %117, label %118, label %136, !dbg !980

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !981
  %120 = trunc i8 %119 to i1, !dbg !981
  br i1 %120, label %121, label %129, !dbg !984

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !985
  %123 = trunc i64 %122 to i32, !dbg !987
  %124 = load i32, i32* %5, align 4, !dbg !988
  %125 = load i32, i32* %4, align 4, !dbg !989
  %126 = udiv i32 %124, %125, !dbg !990
  %127 = mul i32 %123, %126, !dbg !991
  %128 = zext i32 %127 to i64, !dbg !992
  store i64 %128, i64* %2, align 8, !dbg !993
  br label %161, !dbg !993

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !994
  %131 = load i32, i32* %5, align 4, !dbg !996
  %132 = load i32, i32* %4, align 4, !dbg !997
  %133 = udiv i32 %131, %132, !dbg !998
  %134 = zext i32 %133 to i64, !dbg !999
  %135 = mul i64 %130, %134, !dbg !1000
  store i64 %135, i64* %2, align 8, !dbg !1001
  br label %161, !dbg !1001

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !1002
  %138 = trunc i8 %137 to i1, !dbg !1002
  br i1 %138, label %139, label %151, !dbg !1005

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !1006
  %141 = load i32, i32* %5, align 4, !dbg !1008
  %142 = zext i32 %141 to i64, !dbg !1008
  %143 = mul i64 %140, %142, !dbg !1009
  %144 = load i64, i64* %12, align 8, !dbg !1010
  %145 = add i64 %143, %144, !dbg !1011
  %146 = load i32, i32* %4, align 4, !dbg !1012
  %147 = zext i32 %146 to i64, !dbg !1012
  %148 = udiv i64 %145, %147, !dbg !1013
  %149 = trunc i64 %148 to i32, !dbg !1014
  %150 = zext i32 %149 to i64, !dbg !1014
  store i64 %150, i64* %2, align 8, !dbg !1015
  br label %161, !dbg !1015

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !1016
  %153 = load i32, i32* %5, align 4, !dbg !1018
  %154 = zext i32 %153 to i64, !dbg !1018
  %155 = mul i64 %152, %154, !dbg !1019
  %156 = load i64, i64* %12, align 8, !dbg !1020
  %157 = add i64 %155, %156, !dbg !1021
  %158 = load i32, i32* %4, align 4, !dbg !1022
  %159 = zext i32 %158 to i64, !dbg !1022
  %160 = udiv i64 %157, %159, !dbg !1023
  store i64 %160, i64* %2, align 8, !dbg !1024
  br label %161, !dbg !1024

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !1025
  ret i64 %162, !dbg !1026
}

declare dso_local i32 @snprintf(i8*, i32, i8*, ...) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_get(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !1027 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !1030, metadata !DIExpression()), !dbg !1031
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1032, metadata !DIExpression()), !dbg !1033
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !1034, metadata !DIExpression()), !dbg !1035
  br label %9, !dbg !1036

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1037, !srcloc !1039
  br label %10, !dbg !1037

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !1040
  %12 = load i8*, i8** %6, align 4, !dbg !1041
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !1042
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !1042
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !1042
  %16 = call i32 @z_impl_k_msgq_get(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !1042
  ret i32 %16, !dbg !1043
}

; Function Attrs: noinline nounwind optnone
define internal void @check_result() #0 !dbg !1044 {
  %1 = call i32 @bench_test_end() #3, !dbg !1045
  %2 = icmp slt i32 %1, 0, !dbg !1047
  br i1 %2, label %3, label %7, !dbg !1048

3:                                                ; preds = %0
  %4 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.8, i32 0, i32 0), i32 187) #3, !dbg !1049
  %5 = load i32*, i32** @output_file, align 4, !dbg !1049
  %6 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %5) #3, !dbg !1049
  br label %7, !dbg !1052

7:                                                ; preds = %3, %0
  ret void, !dbg !1053
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_give(%struct.k_sem*) #0 !dbg !1054 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !1063, metadata !DIExpression()), !dbg !1064
  br label %3, !dbg !1065

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1066, !srcloc !1068
  br label %4, !dbg !1066

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !1069
  call void @z_impl_k_sem_give(%struct.k_sem* %5) #3, !dbg !1070
  ret void, !dbg !1071
}

declare dso_local void @z_impl_k_sem_give(%struct.k_sem*) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end() #0 !dbg !1072 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta(i64* @timestamp_check) #3, !dbg !1075
  store i64 %2, i64* @timestamp_check, align 8, !dbg !1076
  %3 = load i64, i64* @timestamp_check, align 8, !dbg !1077
  %4 = icmp sge i64 %3, 1000, !dbg !1079
  br i1 %4, label %5, label %6, !dbg !1080

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !1081
  br label %7, !dbg !1081

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !1083
  br label %7, !dbg !1083

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !1084
  ret i32 %8, !dbg !1084
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta(i64*) #0 !dbg !1085 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !1089, metadata !DIExpression()), !dbg !1090
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1091, metadata !DIExpression()), !dbg !1092
  call void @llvm.dbg.declare(metadata i64* %4, metadata !1093, metadata !DIExpression()), !dbg !1094
  %5 = call i64 @k_uptime_get() #3, !dbg !1095
  store i64 %5, i64* %3, align 8, !dbg !1096
  %6 = load i64, i64* %3, align 8, !dbg !1097
  %7 = load i64*, i64** %2, align 4, !dbg !1098
  %8 = load i64, i64* %7, align 8, !dbg !1099
  %9 = sub i64 %6, %8, !dbg !1100
  store i64 %9, i64* %4, align 8, !dbg !1101
  %10 = load i64, i64* %3, align 8, !dbg !1102
  %11 = load i64*, i64** %2, align 4, !dbg !1103
  store i64 %10, i64* %11, align 8, !dbg !1104
  %12 = load i64, i64* %4, align 8, !dbg !1105
  ret i64 %12, !dbg !1106
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get() #0 !dbg !1107 {
  %1 = call i64 @k_uptime_ticks() #3, !dbg !1110
  %2 = call i64 @k_ticks_to_ms_floor64(i64 %1) #3, !dbg !1111
  ret i64 %2, !dbg !1112
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks() #0 !dbg !1113 {
  br label %1, !dbg !1114

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1115, !srcloc !1117
  br label %2, !dbg !1115

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !1118
  ret i64 %3, !dbg !1119
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64(i64) #0 !dbg !1120 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !859, metadata !DIExpression()), !dbg !1121
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !866, metadata !DIExpression()), !dbg !1123
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !868, metadata !DIExpression()), !dbg !1124
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !870, metadata !DIExpression()), !dbg !1125
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !872, metadata !DIExpression()), !dbg !1126
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !874, metadata !DIExpression()), !dbg !1127
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !876, metadata !DIExpression()), !dbg !1128
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !878, metadata !DIExpression()), !dbg !1129
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !880, metadata !DIExpression()), !dbg !1130
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !882, metadata !DIExpression()), !dbg !1131
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !884, metadata !DIExpression()), !dbg !1132
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1133, metadata !DIExpression()), !dbg !1134
  %15 = load i64, i64* %14, align 8, !dbg !1135
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !1136
  %17 = trunc i8 %16 to i1, !dbg !1136
  br i1 %17, label %18, label %27, !dbg !1137

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !1138
  %20 = load i32, i32* %4, align 4, !dbg !1139
  %21 = icmp ugt i32 %19, %20, !dbg !1140
  br i1 %21, label %22, label %27, !dbg !1141

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !1142
  %24 = load i32, i32* %4, align 4, !dbg !1143
  %25 = urem i32 %23, %24, !dbg !1144
  %26 = icmp eq i32 %25, 0, !dbg !1145
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !1146
  %29 = zext i1 %28 to i8, !dbg !1129
  store i8 %29, i8* %10, align 1, !dbg !1129
  %30 = load i8, i8* %6, align 1, !dbg !1147
  %31 = trunc i8 %30 to i1, !dbg !1147
  br i1 %31, label %32, label %41, !dbg !1148

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !1149
  %34 = load i32, i32* %5, align 4, !dbg !1150
  %35 = icmp ugt i32 %33, %34, !dbg !1151
  br i1 %35, label %36, label %41, !dbg !1152

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !1153
  %38 = load i32, i32* %5, align 4, !dbg !1154
  %39 = urem i32 %37, %38, !dbg !1155
  %40 = icmp eq i32 %39, 0, !dbg !1156
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !1146
  %43 = zext i1 %42 to i8, !dbg !1130
  store i8 %43, i8* %11, align 1, !dbg !1130
  %44 = load i32, i32* %4, align 4, !dbg !1157
  %45 = load i32, i32* %5, align 4, !dbg !1158
  %46 = icmp eq i32 %44, %45, !dbg !1159
  br i1 %46, label %47, label %58, !dbg !1160

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !1161
  %49 = trunc i8 %48 to i1, !dbg !1161
  br i1 %49, label %50, label %54, !dbg !1161

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !1162
  %52 = trunc i64 %51 to i32, !dbg !1163
  %53 = zext i32 %52 to i64, !dbg !1164
  br label %56, !dbg !1161

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !1165
  br label %56, !dbg !1161

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !1161
  store i64 %57, i64* %2, align 8, !dbg !1166
  br label %160, !dbg !1166

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !1131
  %59 = load i8, i8* %10, align 1, !dbg !1167
  %60 = trunc i8 %59 to i1, !dbg !1167
  br i1 %60, label %87, label %61, !dbg !1168

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !1169
  %63 = trunc i8 %62 to i1, !dbg !1169
  br i1 %63, label %64, label %68, !dbg !1169

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !1170
  %66 = load i32, i32* %5, align 4, !dbg !1171
  %67 = udiv i32 %65, %66, !dbg !1172
  br label %70, !dbg !1169

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !1173
  br label %70, !dbg !1169

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !1169
  store i32 %71, i32* %13, align 4, !dbg !1132
  %72 = load i8, i8* %8, align 1, !dbg !1174
  %73 = trunc i8 %72 to i1, !dbg !1174
  br i1 %73, label %74, label %78, !dbg !1175

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !1176
  %76 = sub i32 %75, 1, !dbg !1177
  %77 = zext i32 %76 to i64, !dbg !1176
  store i64 %77, i64* %12, align 8, !dbg !1178
  br label %86, !dbg !1179

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !1180
  %80 = trunc i8 %79 to i1, !dbg !1180
  br i1 %80, label %81, label %85, !dbg !1181

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !1182
  %83 = udiv i32 %82, 2, !dbg !1183
  %84 = zext i32 %83 to i64, !dbg !1182
  store i64 %84, i64* %12, align 8, !dbg !1184
  br label %85, !dbg !1185

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !1186

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !1187
  %89 = trunc i8 %88 to i1, !dbg !1187
  br i1 %89, label %90, label %114, !dbg !1188

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !1189
  %92 = load i64, i64* %3, align 8, !dbg !1190
  %93 = add i64 %92, %91, !dbg !1190
  store i64 %93, i64* %3, align 8, !dbg !1190
  %94 = load i8, i8* %7, align 1, !dbg !1191
  %95 = trunc i8 %94 to i1, !dbg !1191
  br i1 %95, label %96, label %107, !dbg !1192

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !1193
  %98 = icmp ult i64 %97, 4294967296, !dbg !1194
  br i1 %98, label %99, label %107, !dbg !1195

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !1196
  %101 = trunc i64 %100 to i32, !dbg !1197
  %102 = load i32, i32* %4, align 4, !dbg !1198
  %103 = load i32, i32* %5, align 4, !dbg !1199
  %104 = udiv i32 %102, %103, !dbg !1200
  %105 = udiv i32 %101, %104, !dbg !1201
  %106 = zext i32 %105 to i64, !dbg !1202
  store i64 %106, i64* %2, align 8, !dbg !1203
  br label %160, !dbg !1203

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !1204
  %109 = load i32, i32* %4, align 4, !dbg !1205
  %110 = load i32, i32* %5, align 4, !dbg !1206
  %111 = udiv i32 %109, %110, !dbg !1207
  %112 = zext i32 %111 to i64, !dbg !1208
  %113 = udiv i64 %108, %112, !dbg !1209
  store i64 %113, i64* %2, align 8, !dbg !1210
  br label %160, !dbg !1210

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !1211
  %116 = trunc i8 %115 to i1, !dbg !1211
  br i1 %116, label %117, label %135, !dbg !1212

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !1213
  %119 = trunc i8 %118 to i1, !dbg !1213
  br i1 %119, label %120, label %128, !dbg !1214

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !1215
  %122 = trunc i64 %121 to i32, !dbg !1216
  %123 = load i32, i32* %5, align 4, !dbg !1217
  %124 = load i32, i32* %4, align 4, !dbg !1218
  %125 = udiv i32 %123, %124, !dbg !1219
  %126 = mul i32 %122, %125, !dbg !1220
  %127 = zext i32 %126 to i64, !dbg !1221
  store i64 %127, i64* %2, align 8, !dbg !1222
  br label %160, !dbg !1222

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !1223
  %130 = load i32, i32* %5, align 4, !dbg !1224
  %131 = load i32, i32* %4, align 4, !dbg !1225
  %132 = udiv i32 %130, %131, !dbg !1226
  %133 = zext i32 %132 to i64, !dbg !1227
  %134 = mul i64 %129, %133, !dbg !1228
  store i64 %134, i64* %2, align 8, !dbg !1229
  br label %160, !dbg !1229

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !1230
  %137 = trunc i8 %136 to i1, !dbg !1230
  br i1 %137, label %138, label %150, !dbg !1231

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !1232
  %140 = load i32, i32* %5, align 4, !dbg !1233
  %141 = zext i32 %140 to i64, !dbg !1233
  %142 = mul i64 %139, %141, !dbg !1234
  %143 = load i64, i64* %12, align 8, !dbg !1235
  %144 = add i64 %142, %143, !dbg !1236
  %145 = load i32, i32* %4, align 4, !dbg !1237
  %146 = zext i32 %145 to i64, !dbg !1237
  %147 = udiv i64 %144, %146, !dbg !1238
  %148 = trunc i64 %147 to i32, !dbg !1239
  %149 = zext i32 %148 to i64, !dbg !1239
  store i64 %149, i64* %2, align 8, !dbg !1240
  br label %160, !dbg !1240

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !1241
  %152 = load i32, i32* %5, align 4, !dbg !1242
  %153 = zext i32 %152 to i64, !dbg !1242
  %154 = mul i64 %151, %153, !dbg !1243
  %155 = load i64, i64* %12, align 8, !dbg !1244
  %156 = add i64 %154, %155, !dbg !1245
  %157 = load i32, i32* %4, align 4, !dbg !1246
  %158 = zext i32 %157 to i64, !dbg !1246
  %159 = udiv i64 %156, %158, !dbg !1247
  store i64 %159, i64* %2, align 8, !dbg !1248
  br label %160, !dbg !1248

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !1249
  ret i64 %161, !dbg !1250
}

declare dso_local i64 @z_impl_k_uptime_ticks(...) #2

declare dso_local i32 @z_impl_k_msgq_get(%struct.k_msgq*, i8*, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec() #0 !dbg !1251 {
  ret i32 72000000, !dbg !1252
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize() #0 !dbg !1253 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !1255, !srcloc !1259
  ret void, !dbg !1260
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32() #0 !dbg !1261 {
  %1 = call i32 @arch_k_cycle_get_32() #3, !dbg !1262
  ret i32 %1, !dbg !1263
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32() #0 !dbg !1264 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !1266
  ret i32 %1, !dbg !1267
}

declare dso_local i32 @z_timer_cycle_get_32() #2

declare dso_local i32 @z_impl_k_msgq_put(%struct.k_msgq*, i8*, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start() #0 !dbg !1268 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check, align 8, !dbg !1269
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !1270
  store i64 1, i64* %2, align 8, !dbg !1270
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !1270
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !1270
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !1270
  %6 = call i32 @k_sleep([1 x i64] %5) #3, !dbg !1270
  %7 = call i64 @k_uptime_delta(i64* @timestamp_check) #3, !dbg !1271
  store i64 %7, i64* @timestamp_check, align 8, !dbg !1272
  ret void, !dbg !1273
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep([1 x i64]) #0 !dbg !1274 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !1277, metadata !DIExpression()), !dbg !1278
  br label %5, !dbg !1279

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1280, !srcloc !1282
  br label %6, !dbg !1280

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !1283
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !1283
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !1283
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !1283
  ret i32 %10, !dbg !1284
}

declare dso_local i32 @z_impl_k_sleep([1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define dso_local void @dequtask() #0 !dbg !1285 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1287, metadata !DIExpression()), !dbg !1288
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1289, metadata !DIExpression()), !dbg !1290
  store i32 0, i32* %2, align 4, !dbg !1291
  br label %5, !dbg !1293

5:                                                ; preds = %15, %0
  %6 = load i32, i32* %2, align 4, !dbg !1294
  %7 = icmp slt i32 %6, 500, !dbg !1296
  br i1 %7, label %8, label %18, !dbg !1297

8:                                                ; preds = %5
  %9 = bitcast i32* %1 to i8*, !dbg !1298
  %10 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !1300
  store i64 -1, i64* %10, align 8, !dbg !1300
  %11 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !1301
  %12 = bitcast i64* %11 to [1 x i64]*, !dbg !1301
  %13 = load [1 x i64], [1 x i64]* %12, align 8, !dbg !1301
  %14 = call i32 @k_msgq_get.1(%struct.k_msgq* @DEMOQX1, i8* %9, [1 x i64] %13) #3, !dbg !1301
  br label %15, !dbg !1302

15:                                               ; preds = %8
  %16 = load i32, i32* %2, align 4, !dbg !1303
  %17 = add i32 %16, 1, !dbg !1303
  store i32 %17, i32* %2, align 4, !dbg !1303
  br label %5, !dbg !1304, !llvm.loop !1305

18:                                               ; preds = %5
  store i32 0, i32* %2, align 4, !dbg !1307
  br label %19, !dbg !1309

19:                                               ; preds = %29, %18
  %20 = load i32, i32* %2, align 4, !dbg !1310
  %21 = icmp slt i32 %20, 500, !dbg !1312
  br i1 %21, label %22, label %32, !dbg !1313

22:                                               ; preds = %19
  %23 = bitcast i32* %1 to i8*, !dbg !1314
  %24 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !1316
  store i64 -1, i64* %24, align 8, !dbg !1316
  %25 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !1317
  %26 = bitcast i64* %25 to [1 x i64]*, !dbg !1317
  %27 = load [1 x i64], [1 x i64]* %26, align 8, !dbg !1317
  %28 = call i32 @k_msgq_get.1(%struct.k_msgq* @DEMOQX4, i8* %23, [1 x i64] %27) #3, !dbg !1317
  br label %29, !dbg !1318

29:                                               ; preds = %22
  %30 = load i32, i32* %2, align 4, !dbg !1319
  %31 = add i32 %30, 1, !dbg !1319
  store i32 %31, i32* %2, align 4, !dbg !1319
  br label %19, !dbg !1320, !llvm.loop !1321

32:                                               ; preds = %19
  ret void, !dbg !1323
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_get.1(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !1324 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !1365, metadata !DIExpression()), !dbg !1366
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1367, metadata !DIExpression()), !dbg !1368
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !1369, metadata !DIExpression()), !dbg !1370
  br label %9, !dbg !1371

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1372, !srcloc !1374
  br label %10, !dbg !1372

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !1375
  %12 = load i8*, i8** %6, align 4, !dbg !1376
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !1377
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !1377
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !1377
  %16 = call i32 @z_impl_k_msgq_get(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !1377
  ret i32 %16, !dbg !1378
}

; Function Attrs: noinline nounwind optnone
define dso_local void @mailbox_test() #0 !dbg !1379 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.getinfo, align 4
  %6 = alloca %struct.k_timeout_t, align 8
  %7 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1380, metadata !DIExpression()), !dbg !1381
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1382, metadata !DIExpression()), !dbg !1383
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1384, metadata !DIExpression()), !dbg !1385
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1386, metadata !DIExpression()), !dbg !1387
  call void @llvm.dbg.declare(metadata %struct.getinfo* %5, metadata !1388, metadata !DIExpression()), !dbg !1395
  %8 = load i32*, i32** @output_file, align 4, !dbg !1396
  %9 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.9, i32 0, i32 0), i32* %8) #3, !dbg !1396
  %10 = load i32*, i32** @output_file, align 4, !dbg !1397
  %11 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1.10, i32 0, i32 0), i32* %10) #3, !dbg !1397
  %12 = load i32*, i32** @output_file, align 4, !dbg !1398
  %13 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.9, i32 0, i32 0), i32* %12) #3, !dbg !1398
  %14 = load i32*, i32** @output_file, align 4, !dbg !1399
  %15 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2.11, i32 0, i32 0), i32* %14) #3, !dbg !1399
  %16 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.3.12, i32 0, i32 0), i32 128) #3, !dbg !1400
  %17 = load i32*, i32** @output_file, align 4, !dbg !1400
  %18 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %17) #3, !dbg !1400
  %19 = load i32*, i32** @output_file, align 4, !dbg !1402
  %20 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.9, i32 0, i32 0), i32* %19) #3, !dbg !1402
  %21 = load i32*, i32** @output_file, align 4, !dbg !1403
  %22 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.4.13, i32 0, i32 0), i32* %21) #3, !dbg !1403
  %23 = load i32*, i32** @output_file, align 4, !dbg !1404
  %24 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.9, i32 0, i32 0), i32* %23) #3, !dbg !1404
  call void @k_sem_reset(%struct.k_sem* @SEM0) #3, !dbg !1405
  call void @k_sem_give.14(%struct.k_sem* @STARTRCV) #3, !dbg !1406
  store i32 128, i32* %3, align 4, !dbg !1407
  store i32 0, i32* %1, align 4, !dbg !1408
  %25 = load i32, i32* %1, align 4, !dbg !1409
  %26 = load i32, i32* %3, align 4, !dbg !1410
  call void @mailbox_put(i32 %25, i32 %26, i32* %2) #3, !dbg !1411
  %27 = bitcast %struct.getinfo* %5 to i8*, !dbg !1412
  %28 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %6, i32 0, i32 0, !dbg !1413
  store i64 -1, i64* %28, align 8, !dbg !1413
  %29 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %6, i32 0, i32 0, !dbg !1414
  %30 = bitcast i64* %29 to [1 x i64]*, !dbg !1414
  %31 = load [1 x i64], [1 x i64]* %30, align 8, !dbg !1414
  %32 = call i32 @k_msgq_get.15(%struct.k_msgq* @MB_COMM, i8* %27, [1 x i64] %31) #3, !dbg !1414
  %33 = load i32, i32* %1, align 4, !dbg !1415
  %34 = load i32, i32* %2, align 4, !dbg !1415
  %35 = load i32, i32* %1, align 4, !dbg !1415
  %36 = zext i32 %35 to i64, !dbg !1415
  %37 = mul i64 %36, 1000000, !dbg !1415
  %38 = load i32, i32* %2, align 4, !dbg !1415
  %39 = icmp ne i32 %38, 0, !dbg !1415
  br i1 %39, label %40, label %42, !dbg !1415

40:                                               ; preds = %0
  %41 = load i32, i32* %2, align 4, !dbg !1415
  br label %43, !dbg !1415

42:                                               ; preds = %0
  br label %43, !dbg !1415

43:                                               ; preds = %42, %40
  %44 = phi i32 [ %41, %40 ], [ 1, %42 ], !dbg !1415
  %45 = zext i32 %44 to i64, !dbg !1415
  %46 = udiv i64 %37, %45, !dbg !1415
  %47 = trunc i64 %46 to i32, !dbg !1415
  %48 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.16, i32 0, i32 0), i32 %33, i32 %34, i32 %47) #3, !dbg !1415
  %49 = load i32*, i32** @output_file, align 4, !dbg !1415
  %50 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %49) #3, !dbg !1415
  %51 = load i32, i32* %2, align 4, !dbg !1417
  store i32 %51, i32* %4, align 4, !dbg !1418
  store i32 8, i32* %1, align 4, !dbg !1419
  br label %52, !dbg !1421

52:                                               ; preds = %82, %43
  %53 = load i32, i32* %1, align 4, !dbg !1422
  %54 = icmp ule i32 %53, 4096, !dbg !1424
  br i1 %54, label %55, label %85, !dbg !1425

55:                                               ; preds = %52
  %56 = load i32, i32* %1, align 4, !dbg !1426
  %57 = load i32, i32* %3, align 4, !dbg !1428
  call void @mailbox_put(i32 %56, i32 %57, i32* %2) #3, !dbg !1429
  %58 = bitcast %struct.getinfo* %5 to i8*, !dbg !1430
  %59 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !1431
  store i64 -1, i64* %59, align 8, !dbg !1431
  %60 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !1432
  %61 = bitcast i64* %60 to [1 x i64]*, !dbg !1432
  %62 = load [1 x i64], [1 x i64]* %61, align 8, !dbg !1432
  %63 = call i32 @k_msgq_get.15(%struct.k_msgq* @MB_COMM, i8* %58, [1 x i64] %62) #3, !dbg !1432
  %64 = load i32, i32* %1, align 4, !dbg !1433
  %65 = load i32, i32* %2, align 4, !dbg !1433
  %66 = load i32, i32* %1, align 4, !dbg !1433
  %67 = zext i32 %66 to i64, !dbg !1433
  %68 = mul i64 %67, 1000000, !dbg !1433
  %69 = load i32, i32* %2, align 4, !dbg !1433
  %70 = icmp ne i32 %69, 0, !dbg !1433
  br i1 %70, label %71, label %73, !dbg !1433

71:                                               ; preds = %55
  %72 = load i32, i32* %2, align 4, !dbg !1433
  br label %74, !dbg !1433

73:                                               ; preds = %55
  br label %74, !dbg !1433

74:                                               ; preds = %73, %71
  %75 = phi i32 [ %72, %71 ], [ 1, %73 ], !dbg !1433
  %76 = zext i32 %75 to i64, !dbg !1433
  %77 = udiv i64 %68, %76, !dbg !1433
  %78 = trunc i64 %77 to i32, !dbg !1433
  %79 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.5.16, i32 0, i32 0), i32 %64, i32 %65, i32 %78) #3, !dbg !1433
  %80 = load i32*, i32** @output_file, align 4, !dbg !1433
  %81 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %80) #3, !dbg !1433
  br label %82, !dbg !1435

82:                                               ; preds = %74
  %83 = load i32, i32* %1, align 4, !dbg !1436
  %84 = shl i32 %83, 1, !dbg !1436
  store i32 %84, i32* %1, align 4, !dbg !1436
  br label %52, !dbg !1437, !llvm.loop !1438

85:                                               ; preds = %52
  %86 = load i32*, i32** @output_file, align 4, !dbg !1440
  %87 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.9, i32 0, i32 0), i32* %86) #3, !dbg !1440
  %88 = load i32, i32* %4, align 4, !dbg !1441
  %89 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.6.17, i32 0, i32 0), i32 %88) #3, !dbg !1441
  %90 = load i32*, i32** @output_file, align 4, !dbg !1441
  %91 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %90) #3, !dbg !1441
  %92 = load i32, i32* %1, align 4, !dbg !1443
  %93 = lshr i32 %92, 1, !dbg !1443
  %94 = zext i32 %93 to i64, !dbg !1443
  %95 = mul i64 %94, 1000000, !dbg !1443
  %96 = load i32, i32* %2, align 4, !dbg !1443
  %97 = load i32, i32* %4, align 4, !dbg !1443
  %98 = sub i32 %96, %97, !dbg !1443
  %99 = icmp ne i32 %98, 0, !dbg !1443
  br i1 %99, label %100, label %104, !dbg !1443

100:                                              ; preds = %85
  %101 = load i32, i32* %2, align 4, !dbg !1443
  %102 = load i32, i32* %4, align 4, !dbg !1443
  %103 = sub i32 %101, %102, !dbg !1443
  br label %105, !dbg !1443

104:                                              ; preds = %85
  br label %105, !dbg !1443

105:                                              ; preds = %104, %100
  %106 = phi i32 [ %103, %100 ], [ 1, %104 ], !dbg !1443
  %107 = zext i32 %106 to i64, !dbg !1443
  %108 = udiv i64 %95, %107, !dbg !1443
  %109 = trunc i64 %108 to i32, !dbg !1443
  %110 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.7.18, i32 0, i32 0), i32 %109) #3, !dbg !1443
  %111 = load i32*, i32** @output_file, align 4, !dbg !1443
  %112 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %111) #3, !dbg !1443
  ret void, !dbg !1445
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_reset(%struct.k_sem*) #0 !dbg !1446 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !1449, metadata !DIExpression()), !dbg !1450
  br label %3, !dbg !1451

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1452, !srcloc !1454
  br label %4, !dbg !1452

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !1455
  call void @z_impl_k_sem_reset(%struct.k_sem* %5) #3, !dbg !1456
  ret void, !dbg !1457
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_give.14(%struct.k_sem*) #0 !dbg !1458 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !1459, metadata !DIExpression()), !dbg !1460
  br label %3, !dbg !1461

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1462, !srcloc !1464
  br label %4, !dbg !1462

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !1465
  call void @z_impl_k_sem_give(%struct.k_sem* %5) #3, !dbg !1466
  ret void, !dbg !1467
}

; Function Attrs: noinline nounwind optnone
define dso_local void @mailbox_put(i32, i32, i32*) #0 !dbg !1468 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32*, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca %struct.k_timeout_t, align 8
  store i32 %0, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1472, metadata !DIExpression()), !dbg !1473
  store i32 %1, i32* %5, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1474, metadata !DIExpression()), !dbg !1475
  store i32* %2, i32** %6, align 4
  call void @llvm.dbg.declare(metadata i32** %6, metadata !1476, metadata !DIExpression()), !dbg !1477
  call void @llvm.dbg.declare(metadata i32* %7, metadata !1478, metadata !DIExpression()), !dbg !1479
  call void @llvm.dbg.declare(metadata i32* %8, metadata !1480, metadata !DIExpression()), !dbg !1481
  store %struct.k_thread.30* null, %struct.k_thread.30** getelementptr inbounds (%struct.k_mbox_msg, %struct.k_mbox_msg* @message, i32 0, i32 6), align 4, !dbg !1482
  store %struct.k_thread.30* null, %struct.k_thread.30** getelementptr inbounds (%struct.k_mbox_msg, %struct.k_mbox_msg* @message, i32 0, i32 7), align 4, !dbg !1483
  call void @k_sem_give.14(%struct.k_sem* @SEM0) #3, !dbg !1484
  %10 = call i32 @BENCH_START.19() #3, !dbg !1485
  store i32 %10, i32* %8, align 4, !dbg !1486
  store i32 0, i32* %7, align 4, !dbg !1487
  br label %11, !dbg !1489

11:                                               ; preds = %21, %3
  %12 = load i32, i32* %7, align 4, !dbg !1490
  %13 = load i32, i32* %5, align 4, !dbg !1492
  %14 = icmp slt i32 %12, %13, !dbg !1493
  br i1 %14, label %15, label %24, !dbg !1494

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %9, i32 0, i32 0, !dbg !1495
  store i64 -1, i64* %16, align 8, !dbg !1495
  %17 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %9, i32 0, i32 0, !dbg !1497
  %18 = bitcast i64* %17 to [1 x i64]*, !dbg !1497
  %19 = load [1 x i64], [1 x i64]* %18, align 8, !dbg !1497
  %20 = call i32 @k_mbox_put(%struct.k_mbox* @MAILB1, %struct.k_mbox_msg* @message, [1 x i64] %19) #3, !dbg !1497
  br label %21, !dbg !1498

21:                                               ; preds = %15
  %22 = load i32, i32* %7, align 4, !dbg !1499
  %23 = add i32 %22, 1, !dbg !1499
  store i32 %23, i32* %7, align 4, !dbg !1499
  br label %11, !dbg !1500, !llvm.loop !1501

24:                                               ; preds = %11
  %25 = load i32, i32* %8, align 4, !dbg !1503
  %26 = call i32 @TIME_STAMP_DELTA_GET.20(i32 %25) #3, !dbg !1504
  store i32 %26, i32* %8, align 4, !dbg !1505
  %27 = load i32, i32* %8, align 4, !dbg !1506
  %28 = zext i32 %27 to i64, !dbg !1506
  %29 = call i64 @k_cyc_to_ns_floor64.21(i64 %28) #3, !dbg !1506
  %30 = load i32, i32* %5, align 4, !dbg !1506
  %31 = sext i32 %30 to i64, !dbg !1506
  %32 = udiv i64 %29, %31, !dbg !1506
  %33 = trunc i64 %32 to i32, !dbg !1506
  %34 = load i32*, i32** %6, align 4, !dbg !1507
  store i32 %33, i32* %34, align 4, !dbg !1508
  call void @check_result.22() #3, !dbg !1509
  ret void, !dbg !1510
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_get.15(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !1511 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !1531, metadata !DIExpression()), !dbg !1532
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !1533, metadata !DIExpression()), !dbg !1534
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !1535, metadata !DIExpression()), !dbg !1536
  br label %9, !dbg !1537

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1538, !srcloc !1540
  br label %10, !dbg !1538

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !1541
  %12 = load i8*, i8** %6, align 4, !dbg !1542
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !1543
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !1543
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !1543
  %16 = call i32 @z_impl_k_msgq_get(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !1543
  ret i32 %16, !dbg !1544
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.19() #0 !dbg !1545 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1546, metadata !DIExpression()), !dbg !1547
  call void @bench_test_start.34() #3, !dbg !1548
  %2 = call i32 @TIME_STAMP_DELTA_GET.20(i32 0) #3, !dbg !1549
  store i32 %2, i32* %1, align 4, !dbg !1550
  %3 = load i32, i32* %1, align 4, !dbg !1551
  ret i32 %3, !dbg !1552
}

declare dso_local i32 @k_mbox_put(%struct.k_mbox*, %struct.k_mbox_msg*, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.20(i32) #0 !dbg !1553 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1554, metadata !DIExpression()), !dbg !1555
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1556, metadata !DIExpression()), !dbg !1557
  call void @timestamp_serialize.31() #3, !dbg !1558
  %5 = call i32 @k_cycle_get_32.32() #3, !dbg !1559
  store i32 %5, i32* %3, align 4, !dbg !1560
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1561, metadata !DIExpression()), !dbg !1562
  %6 = load i32, i32* %3, align 4, !dbg !1563
  %7 = load i32, i32* %2, align 4, !dbg !1564
  %8 = icmp uge i32 %6, %7, !dbg !1565
  br i1 %8, label %9, label %13, !dbg !1566

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !1567
  %11 = load i32, i32* %2, align 4, !dbg !1568
  %12 = sub i32 %10, %11, !dbg !1569
  br label %18, !dbg !1566

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !1570
  %15 = sub i32 -1, %14, !dbg !1571
  %16 = load i32, i32* %3, align 4, !dbg !1572
  %17 = add i32 %15, %16, !dbg !1573
  br label %18, !dbg !1566

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !1566
  store i32 %19, i32* %4, align 4, !dbg !1562
  %20 = load i32, i32* %2, align 4, !dbg !1574
  %21 = icmp ugt i32 %20, 0, !dbg !1576
  br i1 %21, label %22, label %26, !dbg !1577

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !1578
  %24 = load i32, i32* %4, align 4, !dbg !1580
  %25 = sub i32 %24, %23, !dbg !1580
  store i32 %25, i32* %4, align 4, !dbg !1580
  br label %26, !dbg !1581

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !1582
  ret i32 %27, !dbg !1583
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.21(i64) #0 !dbg !1584 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1585, metadata !DIExpression()), !dbg !1587
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1589, metadata !DIExpression()), !dbg !1590
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1591, metadata !DIExpression()), !dbg !1592
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1593, metadata !DIExpression()), !dbg !1594
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !1595, metadata !DIExpression()), !dbg !1596
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !1597, metadata !DIExpression()), !dbg !1598
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !1599, metadata !DIExpression()), !dbg !1600
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !1601, metadata !DIExpression()), !dbg !1602
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1603, metadata !DIExpression()), !dbg !1604
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1605, metadata !DIExpression()), !dbg !1606
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1607, metadata !DIExpression()), !dbg !1610
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1611, metadata !DIExpression()), !dbg !1612
  %15 = load i64, i64* %14, align 8, !dbg !1613
  %16 = call i32 @sys_clock_hw_cycles_per_sec.30() #3, !dbg !1614
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !1615
  %18 = trunc i8 %17 to i1, !dbg !1615
  br i1 %18, label %19, label %28, !dbg !1616

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !1617
  %21 = load i32, i32* %4, align 4, !dbg !1618
  %22 = icmp ugt i32 %20, %21, !dbg !1619
  br i1 %22, label %23, label %28, !dbg !1620

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !1621
  %25 = load i32, i32* %4, align 4, !dbg !1622
  %26 = urem i32 %24, %25, !dbg !1623
  %27 = icmp eq i32 %26, 0, !dbg !1624
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !1625
  %30 = zext i1 %29 to i8, !dbg !1602
  store i8 %30, i8* %10, align 1, !dbg !1602
  %31 = load i8, i8* %6, align 1, !dbg !1626
  %32 = trunc i8 %31 to i1, !dbg !1626
  br i1 %32, label %33, label %42, !dbg !1627

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !1628
  %35 = load i32, i32* %5, align 4, !dbg !1629
  %36 = icmp ugt i32 %34, %35, !dbg !1630
  br i1 %36, label %37, label %42, !dbg !1631

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !1632
  %39 = load i32, i32* %5, align 4, !dbg !1633
  %40 = urem i32 %38, %39, !dbg !1634
  %41 = icmp eq i32 %40, 0, !dbg !1635
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !1625
  %44 = zext i1 %43 to i8, !dbg !1604
  store i8 %44, i8* %11, align 1, !dbg !1604
  %45 = load i32, i32* %4, align 4, !dbg !1636
  %46 = load i32, i32* %5, align 4, !dbg !1638
  %47 = icmp eq i32 %45, %46, !dbg !1639
  br i1 %47, label %48, label %59, !dbg !1640

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !1641
  %50 = trunc i8 %49 to i1, !dbg !1641
  br i1 %50, label %51, label %55, !dbg !1641

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !1643
  %53 = trunc i64 %52 to i32, !dbg !1644
  %54 = zext i32 %53 to i64, !dbg !1645
  br label %57, !dbg !1641

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !1646
  br label %57, !dbg !1641

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !1641
  store i64 %58, i64* %2, align 8, !dbg !1647
  br label %161, !dbg !1647

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !1606
  %60 = load i8, i8* %10, align 1, !dbg !1648
  %61 = trunc i8 %60 to i1, !dbg !1648
  br i1 %61, label %88, label %62, !dbg !1649

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !1650
  %64 = trunc i8 %63 to i1, !dbg !1650
  br i1 %64, label %65, label %69, !dbg !1650

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !1651
  %67 = load i32, i32* %5, align 4, !dbg !1652
  %68 = udiv i32 %66, %67, !dbg !1653
  br label %71, !dbg !1650

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !1654
  br label %71, !dbg !1650

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !1650
  store i32 %72, i32* %13, align 4, !dbg !1610
  %73 = load i8, i8* %8, align 1, !dbg !1655
  %74 = trunc i8 %73 to i1, !dbg !1655
  br i1 %74, label %75, label %79, !dbg !1657

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !1658
  %77 = sub i32 %76, 1, !dbg !1660
  %78 = zext i32 %77 to i64, !dbg !1658
  store i64 %78, i64* %12, align 8, !dbg !1661
  br label %87, !dbg !1662

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !1663
  %81 = trunc i8 %80 to i1, !dbg !1663
  br i1 %81, label %82, label %86, !dbg !1665

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !1666
  %84 = udiv i32 %83, 2, !dbg !1668
  %85 = zext i32 %84 to i64, !dbg !1666
  store i64 %85, i64* %12, align 8, !dbg !1669
  br label %86, !dbg !1670

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !1671

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !1672
  %90 = trunc i8 %89 to i1, !dbg !1672
  br i1 %90, label %91, label %115, !dbg !1674

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !1675
  %93 = load i64, i64* %3, align 8, !dbg !1677
  %94 = add i64 %93, %92, !dbg !1677
  store i64 %94, i64* %3, align 8, !dbg !1677
  %95 = load i8, i8* %7, align 1, !dbg !1678
  %96 = trunc i8 %95 to i1, !dbg !1678
  br i1 %96, label %97, label %108, !dbg !1680

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !1681
  %99 = icmp ult i64 %98, 4294967296, !dbg !1682
  br i1 %99, label %100, label %108, !dbg !1683

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !1684
  %102 = trunc i64 %101 to i32, !dbg !1686
  %103 = load i32, i32* %4, align 4, !dbg !1687
  %104 = load i32, i32* %5, align 4, !dbg !1688
  %105 = udiv i32 %103, %104, !dbg !1689
  %106 = udiv i32 %102, %105, !dbg !1690
  %107 = zext i32 %106 to i64, !dbg !1691
  store i64 %107, i64* %2, align 8, !dbg !1692
  br label %161, !dbg !1692

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !1693
  %110 = load i32, i32* %4, align 4, !dbg !1695
  %111 = load i32, i32* %5, align 4, !dbg !1696
  %112 = udiv i32 %110, %111, !dbg !1697
  %113 = zext i32 %112 to i64, !dbg !1698
  %114 = udiv i64 %109, %113, !dbg !1699
  store i64 %114, i64* %2, align 8, !dbg !1700
  br label %161, !dbg !1700

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !1701
  %117 = trunc i8 %116 to i1, !dbg !1701
  br i1 %117, label %118, label %136, !dbg !1703

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !1704
  %120 = trunc i8 %119 to i1, !dbg !1704
  br i1 %120, label %121, label %129, !dbg !1707

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !1708
  %123 = trunc i64 %122 to i32, !dbg !1710
  %124 = load i32, i32* %5, align 4, !dbg !1711
  %125 = load i32, i32* %4, align 4, !dbg !1712
  %126 = udiv i32 %124, %125, !dbg !1713
  %127 = mul i32 %123, %126, !dbg !1714
  %128 = zext i32 %127 to i64, !dbg !1715
  store i64 %128, i64* %2, align 8, !dbg !1716
  br label %161, !dbg !1716

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !1717
  %131 = load i32, i32* %5, align 4, !dbg !1719
  %132 = load i32, i32* %4, align 4, !dbg !1720
  %133 = udiv i32 %131, %132, !dbg !1721
  %134 = zext i32 %133 to i64, !dbg !1722
  %135 = mul i64 %130, %134, !dbg !1723
  store i64 %135, i64* %2, align 8, !dbg !1724
  br label %161, !dbg !1724

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !1725
  %138 = trunc i8 %137 to i1, !dbg !1725
  br i1 %138, label %139, label %151, !dbg !1728

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !1729
  %141 = load i32, i32* %5, align 4, !dbg !1731
  %142 = zext i32 %141 to i64, !dbg !1731
  %143 = mul i64 %140, %142, !dbg !1732
  %144 = load i64, i64* %12, align 8, !dbg !1733
  %145 = add i64 %143, %144, !dbg !1734
  %146 = load i32, i32* %4, align 4, !dbg !1735
  %147 = zext i32 %146 to i64, !dbg !1735
  %148 = udiv i64 %145, %147, !dbg !1736
  %149 = trunc i64 %148 to i32, !dbg !1737
  %150 = zext i32 %149 to i64, !dbg !1737
  store i64 %150, i64* %2, align 8, !dbg !1738
  br label %161, !dbg !1738

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !1739
  %153 = load i32, i32* %5, align 4, !dbg !1741
  %154 = zext i32 %153 to i64, !dbg !1741
  %155 = mul i64 %152, %154, !dbg !1742
  %156 = load i64, i64* %12, align 8, !dbg !1743
  %157 = add i64 %155, %156, !dbg !1744
  %158 = load i32, i32* %4, align 4, !dbg !1745
  %159 = zext i32 %158 to i64, !dbg !1745
  %160 = udiv i64 %157, %159, !dbg !1746
  store i64 %160, i64* %2, align 8, !dbg !1747
  br label %161, !dbg !1747

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !1748
  ret i64 %162, !dbg !1749
}

; Function Attrs: noinline nounwind optnone
define internal void @check_result.22() #0 !dbg !1750 {
  %1 = call i32 @bench_test_end.23() #3, !dbg !1751
  %2 = icmp slt i32 %1, 0, !dbg !1753
  br i1 %2, label %3, label %7, !dbg !1754

3:                                                ; preds = %0
  %4 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.8.24, i32 0, i32 0), i32 187) #3, !dbg !1755
  %5 = load i32*, i32** @output_file, align 4, !dbg !1755
  %6 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %5) #3, !dbg !1755
  br label %7, !dbg !1758

7:                                                ; preds = %3, %0
  ret void, !dbg !1759
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.23() #0 !dbg !1760 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.26(i64* @timestamp_check.25) #3, !dbg !1761
  store i64 %2, i64* @timestamp_check.25, align 8, !dbg !1762
  %3 = load i64, i64* @timestamp_check.25, align 8, !dbg !1763
  %4 = icmp sge i64 %3, 1000, !dbg !1765
  br i1 %4, label %5, label %6, !dbg !1766

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !1767
  br label %7, !dbg !1767

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !1769
  br label %7, !dbg !1769

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !1770
  ret i32 %8, !dbg !1770
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.26(i64*) #0 !dbg !1771 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !1772, metadata !DIExpression()), !dbg !1773
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1774, metadata !DIExpression()), !dbg !1775
  call void @llvm.dbg.declare(metadata i64* %4, metadata !1776, metadata !DIExpression()), !dbg !1777
  %5 = call i64 @k_uptime_get.27() #3, !dbg !1778
  store i64 %5, i64* %3, align 8, !dbg !1779
  %6 = load i64, i64* %3, align 8, !dbg !1780
  %7 = load i64*, i64** %2, align 4, !dbg !1781
  %8 = load i64, i64* %7, align 8, !dbg !1782
  %9 = sub i64 %6, %8, !dbg !1783
  store i64 %9, i64* %4, align 8, !dbg !1784
  %10 = load i64, i64* %3, align 8, !dbg !1785
  %11 = load i64*, i64** %2, align 4, !dbg !1786
  store i64 %10, i64* %11, align 8, !dbg !1787
  %12 = load i64, i64* %4, align 8, !dbg !1788
  ret i64 %12, !dbg !1789
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.27() #0 !dbg !1790 {
  %1 = call i64 @k_uptime_ticks.28() #3, !dbg !1791
  %2 = call i64 @k_ticks_to_ms_floor64.29(i64 %1) #3, !dbg !1792
  ret i64 %2, !dbg !1793
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.28() #0 !dbg !1794 {
  br label %1, !dbg !1795

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1796, !srcloc !1798
  br label %2, !dbg !1796

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !1799
  ret i64 %3, !dbg !1800
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.29(i64) #0 !dbg !1801 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !1585, metadata !DIExpression()), !dbg !1802
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !1589, metadata !DIExpression()), !dbg !1804
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !1591, metadata !DIExpression()), !dbg !1805
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !1593, metadata !DIExpression()), !dbg !1806
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !1595, metadata !DIExpression()), !dbg !1807
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !1597, metadata !DIExpression()), !dbg !1808
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !1599, metadata !DIExpression()), !dbg !1809
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !1601, metadata !DIExpression()), !dbg !1810
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !1603, metadata !DIExpression()), !dbg !1811
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !1605, metadata !DIExpression()), !dbg !1812
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !1607, metadata !DIExpression()), !dbg !1813
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !1814, metadata !DIExpression()), !dbg !1815
  %15 = load i64, i64* %14, align 8, !dbg !1816
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !1817
  %17 = trunc i8 %16 to i1, !dbg !1817
  br i1 %17, label %18, label %27, !dbg !1818

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !1819
  %20 = load i32, i32* %4, align 4, !dbg !1820
  %21 = icmp ugt i32 %19, %20, !dbg !1821
  br i1 %21, label %22, label %27, !dbg !1822

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !1823
  %24 = load i32, i32* %4, align 4, !dbg !1824
  %25 = urem i32 %23, %24, !dbg !1825
  %26 = icmp eq i32 %25, 0, !dbg !1826
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !1827
  %29 = zext i1 %28 to i8, !dbg !1810
  store i8 %29, i8* %10, align 1, !dbg !1810
  %30 = load i8, i8* %6, align 1, !dbg !1828
  %31 = trunc i8 %30 to i1, !dbg !1828
  br i1 %31, label %32, label %41, !dbg !1829

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !1830
  %34 = load i32, i32* %5, align 4, !dbg !1831
  %35 = icmp ugt i32 %33, %34, !dbg !1832
  br i1 %35, label %36, label %41, !dbg !1833

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !1834
  %38 = load i32, i32* %5, align 4, !dbg !1835
  %39 = urem i32 %37, %38, !dbg !1836
  %40 = icmp eq i32 %39, 0, !dbg !1837
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !1827
  %43 = zext i1 %42 to i8, !dbg !1811
  store i8 %43, i8* %11, align 1, !dbg !1811
  %44 = load i32, i32* %4, align 4, !dbg !1838
  %45 = load i32, i32* %5, align 4, !dbg !1839
  %46 = icmp eq i32 %44, %45, !dbg !1840
  br i1 %46, label %47, label %58, !dbg !1841

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !1842
  %49 = trunc i8 %48 to i1, !dbg !1842
  br i1 %49, label %50, label %54, !dbg !1842

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !1843
  %52 = trunc i64 %51 to i32, !dbg !1844
  %53 = zext i32 %52 to i64, !dbg !1845
  br label %56, !dbg !1842

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !1846
  br label %56, !dbg !1842

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !1842
  store i64 %57, i64* %2, align 8, !dbg !1847
  br label %160, !dbg !1847

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !1812
  %59 = load i8, i8* %10, align 1, !dbg !1848
  %60 = trunc i8 %59 to i1, !dbg !1848
  br i1 %60, label %87, label %61, !dbg !1849

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !1850
  %63 = trunc i8 %62 to i1, !dbg !1850
  br i1 %63, label %64, label %68, !dbg !1850

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !1851
  %66 = load i32, i32* %5, align 4, !dbg !1852
  %67 = udiv i32 %65, %66, !dbg !1853
  br label %70, !dbg !1850

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !1854
  br label %70, !dbg !1850

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !1850
  store i32 %71, i32* %13, align 4, !dbg !1813
  %72 = load i8, i8* %8, align 1, !dbg !1855
  %73 = trunc i8 %72 to i1, !dbg !1855
  br i1 %73, label %74, label %78, !dbg !1856

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !1857
  %76 = sub i32 %75, 1, !dbg !1858
  %77 = zext i32 %76 to i64, !dbg !1857
  store i64 %77, i64* %12, align 8, !dbg !1859
  br label %86, !dbg !1860

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !1861
  %80 = trunc i8 %79 to i1, !dbg !1861
  br i1 %80, label %81, label %85, !dbg !1862

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !1863
  %83 = udiv i32 %82, 2, !dbg !1864
  %84 = zext i32 %83 to i64, !dbg !1863
  store i64 %84, i64* %12, align 8, !dbg !1865
  br label %85, !dbg !1866

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !1867

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !1868
  %89 = trunc i8 %88 to i1, !dbg !1868
  br i1 %89, label %90, label %114, !dbg !1869

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !1870
  %92 = load i64, i64* %3, align 8, !dbg !1871
  %93 = add i64 %92, %91, !dbg !1871
  store i64 %93, i64* %3, align 8, !dbg !1871
  %94 = load i8, i8* %7, align 1, !dbg !1872
  %95 = trunc i8 %94 to i1, !dbg !1872
  br i1 %95, label %96, label %107, !dbg !1873

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !1874
  %98 = icmp ult i64 %97, 4294967296, !dbg !1875
  br i1 %98, label %99, label %107, !dbg !1876

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !1877
  %101 = trunc i64 %100 to i32, !dbg !1878
  %102 = load i32, i32* %4, align 4, !dbg !1879
  %103 = load i32, i32* %5, align 4, !dbg !1880
  %104 = udiv i32 %102, %103, !dbg !1881
  %105 = udiv i32 %101, %104, !dbg !1882
  %106 = zext i32 %105 to i64, !dbg !1883
  store i64 %106, i64* %2, align 8, !dbg !1884
  br label %160, !dbg !1884

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !1885
  %109 = load i32, i32* %4, align 4, !dbg !1886
  %110 = load i32, i32* %5, align 4, !dbg !1887
  %111 = udiv i32 %109, %110, !dbg !1888
  %112 = zext i32 %111 to i64, !dbg !1889
  %113 = udiv i64 %108, %112, !dbg !1890
  store i64 %113, i64* %2, align 8, !dbg !1891
  br label %160, !dbg !1891

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !1892
  %116 = trunc i8 %115 to i1, !dbg !1892
  br i1 %116, label %117, label %135, !dbg !1893

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !1894
  %119 = trunc i8 %118 to i1, !dbg !1894
  br i1 %119, label %120, label %128, !dbg !1895

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !1896
  %122 = trunc i64 %121 to i32, !dbg !1897
  %123 = load i32, i32* %5, align 4, !dbg !1898
  %124 = load i32, i32* %4, align 4, !dbg !1899
  %125 = udiv i32 %123, %124, !dbg !1900
  %126 = mul i32 %122, %125, !dbg !1901
  %127 = zext i32 %126 to i64, !dbg !1902
  store i64 %127, i64* %2, align 8, !dbg !1903
  br label %160, !dbg !1903

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !1904
  %130 = load i32, i32* %5, align 4, !dbg !1905
  %131 = load i32, i32* %4, align 4, !dbg !1906
  %132 = udiv i32 %130, %131, !dbg !1907
  %133 = zext i32 %132 to i64, !dbg !1908
  %134 = mul i64 %129, %133, !dbg !1909
  store i64 %134, i64* %2, align 8, !dbg !1910
  br label %160, !dbg !1910

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !1911
  %137 = trunc i8 %136 to i1, !dbg !1911
  br i1 %137, label %138, label %150, !dbg !1912

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !1913
  %140 = load i32, i32* %5, align 4, !dbg !1914
  %141 = zext i32 %140 to i64, !dbg !1914
  %142 = mul i64 %139, %141, !dbg !1915
  %143 = load i64, i64* %12, align 8, !dbg !1916
  %144 = add i64 %142, %143, !dbg !1917
  %145 = load i32, i32* %4, align 4, !dbg !1918
  %146 = zext i32 %145 to i64, !dbg !1918
  %147 = udiv i64 %144, %146, !dbg !1919
  %148 = trunc i64 %147 to i32, !dbg !1920
  %149 = zext i32 %148 to i64, !dbg !1920
  store i64 %149, i64* %2, align 8, !dbg !1921
  br label %160, !dbg !1921

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !1922
  %152 = load i32, i32* %5, align 4, !dbg !1923
  %153 = zext i32 %152 to i64, !dbg !1923
  %154 = mul i64 %151, %153, !dbg !1924
  %155 = load i64, i64* %12, align 8, !dbg !1925
  %156 = add i64 %154, %155, !dbg !1926
  %157 = load i32, i32* %4, align 4, !dbg !1927
  %158 = zext i32 %157 to i64, !dbg !1927
  %159 = udiv i64 %156, %158, !dbg !1928
  store i64 %159, i64* %2, align 8, !dbg !1929
  br label %160, !dbg !1929

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !1930
  ret i64 %161, !dbg !1931
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.30() #0 !dbg !1932 {
  ret i32 72000000, !dbg !1933
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.31() #0 !dbg !1934 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !1935, !srcloc !1938
  ret void, !dbg !1939
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.32() #0 !dbg !1940 {
  %1 = call i32 @arch_k_cycle_get_32.33() #3, !dbg !1941
  ret i32 %1, !dbg !1942
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.33() #0 !dbg !1943 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !1944
  ret i32 %1, !dbg !1945
}

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.34() #0 !dbg !1946 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.25, align 8, !dbg !1947
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !1948
  store i64 1, i64* %2, align 8, !dbg !1948
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !1948
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !1948
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !1948
  %6 = call i32 @k_sleep.35([1 x i64] %5) #3, !dbg !1948
  %7 = call i64 @k_uptime_delta.26(i64* @timestamp_check.25) #3, !dbg !1949
  store i64 %7, i64* @timestamp_check.25, align 8, !dbg !1950
  ret void, !dbg !1951
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.35([1 x i64]) #0 !dbg !1952 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !1955, metadata !DIExpression()), !dbg !1956
  br label %5, !dbg !1957

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !1958, !srcloc !1960
  br label %6, !dbg !1958

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !1961
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !1961
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !1961
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !1961
  ret i32 %10, !dbg !1962
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_k_sem_reset(%struct.k_sem*) #0 !dbg !1963 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !1964, metadata !DIExpression()), !dbg !1965
  %3 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !1966
  %4 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %3, i32 0, i32 1, !dbg !1967
  store i32 0, i32* %4, align 4, !dbg !1968
  ret void, !dbg !1969
}

; Function Attrs: noinline nounwind optnone
define dso_local void @mailrecvtask() #0 !dbg !1970 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.getinfo, align 4
  %5 = alloca %struct.k_timeout_t, align 8
  %6 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !1972, metadata !DIExpression()), !dbg !1973
  call void @llvm.dbg.declare(metadata i32* %2, metadata !1974, metadata !DIExpression()), !dbg !1975
  call void @llvm.dbg.declare(metadata i32* %3, metadata !1976, metadata !DIExpression()), !dbg !1977
  call void @llvm.dbg.declare(metadata %struct.getinfo* %4, metadata !1978, metadata !DIExpression()), !dbg !1984
  store i32 128, i32* %3, align 4, !dbg !1985
  store i32 0, i32* %1, align 4, !dbg !1986
  %7 = load i32, i32* %1, align 4, !dbg !1987
  %8 = load i32, i32* %3, align 4, !dbg !1988
  call void @mailbox_get(%struct.k_mbox* @MAILB1, i32 %7, i32 %8, i32* %2) #3, !dbg !1989
  %9 = load i32, i32* %2, align 4, !dbg !1990
  %10 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %4, i32 0, i32 1, !dbg !1991
  store i32 %9, i32* %10, align 4, !dbg !1992
  %11 = load i32, i32* %1, align 4, !dbg !1993
  %12 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %4, i32 0, i32 2, !dbg !1994
  store i32 %11, i32* %12, align 4, !dbg !1995
  %13 = load i32, i32* %3, align 4, !dbg !1996
  %14 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %4, i32 0, i32 0, !dbg !1997
  store i32 %13, i32* %14, align 4, !dbg !1998
  %15 = bitcast %struct.getinfo* %4 to i8*, !dbg !1999
  %16 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !2000
  store i64 -1, i64* %16, align 8, !dbg !2000
  %17 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !2001
  %18 = bitcast i64* %17 to [1 x i64]*, !dbg !2001
  %19 = load [1 x i64], [1 x i64]* %18, align 8, !dbg !2001
  %20 = call i32 @k_msgq_put.36(%struct.k_msgq* @MB_COMM, i8* %15, [1 x i64] %19) #3, !dbg !2001
  store i32 8, i32* %1, align 4, !dbg !2002
  br label %21, !dbg !2004

21:                                               ; preds = %39, %0
  %22 = load i32, i32* %1, align 4, !dbg !2005
  %23 = icmp sle i32 %22, 4096, !dbg !2007
  br i1 %23, label %24, label %42, !dbg !2008

24:                                               ; preds = %21
  %25 = load i32, i32* %1, align 4, !dbg !2009
  %26 = load i32, i32* %3, align 4, !dbg !2011
  call void @mailbox_get(%struct.k_mbox* @MAILB1, i32 %25, i32 %26, i32* %2) #3, !dbg !2012
  %27 = load i32, i32* %2, align 4, !dbg !2013
  %28 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %4, i32 0, i32 1, !dbg !2014
  store i32 %27, i32* %28, align 4, !dbg !2015
  %29 = load i32, i32* %1, align 4, !dbg !2016
  %30 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %4, i32 0, i32 2, !dbg !2017
  store i32 %29, i32* %30, align 4, !dbg !2018
  %31 = load i32, i32* %3, align 4, !dbg !2019
  %32 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %4, i32 0, i32 0, !dbg !2020
  store i32 %31, i32* %32, align 4, !dbg !2021
  %33 = bitcast %struct.getinfo* %4 to i8*, !dbg !2022
  %34 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %6, i32 0, i32 0, !dbg !2023
  store i64 -1, i64* %34, align 8, !dbg !2023
  %35 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %6, i32 0, i32 0, !dbg !2024
  %36 = bitcast i64* %35 to [1 x i64]*, !dbg !2024
  %37 = load [1 x i64], [1 x i64]* %36, align 8, !dbg !2024
  %38 = call i32 @k_msgq_put.36(%struct.k_msgq* @MB_COMM, i8* %33, [1 x i64] %37) #3, !dbg !2024
  br label %39, !dbg !2025

39:                                               ; preds = %24
  %40 = load i32, i32* %1, align 4, !dbg !2026
  %41 = shl i32 %40, 1, !dbg !2026
  store i32 %41, i32* %1, align 4, !dbg !2026
  br label %21, !dbg !2027, !llvm.loop !2028

42:                                               ; preds = %21
  ret void, !dbg !2030
}

; Function Attrs: noinline nounwind optnone
define dso_local void @mailbox_get(%struct.k_mbox*, i32, i32, i32*) #0 !dbg !2031 {
  %5 = alloca %struct.k_mbox*, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %struct.k_mbox_msg, align 4
  %13 = alloca %struct.k_timeout_t, align 8
  %14 = alloca %struct.k_timeout_t, align 8
  store %struct.k_mbox* %0, %struct.k_mbox** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_mbox** %5, metadata !2062, metadata !DIExpression()), !dbg !2063
  store i32 %1, i32* %6, align 4
  call void @llvm.dbg.declare(metadata i32* %6, metadata !2064, metadata !DIExpression()), !dbg !2065
  store i32 %2, i32* %7, align 4
  call void @llvm.dbg.declare(metadata i32* %7, metadata !2066, metadata !DIExpression()), !dbg !2067
  store i32* %3, i32** %8, align 4
  call void @llvm.dbg.declare(metadata i32** %8, metadata !2068, metadata !DIExpression()), !dbg !2069
  call void @llvm.dbg.declare(metadata i32* %9, metadata !2070, metadata !DIExpression()), !dbg !2071
  call void @llvm.dbg.declare(metadata i32* %10, metadata !2072, metadata !DIExpression()), !dbg !2073
  call void @llvm.dbg.declare(metadata i32* %11, metadata !2074, metadata !DIExpression()), !dbg !2075
  store i32 0, i32* %11, align 4, !dbg !2075
  call void @llvm.dbg.declare(metadata %struct.k_mbox_msg* %12, metadata !2076, metadata !DIExpression()), !dbg !2194
  %15 = getelementptr inbounds %struct.k_mbox_msg, %struct.k_mbox_msg* %12, i32 0, i32 6, !dbg !2195
  store %struct.k_thread.30* null, %struct.k_thread.30** %15, align 4, !dbg !2196
  %16 = load i32, i32* %6, align 4, !dbg !2197
  %17 = getelementptr inbounds %struct.k_mbox_msg, %struct.k_mbox_msg* %12, i32 0, i32 1, !dbg !2198
  store i32 %16, i32* %17, align 4, !dbg !2199
  %18 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %13, i32 0, i32 0, !dbg !2200
  store i64 -1, i64* %18, align 8, !dbg !2200
  %19 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %13, i32 0, i32 0, !dbg !2201
  %20 = bitcast i64* %19 to [1 x i64]*, !dbg !2201
  %21 = load [1 x i64], [1 x i64]* %20, align 8, !dbg !2201
  %22 = call i32 @k_sem_take(%struct.k_sem* @SEM0, [1 x i64] %21) #3, !dbg !2201
  %23 = call i32 @BENCH_START.37() #3, !dbg !2202
  store i32 %23, i32* %10, align 4, !dbg !2203
  store i32 0, i32* %9, align 4, !dbg !2204
  br label %24, !dbg !2206

24:                                               ; preds = %37, %4
  %25 = load i32, i32* %9, align 4, !dbg !2207
  %26 = load i32, i32* %7, align 4, !dbg !2209
  %27 = icmp slt i32 %25, %26, !dbg !2210
  br i1 %27, label %28, label %40, !dbg !2211

28:                                               ; preds = %24
  %29 = load %struct.k_mbox*, %struct.k_mbox** %5, align 4, !dbg !2212
  %30 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %14, i32 0, i32 0, !dbg !2214
  store i64 -1, i64* %30, align 8, !dbg !2214
  %31 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %14, i32 0, i32 0, !dbg !2215
  %32 = bitcast i64* %31 to [1 x i64]*, !dbg !2215
  %33 = load [1 x i64], [1 x i64]* %32, align 8, !dbg !2215
  %34 = call i32 @k_mbox_get(%struct.k_mbox* %29, %struct.k_mbox_msg* %12, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_recv, i32 0, i32 0), [1 x i64] %33) #3, !dbg !2215
  %35 = load i32, i32* %11, align 4, !dbg !2216
  %36 = or i32 %35, %34, !dbg !2216
  store i32 %36, i32* %11, align 4, !dbg !2216
  br label %37, !dbg !2217

37:                                               ; preds = %28
  %38 = load i32, i32* %9, align 4, !dbg !2218
  %39 = add i32 %38, 1, !dbg !2218
  store i32 %39, i32* %9, align 4, !dbg !2218
  br label %24, !dbg !2219, !llvm.loop !2220

40:                                               ; preds = %24
  %41 = load i32, i32* %10, align 4, !dbg !2222
  %42 = call i32 @TIME_STAMP_DELTA_GET.38(i32 %41) #3, !dbg !2223
  store i32 %42, i32* %10, align 4, !dbg !2224
  %43 = load i32, i32* %10, align 4, !dbg !2225
  %44 = zext i32 %43 to i64, !dbg !2225
  %45 = call i64 @k_cyc_to_ns_floor64.39(i64 %44) #3, !dbg !2225
  %46 = load i32, i32* %7, align 4, !dbg !2225
  %47 = sext i32 %46 to i64, !dbg !2225
  %48 = udiv i64 %45, %47, !dbg !2225
  %49 = trunc i64 %48 to i32, !dbg !2225
  %50 = load i32*, i32** %8, align 4, !dbg !2226
  store i32 %49, i32* %50, align 4, !dbg !2227
  %51 = call i32 @bench_test_end.40() #3, !dbg !2228
  %52 = icmp slt i32 %51, 0, !dbg !2230
  br i1 %52, label %53, label %57, !dbg !2231

53:                                               ; preds = %40
  %54 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.41, i32 0, i32 0), i32 99) #3, !dbg !2232
  %55 = load i32*, i32** @output_file, align 4, !dbg !2232
  %56 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %55) #3, !dbg !2232
  br label %57, !dbg !2235

57:                                               ; preds = %53, %40
  %58 = load i32, i32* %11, align 4, !dbg !2236
  %59 = icmp ne i32 %58, 0, !dbg !2238
  br i1 %59, label %60, label %63, !dbg !2239

60:                                               ; preds = %57
  br label %61, !dbg !2240

61:                                               ; preds = %60
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #4, !dbg !2242, !srcloc !2244
  br label %62, !dbg !2242

62:                                               ; preds = %61
  br label %63, !dbg !2245

63:                                               ; preds = %62, %57
  ret void, !dbg !2246
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_put.36(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !2247 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !2267, metadata !DIExpression()), !dbg !2268
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !2269, metadata !DIExpression()), !dbg !2270
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !2271, metadata !DIExpression()), !dbg !2272
  br label %9, !dbg !2273

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !2274, !srcloc !2276
  br label %10, !dbg !2274

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !2277
  %12 = load i8*, i8** %6, align 4, !dbg !2278
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !2279
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !2279
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !2279
  %16 = call i32 @z_impl_k_msgq_put(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !2279
  ret i32 %16, !dbg !2280
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sem_take(%struct.k_sem*, [1 x i64]) #0 !dbg !2281 {
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_sem*, align 4
  %5 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_sem* %0, %struct.k_sem** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %4, metadata !2284, metadata !DIExpression()), !dbg !2285
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %3, metadata !2286, metadata !DIExpression()), !dbg !2287
  br label %7, !dbg !2288

7:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #4, !dbg !2289, !srcloc !2291
  br label %8, !dbg !2289

8:                                                ; preds = %7
  %9 = load %struct.k_sem*, %struct.k_sem** %4, align 4, !dbg !2292
  %10 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !2293
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !2293
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !2293
  %13 = call i32 @z_impl_k_sem_take(%struct.k_sem* %9, [1 x i64] %12) #3, !dbg !2293
  ret i32 %13, !dbg !2294
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.37() #0 !dbg !2295 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2296, metadata !DIExpression()), !dbg !2297
  call void @bench_test_start.51() #3, !dbg !2298
  %2 = call i32 @TIME_STAMP_DELTA_GET.38(i32 0) #3, !dbg !2299
  store i32 %2, i32* %1, align 4, !dbg !2300
  %3 = load i32, i32* %1, align 4, !dbg !2301
  ret i32 %3, !dbg !2302
}

declare dso_local i32 @k_mbox_get(%struct.k_mbox*, %struct.k_mbox_msg*, i8*, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.38(i32) #0 !dbg !2303 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2304, metadata !DIExpression()), !dbg !2305
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2306, metadata !DIExpression()), !dbg !2307
  call void @timestamp_serialize.48() #3, !dbg !2308
  %5 = call i32 @k_cycle_get_32.49() #3, !dbg !2309
  store i32 %5, i32* %3, align 4, !dbg !2310
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2311, metadata !DIExpression()), !dbg !2312
  %6 = load i32, i32* %3, align 4, !dbg !2313
  %7 = load i32, i32* %2, align 4, !dbg !2314
  %8 = icmp uge i32 %6, %7, !dbg !2315
  br i1 %8, label %9, label %13, !dbg !2316

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !2317
  %11 = load i32, i32* %2, align 4, !dbg !2318
  %12 = sub i32 %10, %11, !dbg !2319
  br label %18, !dbg !2316

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !2320
  %15 = sub i32 -1, %14, !dbg !2321
  %16 = load i32, i32* %3, align 4, !dbg !2322
  %17 = add i32 %15, %16, !dbg !2323
  br label %18, !dbg !2316

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !2316
  store i32 %19, i32* %4, align 4, !dbg !2312
  %20 = load i32, i32* %2, align 4, !dbg !2324
  %21 = icmp ugt i32 %20, 0, !dbg !2326
  br i1 %21, label %22, label %26, !dbg !2327

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !2328
  %24 = load i32, i32* %4, align 4, !dbg !2330
  %25 = sub i32 %24, %23, !dbg !2330
  store i32 %25, i32* %4, align 4, !dbg !2330
  br label %26, !dbg !2331

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !2332
  ret i32 %27, !dbg !2333
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.39(i64) #0 !dbg !2334 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2335, metadata !DIExpression()), !dbg !2337
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2339, metadata !DIExpression()), !dbg !2340
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2341, metadata !DIExpression()), !dbg !2342
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2343, metadata !DIExpression()), !dbg !2344
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2345, metadata !DIExpression()), !dbg !2346
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !2347, metadata !DIExpression()), !dbg !2348
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !2349, metadata !DIExpression()), !dbg !2350
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !2351, metadata !DIExpression()), !dbg !2352
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2353, metadata !DIExpression()), !dbg !2354
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2355, metadata !DIExpression()), !dbg !2356
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2357, metadata !DIExpression()), !dbg !2360
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2361, metadata !DIExpression()), !dbg !2362
  %15 = load i64, i64* %14, align 8, !dbg !2363
  %16 = call i32 @sys_clock_hw_cycles_per_sec.47() #3, !dbg !2364
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !2365
  %18 = trunc i8 %17 to i1, !dbg !2365
  br i1 %18, label %19, label %28, !dbg !2366

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !2367
  %21 = load i32, i32* %4, align 4, !dbg !2368
  %22 = icmp ugt i32 %20, %21, !dbg !2369
  br i1 %22, label %23, label %28, !dbg !2370

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !2371
  %25 = load i32, i32* %4, align 4, !dbg !2372
  %26 = urem i32 %24, %25, !dbg !2373
  %27 = icmp eq i32 %26, 0, !dbg !2374
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !2375
  %30 = zext i1 %29 to i8, !dbg !2352
  store i8 %30, i8* %10, align 1, !dbg !2352
  %31 = load i8, i8* %6, align 1, !dbg !2376
  %32 = trunc i8 %31 to i1, !dbg !2376
  br i1 %32, label %33, label %42, !dbg !2377

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !2378
  %35 = load i32, i32* %5, align 4, !dbg !2379
  %36 = icmp ugt i32 %34, %35, !dbg !2380
  br i1 %36, label %37, label %42, !dbg !2381

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !2382
  %39 = load i32, i32* %5, align 4, !dbg !2383
  %40 = urem i32 %38, %39, !dbg !2384
  %41 = icmp eq i32 %40, 0, !dbg !2385
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !2375
  %44 = zext i1 %43 to i8, !dbg !2354
  store i8 %44, i8* %11, align 1, !dbg !2354
  %45 = load i32, i32* %4, align 4, !dbg !2386
  %46 = load i32, i32* %5, align 4, !dbg !2388
  %47 = icmp eq i32 %45, %46, !dbg !2389
  br i1 %47, label %48, label %59, !dbg !2390

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !2391
  %50 = trunc i8 %49 to i1, !dbg !2391
  br i1 %50, label %51, label %55, !dbg !2391

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !2393
  %53 = trunc i64 %52 to i32, !dbg !2394
  %54 = zext i32 %53 to i64, !dbg !2395
  br label %57, !dbg !2391

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !2396
  br label %57, !dbg !2391

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !2391
  store i64 %58, i64* %2, align 8, !dbg !2397
  br label %161, !dbg !2397

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !2356
  %60 = load i8, i8* %10, align 1, !dbg !2398
  %61 = trunc i8 %60 to i1, !dbg !2398
  br i1 %61, label %88, label %62, !dbg !2399

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !2400
  %64 = trunc i8 %63 to i1, !dbg !2400
  br i1 %64, label %65, label %69, !dbg !2400

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !2401
  %67 = load i32, i32* %5, align 4, !dbg !2402
  %68 = udiv i32 %66, %67, !dbg !2403
  br label %71, !dbg !2400

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !2404
  br label %71, !dbg !2400

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !2400
  store i32 %72, i32* %13, align 4, !dbg !2360
  %73 = load i8, i8* %8, align 1, !dbg !2405
  %74 = trunc i8 %73 to i1, !dbg !2405
  br i1 %74, label %75, label %79, !dbg !2407

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !2408
  %77 = sub i32 %76, 1, !dbg !2410
  %78 = zext i32 %77 to i64, !dbg !2408
  store i64 %78, i64* %12, align 8, !dbg !2411
  br label %87, !dbg !2412

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !2413
  %81 = trunc i8 %80 to i1, !dbg !2413
  br i1 %81, label %82, label %86, !dbg !2415

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !2416
  %84 = udiv i32 %83, 2, !dbg !2418
  %85 = zext i32 %84 to i64, !dbg !2416
  store i64 %85, i64* %12, align 8, !dbg !2419
  br label %86, !dbg !2420

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !2421

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !2422
  %90 = trunc i8 %89 to i1, !dbg !2422
  br i1 %90, label %91, label %115, !dbg !2424

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !2425
  %93 = load i64, i64* %3, align 8, !dbg !2427
  %94 = add i64 %93, %92, !dbg !2427
  store i64 %94, i64* %3, align 8, !dbg !2427
  %95 = load i8, i8* %7, align 1, !dbg !2428
  %96 = trunc i8 %95 to i1, !dbg !2428
  br i1 %96, label %97, label %108, !dbg !2430

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !2431
  %99 = icmp ult i64 %98, 4294967296, !dbg !2432
  br i1 %99, label %100, label %108, !dbg !2433

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !2434
  %102 = trunc i64 %101 to i32, !dbg !2436
  %103 = load i32, i32* %4, align 4, !dbg !2437
  %104 = load i32, i32* %5, align 4, !dbg !2438
  %105 = udiv i32 %103, %104, !dbg !2439
  %106 = udiv i32 %102, %105, !dbg !2440
  %107 = zext i32 %106 to i64, !dbg !2441
  store i64 %107, i64* %2, align 8, !dbg !2442
  br label %161, !dbg !2442

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !2443
  %110 = load i32, i32* %4, align 4, !dbg !2445
  %111 = load i32, i32* %5, align 4, !dbg !2446
  %112 = udiv i32 %110, %111, !dbg !2447
  %113 = zext i32 %112 to i64, !dbg !2448
  %114 = udiv i64 %109, %113, !dbg !2449
  store i64 %114, i64* %2, align 8, !dbg !2450
  br label %161, !dbg !2450

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !2451
  %117 = trunc i8 %116 to i1, !dbg !2451
  br i1 %117, label %118, label %136, !dbg !2453

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !2454
  %120 = trunc i8 %119 to i1, !dbg !2454
  br i1 %120, label %121, label %129, !dbg !2457

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !2458
  %123 = trunc i64 %122 to i32, !dbg !2460
  %124 = load i32, i32* %5, align 4, !dbg !2461
  %125 = load i32, i32* %4, align 4, !dbg !2462
  %126 = udiv i32 %124, %125, !dbg !2463
  %127 = mul i32 %123, %126, !dbg !2464
  %128 = zext i32 %127 to i64, !dbg !2465
  store i64 %128, i64* %2, align 8, !dbg !2466
  br label %161, !dbg !2466

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !2467
  %131 = load i32, i32* %5, align 4, !dbg !2469
  %132 = load i32, i32* %4, align 4, !dbg !2470
  %133 = udiv i32 %131, %132, !dbg !2471
  %134 = zext i32 %133 to i64, !dbg !2472
  %135 = mul i64 %130, %134, !dbg !2473
  store i64 %135, i64* %2, align 8, !dbg !2474
  br label %161, !dbg !2474

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !2475
  %138 = trunc i8 %137 to i1, !dbg !2475
  br i1 %138, label %139, label %151, !dbg !2478

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !2479
  %141 = load i32, i32* %5, align 4, !dbg !2481
  %142 = zext i32 %141 to i64, !dbg !2481
  %143 = mul i64 %140, %142, !dbg !2482
  %144 = load i64, i64* %12, align 8, !dbg !2483
  %145 = add i64 %143, %144, !dbg !2484
  %146 = load i32, i32* %4, align 4, !dbg !2485
  %147 = zext i32 %146 to i64, !dbg !2485
  %148 = udiv i64 %145, %147, !dbg !2486
  %149 = trunc i64 %148 to i32, !dbg !2487
  %150 = zext i32 %149 to i64, !dbg !2487
  store i64 %150, i64* %2, align 8, !dbg !2488
  br label %161, !dbg !2488

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !2489
  %153 = load i32, i32* %5, align 4, !dbg !2491
  %154 = zext i32 %153 to i64, !dbg !2491
  %155 = mul i64 %152, %154, !dbg !2492
  %156 = load i64, i64* %12, align 8, !dbg !2493
  %157 = add i64 %155, %156, !dbg !2494
  %158 = load i32, i32* %4, align 4, !dbg !2495
  %159 = zext i32 %158 to i64, !dbg !2495
  %160 = udiv i64 %157, %159, !dbg !2496
  store i64 %160, i64* %2, align 8, !dbg !2497
  br label %161, !dbg !2497

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !2498
  ret i64 %162, !dbg !2499
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.40() #0 !dbg !2500 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.43(i64* @timestamp_check.42) #3, !dbg !2501
  store i64 %2, i64* @timestamp_check.42, align 8, !dbg !2502
  %3 = load i64, i64* @timestamp_check.42, align 8, !dbg !2503
  %4 = icmp sge i64 %3, 1000, !dbg !2505
  br i1 %4, label %5, label %6, !dbg !2506

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !2507
  br label %7, !dbg !2507

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !2509
  br label %7, !dbg !2509

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !2510
  ret i32 %8, !dbg !2510
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.43(i64*) #0 !dbg !2511 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !2512, metadata !DIExpression()), !dbg !2513
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2514, metadata !DIExpression()), !dbg !2515
  call void @llvm.dbg.declare(metadata i64* %4, metadata !2516, metadata !DIExpression()), !dbg !2517
  %5 = call i64 @k_uptime_get.44() #3, !dbg !2518
  store i64 %5, i64* %3, align 8, !dbg !2519
  %6 = load i64, i64* %3, align 8, !dbg !2520
  %7 = load i64*, i64** %2, align 4, !dbg !2521
  %8 = load i64, i64* %7, align 8, !dbg !2522
  %9 = sub i64 %6, %8, !dbg !2523
  store i64 %9, i64* %4, align 8, !dbg !2524
  %10 = load i64, i64* %3, align 8, !dbg !2525
  %11 = load i64*, i64** %2, align 4, !dbg !2526
  store i64 %10, i64* %11, align 8, !dbg !2527
  %12 = load i64, i64* %4, align 8, !dbg !2528
  ret i64 %12, !dbg !2529
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.44() #0 !dbg !2530 {
  %1 = call i64 @k_uptime_ticks.45() #3, !dbg !2531
  %2 = call i64 @k_ticks_to_ms_floor64.46(i64 %1) #3, !dbg !2532
  ret i64 %2, !dbg !2533
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.45() #0 !dbg !2534 {
  br label %1, !dbg !2535

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !2536, !srcloc !2538
  br label %2, !dbg !2536

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !2539
  ret i64 %3, !dbg !2540
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.46(i64) #0 !dbg !2541 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2335, metadata !DIExpression()), !dbg !2542
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2339, metadata !DIExpression()), !dbg !2544
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2341, metadata !DIExpression()), !dbg !2545
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2343, metadata !DIExpression()), !dbg !2546
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2345, metadata !DIExpression()), !dbg !2547
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !2347, metadata !DIExpression()), !dbg !2548
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !2349, metadata !DIExpression()), !dbg !2549
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !2351, metadata !DIExpression()), !dbg !2550
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2353, metadata !DIExpression()), !dbg !2551
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2355, metadata !DIExpression()), !dbg !2552
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2357, metadata !DIExpression()), !dbg !2553
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2554, metadata !DIExpression()), !dbg !2555
  %15 = load i64, i64* %14, align 8, !dbg !2556
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !2557
  %17 = trunc i8 %16 to i1, !dbg !2557
  br i1 %17, label %18, label %27, !dbg !2558

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !2559
  %20 = load i32, i32* %4, align 4, !dbg !2560
  %21 = icmp ugt i32 %19, %20, !dbg !2561
  br i1 %21, label %22, label %27, !dbg !2562

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !2563
  %24 = load i32, i32* %4, align 4, !dbg !2564
  %25 = urem i32 %23, %24, !dbg !2565
  %26 = icmp eq i32 %25, 0, !dbg !2566
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !2567
  %29 = zext i1 %28 to i8, !dbg !2550
  store i8 %29, i8* %10, align 1, !dbg !2550
  %30 = load i8, i8* %6, align 1, !dbg !2568
  %31 = trunc i8 %30 to i1, !dbg !2568
  br i1 %31, label %32, label %41, !dbg !2569

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !2570
  %34 = load i32, i32* %5, align 4, !dbg !2571
  %35 = icmp ugt i32 %33, %34, !dbg !2572
  br i1 %35, label %36, label %41, !dbg !2573

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !2574
  %38 = load i32, i32* %5, align 4, !dbg !2575
  %39 = urem i32 %37, %38, !dbg !2576
  %40 = icmp eq i32 %39, 0, !dbg !2577
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !2567
  %43 = zext i1 %42 to i8, !dbg !2551
  store i8 %43, i8* %11, align 1, !dbg !2551
  %44 = load i32, i32* %4, align 4, !dbg !2578
  %45 = load i32, i32* %5, align 4, !dbg !2579
  %46 = icmp eq i32 %44, %45, !dbg !2580
  br i1 %46, label %47, label %58, !dbg !2581

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !2582
  %49 = trunc i8 %48 to i1, !dbg !2582
  br i1 %49, label %50, label %54, !dbg !2582

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !2583
  %52 = trunc i64 %51 to i32, !dbg !2584
  %53 = zext i32 %52 to i64, !dbg !2585
  br label %56, !dbg !2582

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !2586
  br label %56, !dbg !2582

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !2582
  store i64 %57, i64* %2, align 8, !dbg !2587
  br label %160, !dbg !2587

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !2552
  %59 = load i8, i8* %10, align 1, !dbg !2588
  %60 = trunc i8 %59 to i1, !dbg !2588
  br i1 %60, label %87, label %61, !dbg !2589

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !2590
  %63 = trunc i8 %62 to i1, !dbg !2590
  br i1 %63, label %64, label %68, !dbg !2590

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !2591
  %66 = load i32, i32* %5, align 4, !dbg !2592
  %67 = udiv i32 %65, %66, !dbg !2593
  br label %70, !dbg !2590

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !2594
  br label %70, !dbg !2590

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !2590
  store i32 %71, i32* %13, align 4, !dbg !2553
  %72 = load i8, i8* %8, align 1, !dbg !2595
  %73 = trunc i8 %72 to i1, !dbg !2595
  br i1 %73, label %74, label %78, !dbg !2596

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !2597
  %76 = sub i32 %75, 1, !dbg !2598
  %77 = zext i32 %76 to i64, !dbg !2597
  store i64 %77, i64* %12, align 8, !dbg !2599
  br label %86, !dbg !2600

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !2601
  %80 = trunc i8 %79 to i1, !dbg !2601
  br i1 %80, label %81, label %85, !dbg !2602

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !2603
  %83 = udiv i32 %82, 2, !dbg !2604
  %84 = zext i32 %83 to i64, !dbg !2603
  store i64 %84, i64* %12, align 8, !dbg !2605
  br label %85, !dbg !2606

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !2607

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !2608
  %89 = trunc i8 %88 to i1, !dbg !2608
  br i1 %89, label %90, label %114, !dbg !2609

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !2610
  %92 = load i64, i64* %3, align 8, !dbg !2611
  %93 = add i64 %92, %91, !dbg !2611
  store i64 %93, i64* %3, align 8, !dbg !2611
  %94 = load i8, i8* %7, align 1, !dbg !2612
  %95 = trunc i8 %94 to i1, !dbg !2612
  br i1 %95, label %96, label %107, !dbg !2613

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !2614
  %98 = icmp ult i64 %97, 4294967296, !dbg !2615
  br i1 %98, label %99, label %107, !dbg !2616

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !2617
  %101 = trunc i64 %100 to i32, !dbg !2618
  %102 = load i32, i32* %4, align 4, !dbg !2619
  %103 = load i32, i32* %5, align 4, !dbg !2620
  %104 = udiv i32 %102, %103, !dbg !2621
  %105 = udiv i32 %101, %104, !dbg !2622
  %106 = zext i32 %105 to i64, !dbg !2623
  store i64 %106, i64* %2, align 8, !dbg !2624
  br label %160, !dbg !2624

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !2625
  %109 = load i32, i32* %4, align 4, !dbg !2626
  %110 = load i32, i32* %5, align 4, !dbg !2627
  %111 = udiv i32 %109, %110, !dbg !2628
  %112 = zext i32 %111 to i64, !dbg !2629
  %113 = udiv i64 %108, %112, !dbg !2630
  store i64 %113, i64* %2, align 8, !dbg !2631
  br label %160, !dbg !2631

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !2632
  %116 = trunc i8 %115 to i1, !dbg !2632
  br i1 %116, label %117, label %135, !dbg !2633

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !2634
  %119 = trunc i8 %118 to i1, !dbg !2634
  br i1 %119, label %120, label %128, !dbg !2635

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !2636
  %122 = trunc i64 %121 to i32, !dbg !2637
  %123 = load i32, i32* %5, align 4, !dbg !2638
  %124 = load i32, i32* %4, align 4, !dbg !2639
  %125 = udiv i32 %123, %124, !dbg !2640
  %126 = mul i32 %122, %125, !dbg !2641
  %127 = zext i32 %126 to i64, !dbg !2642
  store i64 %127, i64* %2, align 8, !dbg !2643
  br label %160, !dbg !2643

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !2644
  %130 = load i32, i32* %5, align 4, !dbg !2645
  %131 = load i32, i32* %4, align 4, !dbg !2646
  %132 = udiv i32 %130, %131, !dbg !2647
  %133 = zext i32 %132 to i64, !dbg !2648
  %134 = mul i64 %129, %133, !dbg !2649
  store i64 %134, i64* %2, align 8, !dbg !2650
  br label %160, !dbg !2650

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !2651
  %137 = trunc i8 %136 to i1, !dbg !2651
  br i1 %137, label %138, label %150, !dbg !2652

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !2653
  %140 = load i32, i32* %5, align 4, !dbg !2654
  %141 = zext i32 %140 to i64, !dbg !2654
  %142 = mul i64 %139, %141, !dbg !2655
  %143 = load i64, i64* %12, align 8, !dbg !2656
  %144 = add i64 %142, %143, !dbg !2657
  %145 = load i32, i32* %4, align 4, !dbg !2658
  %146 = zext i32 %145 to i64, !dbg !2658
  %147 = udiv i64 %144, %146, !dbg !2659
  %148 = trunc i64 %147 to i32, !dbg !2660
  %149 = zext i32 %148 to i64, !dbg !2660
  store i64 %149, i64* %2, align 8, !dbg !2661
  br label %160, !dbg !2661

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !2662
  %152 = load i32, i32* %5, align 4, !dbg !2663
  %153 = zext i32 %152 to i64, !dbg !2663
  %154 = mul i64 %151, %153, !dbg !2664
  %155 = load i64, i64* %12, align 8, !dbg !2665
  %156 = add i64 %154, %155, !dbg !2666
  %157 = load i32, i32* %4, align 4, !dbg !2667
  %158 = zext i32 %157 to i64, !dbg !2667
  %159 = udiv i64 %156, %158, !dbg !2668
  store i64 %159, i64* %2, align 8, !dbg !2669
  br label %160, !dbg !2669

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !2670
  ret i64 %161, !dbg !2671
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.47() #0 !dbg !2672 {
  ret i32 72000000, !dbg !2673
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.48() #0 !dbg !2674 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !2675, !srcloc !2678
  ret void, !dbg !2679
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.49() #0 !dbg !2680 {
  %1 = call i32 @arch_k_cycle_get_32.50() #3, !dbg !2681
  ret i32 %1, !dbg !2682
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.50() #0 !dbg !2683 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !2684
  ret i32 %1, !dbg !2685
}

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.51() #0 !dbg !2686 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.42, align 8, !dbg !2687
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !2688
  store i64 1, i64* %2, align 8, !dbg !2688
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !2688
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !2688
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !2688
  %6 = call i32 @k_sleep.52([1 x i64] %5) #3, !dbg !2688
  %7 = call i64 @k_uptime_delta.43(i64* @timestamp_check.42) #3, !dbg !2689
  store i64 %7, i64* @timestamp_check.42, align 8, !dbg !2690
  ret void, !dbg !2691
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.52([1 x i64]) #0 !dbg !2692 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !2695, metadata !DIExpression()), !dbg !2696
  br label %5, !dbg !2697

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !2698, !srcloc !2700
  br label %6, !dbg !2698

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !2701
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !2701
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !2701
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !2701
  ret i32 %10, !dbg !2702
}

declare dso_local i32 @z_impl_k_sem_take(%struct.k_sem*, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define dso_local i32 @kbhit() #0 !dbg !2703 {
  ret i32 0, !dbg !2704
}

; Function Attrs: noinline nounwind optnone
define dso_local void @init_output(i32*, i32*) #0 !dbg !2705 {
  %3 = alloca i32*, align 4
  %4 = alloca i32*, align 4
  store i32* %0, i32** %3, align 4
  call void @llvm.dbg.declare(metadata i32** %3, metadata !2709, metadata !DIExpression()), !dbg !2710
  store i32* %1, i32** %4, align 4
  call void @llvm.dbg.declare(metadata i32** %4, metadata !2711, metadata !DIExpression()), !dbg !2712
  %5 = load i32*, i32** %3, align 4, !dbg !2713
  %6 = load i32*, i32** %4, align 4, !dbg !2714
  store i32* inttoptr (i32 2 to i32*), i32** @output_file, align 4, !dbg !2715
  ret void, !dbg !2716
}

; Function Attrs: noinline nounwind optnone
define dso_local void @output_close() #0 !dbg !2717 {
  ret void, !dbg !2718
}

; Function Attrs: noinline nounwind optnone
define dso_local void @main() #0 !dbg !2719 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2720, metadata !DIExpression()), !dbg !2721
  store i32 0, i32* %1, align 4, !dbg !2721
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2722, metadata !DIExpression()), !dbg !2723
  store i32 0, i32* %2, align 4, !dbg !2723
  call void @init_output(i32* %2, i32* %1) #3, !dbg !2724
  call void @bench_test_init() #3, !dbg !2725
  %3 = load i32*, i32** @output_file, align 4, !dbg !2726
  %4 = call i32 @fputs(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @newline, i32 0, i32 0), i32* %3) #3, !dbg !2726
  br label %5, !dbg !2727

5:                                                ; preds = %27, %0
  %6 = load i32*, i32** @output_file, align 4, !dbg !2728
  %7 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1.74, i32 0, i32 0), i32* %6) #3, !dbg !2728
  %8 = load i32*, i32** @output_file, align 4, !dbg !2730
  %9 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2.75, i32 0, i32 0), i32* %8) #3, !dbg !2730
  %10 = load i32*, i32** @output_file, align 4, !dbg !2731
  %11 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1.74, i32 0, i32 0), i32* %10) #3, !dbg !2731
  call void @queue_test() #3, !dbg !2732
  call void @sema_test() #3, !dbg !2733
  call void @mutex_test() #3, !dbg !2734
  call void @memorymap_test() #3, !dbg !2735
  call void @mempool_test() #3, !dbg !2736
  call void @mailbox_test() #3, !dbg !2737
  call void @pipe_test() #3, !dbg !2738
  %12 = load i32*, i32** @output_file, align 4, !dbg !2739
  %13 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.3.76, i32 0, i32 0), i32* %12) #3, !dbg !2739
  %14 = load i32*, i32** @output_file, align 4, !dbg !2740
  %15 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1.74, i32 0, i32 0), i32* %14) #3, !dbg !2740
  %16 = load i32*, i32** @output_file, align 4, !dbg !2741
  %17 = call i32 @fputs(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.4.77, i32 0, i32 0), i32* %16) #3, !dbg !2741
  br label %18, !dbg !2742

18:                                               ; preds = %5
  br label %19, !dbg !2743

19:                                               ; preds = %18
  br label %20, !dbg !2745

20:                                               ; preds = %19
  %21 = load i32, i32* %2, align 4, !dbg !2746
  %22 = icmp ne i32 %21, 0, !dbg !2746
  br i1 %22, label %23, label %27, !dbg !2747

23:                                               ; preds = %20
  %24 = call i32 @kbhit() #3, !dbg !2748
  %25 = icmp ne i32 %24, 0, !dbg !2749
  %26 = xor i1 %25, true, !dbg !2749
  br label %27

27:                                               ; preds = %23, %20
  %28 = phi i1 [ false, %20 ], [ %26, %23 ], !dbg !2750
  br i1 %28, label %5, label %29, !dbg !2745, !llvm.loop !2751

29:                                               ; preds = %27
  call void @k_thread_abort(%struct.k_thread.82* @_k_thread_obj_RECVTASK) #3, !dbg !2753
  call void @output_close() #3, !dbg !2754
  ret void, !dbg !2755
}

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_init() #0 !dbg !2756 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2757, metadata !DIExpression()), !dbg !2758
  %2 = call i32 @k_cycle_get_32.78() #3, !dbg !2759
  store i32 %2, i32* %1, align 4, !dbg !2758
  %3 = call i32 @k_cycle_get_32.78() #3, !dbg !2760
  %4 = load i32, i32* %1, align 4, !dbg !2761
  %5 = sub i32 %3, %4, !dbg !2762
  store i32 %5, i32* @tm_off, align 4, !dbg !2763
  ret void, !dbg !2764
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_abort(%struct.k_thread.82*) #0 !dbg !2765 {
  %2 = alloca %struct.k_thread.82*, align 4
  store %struct.k_thread.82* %0, %struct.k_thread.82** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.82** %2, metadata !2768, metadata !DIExpression()), !dbg !2769
  br label %3, !dbg !2770

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !2771, !srcloc !2773
  br label %4, !dbg !2771

4:                                                ; preds = %3
  %5 = load %struct.k_thread.82*, %struct.k_thread.82** %2, align 4, !dbg !2774
  call void @z_impl_k_thread_abort(%struct.k_thread.82* %5) #3, !dbg !2775
  ret void, !dbg !2776
}

declare dso_local void @z_impl_k_thread_abort(%struct.k_thread.82*) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.78() #0 !dbg !2777 {
  %1 = call i32 @arch_k_cycle_get_32.79() #3, !dbg !2778
  ret i32 %1, !dbg !2779
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.79() #0 !dbg !2780 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !2781
  ret i32 %1, !dbg !2782
}

; Function Attrs: noinline nounwind optnone
define dso_local void @dummy_test() #0 !dbg !2783 {
  ret void, !dbg !2784
}

; Function Attrs: noinline nounwind optnone
define dso_local void @memorymap_test() #0 !dbg !2785 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i8*, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2787, metadata !DIExpression()), !dbg !2788
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2789, metadata !DIExpression()), !dbg !2790
  call void @llvm.dbg.declare(metadata i8** %3, metadata !2791, metadata !DIExpression()), !dbg !2792
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2793, metadata !DIExpression()), !dbg !2794
  %6 = load i32*, i32** @output_file, align 4, !dbg !2795
  %7 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.82, i32 0, i32 0), i32* %6) #3, !dbg !2795
  %8 = call i32 @BENCH_START.83() #3, !dbg !2796
  store i32 %8, i32* %1, align 4, !dbg !2797
  store i32 0, i32* %2, align 4, !dbg !2798
  br label %9, !dbg !2800

9:                                                ; preds = %26, %0
  %10 = load i32, i32* %2, align 4, !dbg !2801
  %11 = icmp slt i32 %10, 1000, !dbg !2803
  br i1 %11, label %12, label %29, !dbg !2804

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !2805
  store i64 -1, i64* %13, align 8, !dbg !2805
  %14 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !2807
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !2807
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !2807
  %17 = call i32 @k_mem_slab_alloc(%struct.k_mem_slab* @MAP1, i8** %3, [1 x i64] %16) #3, !dbg !2807
  store i32 %17, i32* %4, align 4, !dbg !2808
  %18 = load i32, i32* %4, align 4, !dbg !2809
  %19 = icmp ne i32 %18, 0, !dbg !2811
  br i1 %19, label %20, label %25, !dbg !2812

20:                                               ; preds = %12
  %21 = load i32, i32* %4, align 4, !dbg !2813
  %22 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.84, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2.85, i32 0, i32 0), i32 %21) #3, !dbg !2813
  %23 = load i32*, i32** @output_file, align 4, !dbg !2813
  %24 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %23) #3, !dbg !2813
  br label %29, !dbg !2816

25:                                               ; preds = %12
  call void @k_mem_slab_free(%struct.k_mem_slab* @MAP1, i8** %3) #3, !dbg !2817
  br label %26, !dbg !2818

26:                                               ; preds = %25
  %27 = load i32, i32* %2, align 4, !dbg !2819
  %28 = add i32 %27, 1, !dbg !2819
  store i32 %28, i32* %2, align 4, !dbg !2819
  br label %9, !dbg !2820, !llvm.loop !2821

29:                                               ; preds = %20, %9
  %30 = load i32, i32* %1, align 4, !dbg !2823
  %31 = call i32 @TIME_STAMP_DELTA_GET.86(i32 %30) #3, !dbg !2824
  store i32 %31, i32* %1, align 4, !dbg !2825
  call void @check_result.87() #3, !dbg !2826
  %32 = load i32, i32* %1, align 4, !dbg !2827
  %33 = zext i32 %32 to i64, !dbg !2827
  %34 = call i64 @k_cyc_to_ns_floor64.88(i64 %33) #3, !dbg !2827
  %35 = udiv i64 %34, 2000, !dbg !2827
  %36 = trunc i64 %35 to i32, !dbg !2827
  %37 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.84, i32 0, i32 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.3.89, i32 0, i32 0), i32 %36) #3, !dbg !2827
  %38 = load i32*, i32** @output_file, align 4, !dbg !2827
  %39 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %38) #3, !dbg !2827
  ret void, !dbg !2829
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.83() #0 !dbg !2830 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !2831, metadata !DIExpression()), !dbg !2832
  call void @bench_test_start.101() #3, !dbg !2833
  %2 = call i32 @TIME_STAMP_DELTA_GET.86(i32 0) #3, !dbg !2834
  store i32 %2, i32* %1, align 4, !dbg !2835
  %3 = load i32, i32* %1, align 4, !dbg !2836
  ret i32 %3, !dbg !2837
}

declare dso_local i32 @k_mem_slab_alloc(%struct.k_mem_slab*, i8**, [1 x i64]) #2

declare dso_local void @k_mem_slab_free(%struct.k_mem_slab*, i8**) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.86(i32) #0 !dbg !2838 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !2839, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.declare(metadata i32* %3, metadata !2841, metadata !DIExpression()), !dbg !2842
  call void @timestamp_serialize.98() #3, !dbg !2843
  %5 = call i32 @k_cycle_get_32.99() #3, !dbg !2844
  store i32 %5, i32* %3, align 4, !dbg !2845
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2846, metadata !DIExpression()), !dbg !2847
  %6 = load i32, i32* %3, align 4, !dbg !2848
  %7 = load i32, i32* %2, align 4, !dbg !2849
  %8 = icmp uge i32 %6, %7, !dbg !2850
  br i1 %8, label %9, label %13, !dbg !2851

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !2852
  %11 = load i32, i32* %2, align 4, !dbg !2853
  %12 = sub i32 %10, %11, !dbg !2854
  br label %18, !dbg !2851

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !2855
  %15 = sub i32 -1, %14, !dbg !2856
  %16 = load i32, i32* %3, align 4, !dbg !2857
  %17 = add i32 %15, %16, !dbg !2858
  br label %18, !dbg !2851

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !2851
  store i32 %19, i32* %4, align 4, !dbg !2847
  %20 = load i32, i32* %2, align 4, !dbg !2859
  %21 = icmp ugt i32 %20, 0, !dbg !2861
  br i1 %21, label %22, label %26, !dbg !2862

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !2863
  %24 = load i32, i32* %4, align 4, !dbg !2865
  %25 = sub i32 %24, %23, !dbg !2865
  store i32 %25, i32* %4, align 4, !dbg !2865
  br label %26, !dbg !2866

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !2867
  ret i32 %27, !dbg !2868
}

; Function Attrs: noinline nounwind optnone
define internal void @check_result.87() #0 !dbg !2869 {
  %1 = call i32 @bench_test_end.91() #3, !dbg !2870
  %2 = icmp slt i32 %1, 0, !dbg !2872
  br i1 %2, label %3, label %7, !dbg !2873

3:                                                ; preds = %0
  %4 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.4.92, i32 0, i32 0), i32 187) #3, !dbg !2874
  %5 = load i32*, i32** @output_file, align 4, !dbg !2874
  %6 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %5) #3, !dbg !2874
  br label %7, !dbg !2877

7:                                                ; preds = %3, %0
  ret void, !dbg !2878
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.88(i64) #0 !dbg !2879 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2880, metadata !DIExpression()), !dbg !2882
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2884, metadata !DIExpression()), !dbg !2885
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2886, metadata !DIExpression()), !dbg !2887
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2888, metadata !DIExpression()), !dbg !2889
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2890, metadata !DIExpression()), !dbg !2891
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !2892, metadata !DIExpression()), !dbg !2893
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !2894, metadata !DIExpression()), !dbg !2895
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !2896, metadata !DIExpression()), !dbg !2897
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2898, metadata !DIExpression()), !dbg !2899
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2900, metadata !DIExpression()), !dbg !2901
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2902, metadata !DIExpression()), !dbg !2905
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !2906, metadata !DIExpression()), !dbg !2907
  %15 = load i64, i64* %14, align 8, !dbg !2908
  %16 = call i32 @sys_clock_hw_cycles_per_sec.90() #3, !dbg !2909
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !2910
  %18 = trunc i8 %17 to i1, !dbg !2910
  br i1 %18, label %19, label %28, !dbg !2911

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !2912
  %21 = load i32, i32* %4, align 4, !dbg !2913
  %22 = icmp ugt i32 %20, %21, !dbg !2914
  br i1 %22, label %23, label %28, !dbg !2915

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !2916
  %25 = load i32, i32* %4, align 4, !dbg !2917
  %26 = urem i32 %24, %25, !dbg !2918
  %27 = icmp eq i32 %26, 0, !dbg !2919
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !2920
  %30 = zext i1 %29 to i8, !dbg !2897
  store i8 %30, i8* %10, align 1, !dbg !2897
  %31 = load i8, i8* %6, align 1, !dbg !2921
  %32 = trunc i8 %31 to i1, !dbg !2921
  br i1 %32, label %33, label %42, !dbg !2922

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !2923
  %35 = load i32, i32* %5, align 4, !dbg !2924
  %36 = icmp ugt i32 %34, %35, !dbg !2925
  br i1 %36, label %37, label %42, !dbg !2926

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !2927
  %39 = load i32, i32* %5, align 4, !dbg !2928
  %40 = urem i32 %38, %39, !dbg !2929
  %41 = icmp eq i32 %40, 0, !dbg !2930
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !2920
  %44 = zext i1 %43 to i8, !dbg !2899
  store i8 %44, i8* %11, align 1, !dbg !2899
  %45 = load i32, i32* %4, align 4, !dbg !2931
  %46 = load i32, i32* %5, align 4, !dbg !2933
  %47 = icmp eq i32 %45, %46, !dbg !2934
  br i1 %47, label %48, label %59, !dbg !2935

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !2936
  %50 = trunc i8 %49 to i1, !dbg !2936
  br i1 %50, label %51, label %55, !dbg !2936

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !2938
  %53 = trunc i64 %52 to i32, !dbg !2939
  %54 = zext i32 %53 to i64, !dbg !2940
  br label %57, !dbg !2936

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !2941
  br label %57, !dbg !2936

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !2936
  store i64 %58, i64* %2, align 8, !dbg !2942
  br label %161, !dbg !2942

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !2901
  %60 = load i8, i8* %10, align 1, !dbg !2943
  %61 = trunc i8 %60 to i1, !dbg !2943
  br i1 %61, label %88, label %62, !dbg !2944

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !2945
  %64 = trunc i8 %63 to i1, !dbg !2945
  br i1 %64, label %65, label %69, !dbg !2945

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !2946
  %67 = load i32, i32* %5, align 4, !dbg !2947
  %68 = udiv i32 %66, %67, !dbg !2948
  br label %71, !dbg !2945

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !2949
  br label %71, !dbg !2945

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !2945
  store i32 %72, i32* %13, align 4, !dbg !2905
  %73 = load i8, i8* %8, align 1, !dbg !2950
  %74 = trunc i8 %73 to i1, !dbg !2950
  br i1 %74, label %75, label %79, !dbg !2952

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !2953
  %77 = sub i32 %76, 1, !dbg !2955
  %78 = zext i32 %77 to i64, !dbg !2953
  store i64 %78, i64* %12, align 8, !dbg !2956
  br label %87, !dbg !2957

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !2958
  %81 = trunc i8 %80 to i1, !dbg !2958
  br i1 %81, label %82, label %86, !dbg !2960

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !2961
  %84 = udiv i32 %83, 2, !dbg !2963
  %85 = zext i32 %84 to i64, !dbg !2961
  store i64 %85, i64* %12, align 8, !dbg !2964
  br label %86, !dbg !2965

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !2966

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !2967
  %90 = trunc i8 %89 to i1, !dbg !2967
  br i1 %90, label %91, label %115, !dbg !2969

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !2970
  %93 = load i64, i64* %3, align 8, !dbg !2972
  %94 = add i64 %93, %92, !dbg !2972
  store i64 %94, i64* %3, align 8, !dbg !2972
  %95 = load i8, i8* %7, align 1, !dbg !2973
  %96 = trunc i8 %95 to i1, !dbg !2973
  br i1 %96, label %97, label %108, !dbg !2975

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !2976
  %99 = icmp ult i64 %98, 4294967296, !dbg !2977
  br i1 %99, label %100, label %108, !dbg !2978

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !2979
  %102 = trunc i64 %101 to i32, !dbg !2981
  %103 = load i32, i32* %4, align 4, !dbg !2982
  %104 = load i32, i32* %5, align 4, !dbg !2983
  %105 = udiv i32 %103, %104, !dbg !2984
  %106 = udiv i32 %102, %105, !dbg !2985
  %107 = zext i32 %106 to i64, !dbg !2986
  store i64 %107, i64* %2, align 8, !dbg !2987
  br label %161, !dbg !2987

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !2988
  %110 = load i32, i32* %4, align 4, !dbg !2990
  %111 = load i32, i32* %5, align 4, !dbg !2991
  %112 = udiv i32 %110, %111, !dbg !2992
  %113 = zext i32 %112 to i64, !dbg !2993
  %114 = udiv i64 %109, %113, !dbg !2994
  store i64 %114, i64* %2, align 8, !dbg !2995
  br label %161, !dbg !2995

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !2996
  %117 = trunc i8 %116 to i1, !dbg !2996
  br i1 %117, label %118, label %136, !dbg !2998

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !2999
  %120 = trunc i8 %119 to i1, !dbg !2999
  br i1 %120, label %121, label %129, !dbg !3002

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !3003
  %123 = trunc i64 %122 to i32, !dbg !3005
  %124 = load i32, i32* %5, align 4, !dbg !3006
  %125 = load i32, i32* %4, align 4, !dbg !3007
  %126 = udiv i32 %124, %125, !dbg !3008
  %127 = mul i32 %123, %126, !dbg !3009
  %128 = zext i32 %127 to i64, !dbg !3010
  store i64 %128, i64* %2, align 8, !dbg !3011
  br label %161, !dbg !3011

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !3012
  %131 = load i32, i32* %5, align 4, !dbg !3014
  %132 = load i32, i32* %4, align 4, !dbg !3015
  %133 = udiv i32 %131, %132, !dbg !3016
  %134 = zext i32 %133 to i64, !dbg !3017
  %135 = mul i64 %130, %134, !dbg !3018
  store i64 %135, i64* %2, align 8, !dbg !3019
  br label %161, !dbg !3019

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !3020
  %138 = trunc i8 %137 to i1, !dbg !3020
  br i1 %138, label %139, label %151, !dbg !3023

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !3024
  %141 = load i32, i32* %5, align 4, !dbg !3026
  %142 = zext i32 %141 to i64, !dbg !3026
  %143 = mul i64 %140, %142, !dbg !3027
  %144 = load i64, i64* %12, align 8, !dbg !3028
  %145 = add i64 %143, %144, !dbg !3029
  %146 = load i32, i32* %4, align 4, !dbg !3030
  %147 = zext i32 %146 to i64, !dbg !3030
  %148 = udiv i64 %145, %147, !dbg !3031
  %149 = trunc i64 %148 to i32, !dbg !3032
  %150 = zext i32 %149 to i64, !dbg !3032
  store i64 %150, i64* %2, align 8, !dbg !3033
  br label %161, !dbg !3033

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !3034
  %153 = load i32, i32* %5, align 4, !dbg !3036
  %154 = zext i32 %153 to i64, !dbg !3036
  %155 = mul i64 %152, %154, !dbg !3037
  %156 = load i64, i64* %12, align 8, !dbg !3038
  %157 = add i64 %155, %156, !dbg !3039
  %158 = load i32, i32* %4, align 4, !dbg !3040
  %159 = zext i32 %158 to i64, !dbg !3040
  %160 = udiv i64 %157, %159, !dbg !3041
  store i64 %160, i64* %2, align 8, !dbg !3042
  br label %161, !dbg !3042

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !3043
  ret i64 %162, !dbg !3044
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.90() #0 !dbg !3045 {
  ret i32 72000000, !dbg !3046
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.91() #0 !dbg !3047 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.94(i64* @timestamp_check.93) #3, !dbg !3048
  store i64 %2, i64* @timestamp_check.93, align 8, !dbg !3049
  %3 = load i64, i64* @timestamp_check.93, align 8, !dbg !3050
  %4 = icmp sge i64 %3, 1000, !dbg !3052
  br i1 %4, label %5, label %6, !dbg !3053

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !3054
  br label %7, !dbg !3054

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !3056
  br label %7, !dbg !3056

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !3057
  ret i32 %8, !dbg !3057
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.94(i64*) #0 !dbg !3058 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !3059, metadata !DIExpression()), !dbg !3060
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3061, metadata !DIExpression()), !dbg !3062
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3063, metadata !DIExpression()), !dbg !3064
  %5 = call i64 @k_uptime_get.95() #3, !dbg !3065
  store i64 %5, i64* %3, align 8, !dbg !3066
  %6 = load i64, i64* %3, align 8, !dbg !3067
  %7 = load i64*, i64** %2, align 4, !dbg !3068
  %8 = load i64, i64* %7, align 8, !dbg !3069
  %9 = sub i64 %6, %8, !dbg !3070
  store i64 %9, i64* %4, align 8, !dbg !3071
  %10 = load i64, i64* %3, align 8, !dbg !3072
  %11 = load i64*, i64** %2, align 4, !dbg !3073
  store i64 %10, i64* %11, align 8, !dbg !3074
  %12 = load i64, i64* %4, align 8, !dbg !3075
  ret i64 %12, !dbg !3076
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.95() #0 !dbg !3077 {
  %1 = call i64 @k_uptime_ticks.96() #3, !dbg !3078
  %2 = call i64 @k_ticks_to_ms_floor64.97(i64 %1) #3, !dbg !3079
  ret i64 %2, !dbg !3080
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.96() #0 !dbg !3081 {
  br label %1, !dbg !3082

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !3083, !srcloc !3085
  br label %2, !dbg !3083

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !3086
  ret i64 %3, !dbg !3087
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.97(i64) #0 !dbg !3088 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !2880, metadata !DIExpression()), !dbg !3089
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !2884, metadata !DIExpression()), !dbg !3091
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !2886, metadata !DIExpression()), !dbg !3092
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !2888, metadata !DIExpression()), !dbg !3093
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !2890, metadata !DIExpression()), !dbg !3094
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !2892, metadata !DIExpression()), !dbg !3095
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !2894, metadata !DIExpression()), !dbg !3096
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !2896, metadata !DIExpression()), !dbg !3097
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !2898, metadata !DIExpression()), !dbg !3098
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !2900, metadata !DIExpression()), !dbg !3099
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !2902, metadata !DIExpression()), !dbg !3100
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3101, metadata !DIExpression()), !dbg !3102
  %15 = load i64, i64* %14, align 8, !dbg !3103
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !3104
  %17 = trunc i8 %16 to i1, !dbg !3104
  br i1 %17, label %18, label %27, !dbg !3105

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !3106
  %20 = load i32, i32* %4, align 4, !dbg !3107
  %21 = icmp ugt i32 %19, %20, !dbg !3108
  br i1 %21, label %22, label %27, !dbg !3109

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !3110
  %24 = load i32, i32* %4, align 4, !dbg !3111
  %25 = urem i32 %23, %24, !dbg !3112
  %26 = icmp eq i32 %25, 0, !dbg !3113
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !3114
  %29 = zext i1 %28 to i8, !dbg !3097
  store i8 %29, i8* %10, align 1, !dbg !3097
  %30 = load i8, i8* %6, align 1, !dbg !3115
  %31 = trunc i8 %30 to i1, !dbg !3115
  br i1 %31, label %32, label %41, !dbg !3116

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !3117
  %34 = load i32, i32* %5, align 4, !dbg !3118
  %35 = icmp ugt i32 %33, %34, !dbg !3119
  br i1 %35, label %36, label %41, !dbg !3120

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !3121
  %38 = load i32, i32* %5, align 4, !dbg !3122
  %39 = urem i32 %37, %38, !dbg !3123
  %40 = icmp eq i32 %39, 0, !dbg !3124
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !3114
  %43 = zext i1 %42 to i8, !dbg !3098
  store i8 %43, i8* %11, align 1, !dbg !3098
  %44 = load i32, i32* %4, align 4, !dbg !3125
  %45 = load i32, i32* %5, align 4, !dbg !3126
  %46 = icmp eq i32 %44, %45, !dbg !3127
  br i1 %46, label %47, label %58, !dbg !3128

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !3129
  %49 = trunc i8 %48 to i1, !dbg !3129
  br i1 %49, label %50, label %54, !dbg !3129

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !3130
  %52 = trunc i64 %51 to i32, !dbg !3131
  %53 = zext i32 %52 to i64, !dbg !3132
  br label %56, !dbg !3129

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !3133
  br label %56, !dbg !3129

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !3129
  store i64 %57, i64* %2, align 8, !dbg !3134
  br label %160, !dbg !3134

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !3099
  %59 = load i8, i8* %10, align 1, !dbg !3135
  %60 = trunc i8 %59 to i1, !dbg !3135
  br i1 %60, label %87, label %61, !dbg !3136

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !3137
  %63 = trunc i8 %62 to i1, !dbg !3137
  br i1 %63, label %64, label %68, !dbg !3137

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !3138
  %66 = load i32, i32* %5, align 4, !dbg !3139
  %67 = udiv i32 %65, %66, !dbg !3140
  br label %70, !dbg !3137

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !3141
  br label %70, !dbg !3137

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !3137
  store i32 %71, i32* %13, align 4, !dbg !3100
  %72 = load i8, i8* %8, align 1, !dbg !3142
  %73 = trunc i8 %72 to i1, !dbg !3142
  br i1 %73, label %74, label %78, !dbg !3143

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !3144
  %76 = sub i32 %75, 1, !dbg !3145
  %77 = zext i32 %76 to i64, !dbg !3144
  store i64 %77, i64* %12, align 8, !dbg !3146
  br label %86, !dbg !3147

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !3148
  %80 = trunc i8 %79 to i1, !dbg !3148
  br i1 %80, label %81, label %85, !dbg !3149

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !3150
  %83 = udiv i32 %82, 2, !dbg !3151
  %84 = zext i32 %83 to i64, !dbg !3150
  store i64 %84, i64* %12, align 8, !dbg !3152
  br label %85, !dbg !3153

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !3154

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !3155
  %89 = trunc i8 %88 to i1, !dbg !3155
  br i1 %89, label %90, label %114, !dbg !3156

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !3157
  %92 = load i64, i64* %3, align 8, !dbg !3158
  %93 = add i64 %92, %91, !dbg !3158
  store i64 %93, i64* %3, align 8, !dbg !3158
  %94 = load i8, i8* %7, align 1, !dbg !3159
  %95 = trunc i8 %94 to i1, !dbg !3159
  br i1 %95, label %96, label %107, !dbg !3160

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !3161
  %98 = icmp ult i64 %97, 4294967296, !dbg !3162
  br i1 %98, label %99, label %107, !dbg !3163

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !3164
  %101 = trunc i64 %100 to i32, !dbg !3165
  %102 = load i32, i32* %4, align 4, !dbg !3166
  %103 = load i32, i32* %5, align 4, !dbg !3167
  %104 = udiv i32 %102, %103, !dbg !3168
  %105 = udiv i32 %101, %104, !dbg !3169
  %106 = zext i32 %105 to i64, !dbg !3170
  store i64 %106, i64* %2, align 8, !dbg !3171
  br label %160, !dbg !3171

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !3172
  %109 = load i32, i32* %4, align 4, !dbg !3173
  %110 = load i32, i32* %5, align 4, !dbg !3174
  %111 = udiv i32 %109, %110, !dbg !3175
  %112 = zext i32 %111 to i64, !dbg !3176
  %113 = udiv i64 %108, %112, !dbg !3177
  store i64 %113, i64* %2, align 8, !dbg !3178
  br label %160, !dbg !3178

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !3179
  %116 = trunc i8 %115 to i1, !dbg !3179
  br i1 %116, label %117, label %135, !dbg !3180

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !3181
  %119 = trunc i8 %118 to i1, !dbg !3181
  br i1 %119, label %120, label %128, !dbg !3182

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !3183
  %122 = trunc i64 %121 to i32, !dbg !3184
  %123 = load i32, i32* %5, align 4, !dbg !3185
  %124 = load i32, i32* %4, align 4, !dbg !3186
  %125 = udiv i32 %123, %124, !dbg !3187
  %126 = mul i32 %122, %125, !dbg !3188
  %127 = zext i32 %126 to i64, !dbg !3189
  store i64 %127, i64* %2, align 8, !dbg !3190
  br label %160, !dbg !3190

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !3191
  %130 = load i32, i32* %5, align 4, !dbg !3192
  %131 = load i32, i32* %4, align 4, !dbg !3193
  %132 = udiv i32 %130, %131, !dbg !3194
  %133 = zext i32 %132 to i64, !dbg !3195
  %134 = mul i64 %129, %133, !dbg !3196
  store i64 %134, i64* %2, align 8, !dbg !3197
  br label %160, !dbg !3197

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !3198
  %137 = trunc i8 %136 to i1, !dbg !3198
  br i1 %137, label %138, label %150, !dbg !3199

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !3200
  %140 = load i32, i32* %5, align 4, !dbg !3201
  %141 = zext i32 %140 to i64, !dbg !3201
  %142 = mul i64 %139, %141, !dbg !3202
  %143 = load i64, i64* %12, align 8, !dbg !3203
  %144 = add i64 %142, %143, !dbg !3204
  %145 = load i32, i32* %4, align 4, !dbg !3205
  %146 = zext i32 %145 to i64, !dbg !3205
  %147 = udiv i64 %144, %146, !dbg !3206
  %148 = trunc i64 %147 to i32, !dbg !3207
  %149 = zext i32 %148 to i64, !dbg !3207
  store i64 %149, i64* %2, align 8, !dbg !3208
  br label %160, !dbg !3208

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !3209
  %152 = load i32, i32* %5, align 4, !dbg !3210
  %153 = zext i32 %152 to i64, !dbg !3210
  %154 = mul i64 %151, %153, !dbg !3211
  %155 = load i64, i64* %12, align 8, !dbg !3212
  %156 = add i64 %154, %155, !dbg !3213
  %157 = load i32, i32* %4, align 4, !dbg !3214
  %158 = zext i32 %157 to i64, !dbg !3214
  %159 = udiv i64 %156, %158, !dbg !3215
  store i64 %159, i64* %2, align 8, !dbg !3216
  br label %160, !dbg !3216

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !3217
  ret i64 %161, !dbg !3218
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.98() #0 !dbg !3219 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !3220, !srcloc !3223
  ret void, !dbg !3224
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.99() #0 !dbg !3225 {
  %1 = call i32 @arch_k_cycle_get_32.100() #3, !dbg !3226
  ret i32 %1, !dbg !3227
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.100() #0 !dbg !3228 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !3229
  ret i32 %1, !dbg !3230
}

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.101() #0 !dbg !3231 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.93, align 8, !dbg !3232
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !3233
  store i64 1, i64* %2, align 8, !dbg !3233
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !3233
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !3233
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !3233
  %6 = call i32 @k_sleep.102([1 x i64] %5) #3, !dbg !3233
  %7 = call i64 @k_uptime_delta.94(i64* @timestamp_check.93) #3, !dbg !3234
  store i64 %7, i64* @timestamp_check.93, align 8, !dbg !3235
  ret void, !dbg !3236
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.102([1 x i64]) #0 !dbg !3237 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !3244, metadata !DIExpression()), !dbg !3245
  br label %5, !dbg !3246

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !3247, !srcloc !3249
  br label %6, !dbg !3247

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !3250
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !3250
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !3250
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !3250
  ret i32 %10, !dbg !3251
}

; Function Attrs: noinline nounwind optnone
define dso_local void @mempool_test() #0 !dbg !3252 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.k_mem_block.152, align 4
  %5 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3254, metadata !DIExpression()), !dbg !3255
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3256, metadata !DIExpression()), !dbg !3257
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3258, metadata !DIExpression()), !dbg !3259
  store i32 0, i32* %3, align 4, !dbg !3259
  call void @llvm.dbg.declare(metadata %struct.k_mem_block.152* %4, metadata !3260, metadata !DIExpression()), !dbg !3304
  %6 = load i32*, i32** @output_file, align 4, !dbg !3305
  %7 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.105, i32 0, i32 0), i32* %6) #3, !dbg !3305
  %8 = call i32 @BENCH_START.106() #3, !dbg !3306
  store i32 %8, i32* %1, align 4, !dbg !3307
  store i32 0, i32* %2, align 4, !dbg !3308
  br label %9, !dbg !3310

9:                                                ; preds = %20, %0
  %10 = load i32, i32* %2, align 4, !dbg !3311
  %11 = icmp slt i32 %10, 1000, !dbg !3313
  br i1 %11, label %12, label %23, !dbg !3314

12:                                               ; preds = %9
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !3315
  store i64 -1, i64* %13, align 8, !dbg !3315
  %14 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %5, i32 0, i32 0, !dbg !3317
  %15 = bitcast i64* %14 to [1 x i64]*, !dbg !3317
  %16 = load [1 x i64], [1 x i64]* %15, align 8, !dbg !3317
  %17 = call i32 @k_mem_pool_alloc(%struct.k_mem_pool.86* @DEMOPOOL, %struct.k_mem_block.152* %4, i32 16, [1 x i64] %16) #3, !dbg !3317
  %18 = load i32, i32* %3, align 4, !dbg !3318
  %19 = or i32 %18, %17, !dbg !3318
  store i32 %19, i32* %3, align 4, !dbg !3318
  call void @k_mem_pool_free(%struct.k_mem_block.152* %4) #3, !dbg !3319
  br label %20, !dbg !3320

20:                                               ; preds = %12
  %21 = load i32, i32* %2, align 4, !dbg !3321
  %22 = add i32 %21, 1, !dbg !3321
  store i32 %22, i32* %2, align 4, !dbg !3321
  br label %9, !dbg !3322, !llvm.loop !3323

23:                                               ; preds = %9
  %24 = load i32, i32* %1, align 4, !dbg !3325
  %25 = call i32 @TIME_STAMP_DELTA_GET.107(i32 %24) #3, !dbg !3326
  store i32 %25, i32* %1, align 4, !dbg !3327
  call void @check_result.108() #3, !dbg !3328
  %26 = load i32, i32* %3, align 4, !dbg !3329
  %27 = icmp ne i32 %26, 0, !dbg !3331
  br i1 %27, label %28, label %31, !dbg !3332

28:                                               ; preds = %23
  br label %29, !dbg !3333

29:                                               ; preds = %28
  call void asm sideeffect "eors.n r0, r0\0A\09msr BASEPRI, r0\0A\09mov r0, $0\0A\09svc $1\0A\09", "i,i,~{memory}"(i32 4, i32 2) #4, !dbg !3335, !srcloc !3337
  br label %30, !dbg !3335

30:                                               ; preds = %29
  br label %31, !dbg !3338

31:                                               ; preds = %30, %23
  %32 = load i32, i32* %1, align 4, !dbg !3339
  %33 = zext i32 %32 to i64, !dbg !3339
  %34 = call i64 @k_cyc_to_ns_floor64.109(i64 %33) #3, !dbg !3339
  %35 = udiv i64 %34, 2000, !dbg !3339
  %36 = trunc i64 %35 to i32, !dbg !3339
  %37 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.110, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.111, i32 0, i32 0), i32 %36) #3, !dbg !3339
  %38 = load i32*, i32** @output_file, align 4, !dbg !3339
  %39 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %38) #3, !dbg !3339
  ret void, !dbg !3341
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.106() #0 !dbg !3342 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3343, metadata !DIExpression()), !dbg !3344
  call void @bench_test_start.123() #3, !dbg !3345
  %2 = call i32 @TIME_STAMP_DELTA_GET.107(i32 0) #3, !dbg !3346
  store i32 %2, i32* %1, align 4, !dbg !3347
  %3 = load i32, i32* %1, align 4, !dbg !3348
  ret i32 %3, !dbg !3349
}

declare dso_local i32 @k_mem_pool_alloc(%struct.k_mem_pool.86*, %struct.k_mem_block.152*, i32, [1 x i64]) #2

declare dso_local void @k_mem_pool_free(%struct.k_mem_block.152*) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.107(i32) #0 !dbg !3350 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3351, metadata !DIExpression()), !dbg !3352
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3353, metadata !DIExpression()), !dbg !3354
  call void @timestamp_serialize.120() #3, !dbg !3355
  %5 = call i32 @k_cycle_get_32.121() #3, !dbg !3356
  store i32 %5, i32* %3, align 4, !dbg !3357
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3358, metadata !DIExpression()), !dbg !3359
  %6 = load i32, i32* %3, align 4, !dbg !3360
  %7 = load i32, i32* %2, align 4, !dbg !3361
  %8 = icmp uge i32 %6, %7, !dbg !3362
  br i1 %8, label %9, label %13, !dbg !3363

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !3364
  %11 = load i32, i32* %2, align 4, !dbg !3365
  %12 = sub i32 %10, %11, !dbg !3366
  br label %18, !dbg !3363

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !3367
  %15 = sub i32 -1, %14, !dbg !3368
  %16 = load i32, i32* %3, align 4, !dbg !3369
  %17 = add i32 %15, %16, !dbg !3370
  br label %18, !dbg !3363

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !3363
  store i32 %19, i32* %4, align 4, !dbg !3359
  %20 = load i32, i32* %2, align 4, !dbg !3371
  %21 = icmp ugt i32 %20, 0, !dbg !3373
  br i1 %21, label %22, label %26, !dbg !3374

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !3375
  %24 = load i32, i32* %4, align 4, !dbg !3377
  %25 = sub i32 %24, %23, !dbg !3377
  store i32 %25, i32* %4, align 4, !dbg !3377
  br label %26, !dbg !3378

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !3379
  ret i32 %27, !dbg !3380
}

; Function Attrs: noinline nounwind optnone
define internal void @check_result.108() #0 !dbg !3381 {
  %1 = call i32 @bench_test_end.113() #3, !dbg !3382
  %2 = icmp slt i32 %1, 0, !dbg !3384
  br i1 %2, label %3, label %7, !dbg !3385

3:                                                ; preds = %0
  %4 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3.114, i32 0, i32 0), i32 187) #3, !dbg !3386
  %5 = load i32*, i32** @output_file, align 4, !dbg !3386
  %6 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %5) #3, !dbg !3386
  br label %7, !dbg !3389

7:                                                ; preds = %3, %0
  ret void, !dbg !3390
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.109(i64) #0 !dbg !3391 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3392, metadata !DIExpression()), !dbg !3394
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3396, metadata !DIExpression()), !dbg !3397
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3398, metadata !DIExpression()), !dbg !3399
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !3400, metadata !DIExpression()), !dbg !3401
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3402, metadata !DIExpression()), !dbg !3403
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !3404, metadata !DIExpression()), !dbg !3405
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !3406, metadata !DIExpression()), !dbg !3407
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !3408, metadata !DIExpression()), !dbg !3409
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3410, metadata !DIExpression()), !dbg !3411
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3412, metadata !DIExpression()), !dbg !3413
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3414, metadata !DIExpression()), !dbg !3417
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3418, metadata !DIExpression()), !dbg !3419
  %15 = load i64, i64* %14, align 8, !dbg !3420
  %16 = call i32 @sys_clock_hw_cycles_per_sec.112() #3, !dbg !3421
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !3422
  %18 = trunc i8 %17 to i1, !dbg !3422
  br i1 %18, label %19, label %28, !dbg !3423

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !3424
  %21 = load i32, i32* %4, align 4, !dbg !3425
  %22 = icmp ugt i32 %20, %21, !dbg !3426
  br i1 %22, label %23, label %28, !dbg !3427

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !3428
  %25 = load i32, i32* %4, align 4, !dbg !3429
  %26 = urem i32 %24, %25, !dbg !3430
  %27 = icmp eq i32 %26, 0, !dbg !3431
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !3432
  %30 = zext i1 %29 to i8, !dbg !3409
  store i8 %30, i8* %10, align 1, !dbg !3409
  %31 = load i8, i8* %6, align 1, !dbg !3433
  %32 = trunc i8 %31 to i1, !dbg !3433
  br i1 %32, label %33, label %42, !dbg !3434

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !3435
  %35 = load i32, i32* %5, align 4, !dbg !3436
  %36 = icmp ugt i32 %34, %35, !dbg !3437
  br i1 %36, label %37, label %42, !dbg !3438

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !3439
  %39 = load i32, i32* %5, align 4, !dbg !3440
  %40 = urem i32 %38, %39, !dbg !3441
  %41 = icmp eq i32 %40, 0, !dbg !3442
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !3432
  %44 = zext i1 %43 to i8, !dbg !3411
  store i8 %44, i8* %11, align 1, !dbg !3411
  %45 = load i32, i32* %4, align 4, !dbg !3443
  %46 = load i32, i32* %5, align 4, !dbg !3445
  %47 = icmp eq i32 %45, %46, !dbg !3446
  br i1 %47, label %48, label %59, !dbg !3447

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !3448
  %50 = trunc i8 %49 to i1, !dbg !3448
  br i1 %50, label %51, label %55, !dbg !3448

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !3450
  %53 = trunc i64 %52 to i32, !dbg !3451
  %54 = zext i32 %53 to i64, !dbg !3452
  br label %57, !dbg !3448

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !3453
  br label %57, !dbg !3448

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !3448
  store i64 %58, i64* %2, align 8, !dbg !3454
  br label %161, !dbg !3454

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !3413
  %60 = load i8, i8* %10, align 1, !dbg !3455
  %61 = trunc i8 %60 to i1, !dbg !3455
  br i1 %61, label %88, label %62, !dbg !3456

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !3457
  %64 = trunc i8 %63 to i1, !dbg !3457
  br i1 %64, label %65, label %69, !dbg !3457

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !3458
  %67 = load i32, i32* %5, align 4, !dbg !3459
  %68 = udiv i32 %66, %67, !dbg !3460
  br label %71, !dbg !3457

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !3461
  br label %71, !dbg !3457

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !3457
  store i32 %72, i32* %13, align 4, !dbg !3417
  %73 = load i8, i8* %8, align 1, !dbg !3462
  %74 = trunc i8 %73 to i1, !dbg !3462
  br i1 %74, label %75, label %79, !dbg !3464

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !3465
  %77 = sub i32 %76, 1, !dbg !3467
  %78 = zext i32 %77 to i64, !dbg !3465
  store i64 %78, i64* %12, align 8, !dbg !3468
  br label %87, !dbg !3469

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !3470
  %81 = trunc i8 %80 to i1, !dbg !3470
  br i1 %81, label %82, label %86, !dbg !3472

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !3473
  %84 = udiv i32 %83, 2, !dbg !3475
  %85 = zext i32 %84 to i64, !dbg !3473
  store i64 %85, i64* %12, align 8, !dbg !3476
  br label %86, !dbg !3477

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !3478

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !3479
  %90 = trunc i8 %89 to i1, !dbg !3479
  br i1 %90, label %91, label %115, !dbg !3481

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !3482
  %93 = load i64, i64* %3, align 8, !dbg !3484
  %94 = add i64 %93, %92, !dbg !3484
  store i64 %94, i64* %3, align 8, !dbg !3484
  %95 = load i8, i8* %7, align 1, !dbg !3485
  %96 = trunc i8 %95 to i1, !dbg !3485
  br i1 %96, label %97, label %108, !dbg !3487

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !3488
  %99 = icmp ult i64 %98, 4294967296, !dbg !3489
  br i1 %99, label %100, label %108, !dbg !3490

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !3491
  %102 = trunc i64 %101 to i32, !dbg !3493
  %103 = load i32, i32* %4, align 4, !dbg !3494
  %104 = load i32, i32* %5, align 4, !dbg !3495
  %105 = udiv i32 %103, %104, !dbg !3496
  %106 = udiv i32 %102, %105, !dbg !3497
  %107 = zext i32 %106 to i64, !dbg !3498
  store i64 %107, i64* %2, align 8, !dbg !3499
  br label %161, !dbg !3499

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !3500
  %110 = load i32, i32* %4, align 4, !dbg !3502
  %111 = load i32, i32* %5, align 4, !dbg !3503
  %112 = udiv i32 %110, %111, !dbg !3504
  %113 = zext i32 %112 to i64, !dbg !3505
  %114 = udiv i64 %109, %113, !dbg !3506
  store i64 %114, i64* %2, align 8, !dbg !3507
  br label %161, !dbg !3507

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !3508
  %117 = trunc i8 %116 to i1, !dbg !3508
  br i1 %117, label %118, label %136, !dbg !3510

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !3511
  %120 = trunc i8 %119 to i1, !dbg !3511
  br i1 %120, label %121, label %129, !dbg !3514

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !3515
  %123 = trunc i64 %122 to i32, !dbg !3517
  %124 = load i32, i32* %5, align 4, !dbg !3518
  %125 = load i32, i32* %4, align 4, !dbg !3519
  %126 = udiv i32 %124, %125, !dbg !3520
  %127 = mul i32 %123, %126, !dbg !3521
  %128 = zext i32 %127 to i64, !dbg !3522
  store i64 %128, i64* %2, align 8, !dbg !3523
  br label %161, !dbg !3523

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !3524
  %131 = load i32, i32* %5, align 4, !dbg !3526
  %132 = load i32, i32* %4, align 4, !dbg !3527
  %133 = udiv i32 %131, %132, !dbg !3528
  %134 = zext i32 %133 to i64, !dbg !3529
  %135 = mul i64 %130, %134, !dbg !3530
  store i64 %135, i64* %2, align 8, !dbg !3531
  br label %161, !dbg !3531

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !3532
  %138 = trunc i8 %137 to i1, !dbg !3532
  br i1 %138, label %139, label %151, !dbg !3535

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !3536
  %141 = load i32, i32* %5, align 4, !dbg !3538
  %142 = zext i32 %141 to i64, !dbg !3538
  %143 = mul i64 %140, %142, !dbg !3539
  %144 = load i64, i64* %12, align 8, !dbg !3540
  %145 = add i64 %143, %144, !dbg !3541
  %146 = load i32, i32* %4, align 4, !dbg !3542
  %147 = zext i32 %146 to i64, !dbg !3542
  %148 = udiv i64 %145, %147, !dbg !3543
  %149 = trunc i64 %148 to i32, !dbg !3544
  %150 = zext i32 %149 to i64, !dbg !3544
  store i64 %150, i64* %2, align 8, !dbg !3545
  br label %161, !dbg !3545

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !3546
  %153 = load i32, i32* %5, align 4, !dbg !3548
  %154 = zext i32 %153 to i64, !dbg !3548
  %155 = mul i64 %152, %154, !dbg !3549
  %156 = load i64, i64* %12, align 8, !dbg !3550
  %157 = add i64 %155, %156, !dbg !3551
  %158 = load i32, i32* %4, align 4, !dbg !3552
  %159 = zext i32 %158 to i64, !dbg !3552
  %160 = udiv i64 %157, %159, !dbg !3553
  store i64 %160, i64* %2, align 8, !dbg !3554
  br label %161, !dbg !3554

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !3555
  ret i64 %162, !dbg !3556
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.112() #0 !dbg !3557 {
  ret i32 72000000, !dbg !3558
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.113() #0 !dbg !3559 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.116(i64* @timestamp_check.115) #3, !dbg !3560
  store i64 %2, i64* @timestamp_check.115, align 8, !dbg !3561
  %3 = load i64, i64* @timestamp_check.115, align 8, !dbg !3562
  %4 = icmp sge i64 %3, 1000, !dbg !3564
  br i1 %4, label %5, label %6, !dbg !3565

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !3566
  br label %7, !dbg !3566

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !3568
  br label %7, !dbg !3568

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !3569
  ret i32 %8, !dbg !3569
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.116(i64*) #0 !dbg !3570 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !3571, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.declare(metadata i64* %4, metadata !3575, metadata !DIExpression()), !dbg !3576
  %5 = call i64 @k_uptime_get.117() #3, !dbg !3577
  store i64 %5, i64* %3, align 8, !dbg !3578
  %6 = load i64, i64* %3, align 8, !dbg !3579
  %7 = load i64*, i64** %2, align 4, !dbg !3580
  %8 = load i64, i64* %7, align 8, !dbg !3581
  %9 = sub i64 %6, %8, !dbg !3582
  store i64 %9, i64* %4, align 8, !dbg !3583
  %10 = load i64, i64* %3, align 8, !dbg !3584
  %11 = load i64*, i64** %2, align 4, !dbg !3585
  store i64 %10, i64* %11, align 8, !dbg !3586
  %12 = load i64, i64* %4, align 8, !dbg !3587
  ret i64 %12, !dbg !3588
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.117() #0 !dbg !3589 {
  %1 = call i64 @k_uptime_ticks.118() #3, !dbg !3590
  %2 = call i64 @k_ticks_to_ms_floor64.119(i64 %1) #3, !dbg !3591
  ret i64 %2, !dbg !3592
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.118() #0 !dbg !3593 {
  br label %1, !dbg !3594

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !3595, !srcloc !3597
  br label %2, !dbg !3595

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !3598
  ret i64 %3, !dbg !3599
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.119(i64) #0 !dbg !3600 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3392, metadata !DIExpression()), !dbg !3601
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3396, metadata !DIExpression()), !dbg !3603
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3398, metadata !DIExpression()), !dbg !3604
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !3400, metadata !DIExpression()), !dbg !3605
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !3402, metadata !DIExpression()), !dbg !3606
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !3404, metadata !DIExpression()), !dbg !3607
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !3406, metadata !DIExpression()), !dbg !3608
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !3408, metadata !DIExpression()), !dbg !3609
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !3410, metadata !DIExpression()), !dbg !3610
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !3412, metadata !DIExpression()), !dbg !3611
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !3414, metadata !DIExpression()), !dbg !3612
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !3613, metadata !DIExpression()), !dbg !3614
  %15 = load i64, i64* %14, align 8, !dbg !3615
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !3616
  %17 = trunc i8 %16 to i1, !dbg !3616
  br i1 %17, label %18, label %27, !dbg !3617

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !3618
  %20 = load i32, i32* %4, align 4, !dbg !3619
  %21 = icmp ugt i32 %19, %20, !dbg !3620
  br i1 %21, label %22, label %27, !dbg !3621

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !3622
  %24 = load i32, i32* %4, align 4, !dbg !3623
  %25 = urem i32 %23, %24, !dbg !3624
  %26 = icmp eq i32 %25, 0, !dbg !3625
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !3626
  %29 = zext i1 %28 to i8, !dbg !3609
  store i8 %29, i8* %10, align 1, !dbg !3609
  %30 = load i8, i8* %6, align 1, !dbg !3627
  %31 = trunc i8 %30 to i1, !dbg !3627
  br i1 %31, label %32, label %41, !dbg !3628

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !3629
  %34 = load i32, i32* %5, align 4, !dbg !3630
  %35 = icmp ugt i32 %33, %34, !dbg !3631
  br i1 %35, label %36, label %41, !dbg !3632

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !3633
  %38 = load i32, i32* %5, align 4, !dbg !3634
  %39 = urem i32 %37, %38, !dbg !3635
  %40 = icmp eq i32 %39, 0, !dbg !3636
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !3626
  %43 = zext i1 %42 to i8, !dbg !3610
  store i8 %43, i8* %11, align 1, !dbg !3610
  %44 = load i32, i32* %4, align 4, !dbg !3637
  %45 = load i32, i32* %5, align 4, !dbg !3638
  %46 = icmp eq i32 %44, %45, !dbg !3639
  br i1 %46, label %47, label %58, !dbg !3640

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !3641
  %49 = trunc i8 %48 to i1, !dbg !3641
  br i1 %49, label %50, label %54, !dbg !3641

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !3642
  %52 = trunc i64 %51 to i32, !dbg !3643
  %53 = zext i32 %52 to i64, !dbg !3644
  br label %56, !dbg !3641

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !3645
  br label %56, !dbg !3641

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !3641
  store i64 %57, i64* %2, align 8, !dbg !3646
  br label %160, !dbg !3646

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !3611
  %59 = load i8, i8* %10, align 1, !dbg !3647
  %60 = trunc i8 %59 to i1, !dbg !3647
  br i1 %60, label %87, label %61, !dbg !3648

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !3649
  %63 = trunc i8 %62 to i1, !dbg !3649
  br i1 %63, label %64, label %68, !dbg !3649

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !3650
  %66 = load i32, i32* %5, align 4, !dbg !3651
  %67 = udiv i32 %65, %66, !dbg !3652
  br label %70, !dbg !3649

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !3653
  br label %70, !dbg !3649

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !3649
  store i32 %71, i32* %13, align 4, !dbg !3612
  %72 = load i8, i8* %8, align 1, !dbg !3654
  %73 = trunc i8 %72 to i1, !dbg !3654
  br i1 %73, label %74, label %78, !dbg !3655

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !3656
  %76 = sub i32 %75, 1, !dbg !3657
  %77 = zext i32 %76 to i64, !dbg !3656
  store i64 %77, i64* %12, align 8, !dbg !3658
  br label %86, !dbg !3659

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !3660
  %80 = trunc i8 %79 to i1, !dbg !3660
  br i1 %80, label %81, label %85, !dbg !3661

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !3662
  %83 = udiv i32 %82, 2, !dbg !3663
  %84 = zext i32 %83 to i64, !dbg !3662
  store i64 %84, i64* %12, align 8, !dbg !3664
  br label %85, !dbg !3665

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !3666

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !3667
  %89 = trunc i8 %88 to i1, !dbg !3667
  br i1 %89, label %90, label %114, !dbg !3668

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !3669
  %92 = load i64, i64* %3, align 8, !dbg !3670
  %93 = add i64 %92, %91, !dbg !3670
  store i64 %93, i64* %3, align 8, !dbg !3670
  %94 = load i8, i8* %7, align 1, !dbg !3671
  %95 = trunc i8 %94 to i1, !dbg !3671
  br i1 %95, label %96, label %107, !dbg !3672

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !3673
  %98 = icmp ult i64 %97, 4294967296, !dbg !3674
  br i1 %98, label %99, label %107, !dbg !3675

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !3676
  %101 = trunc i64 %100 to i32, !dbg !3677
  %102 = load i32, i32* %4, align 4, !dbg !3678
  %103 = load i32, i32* %5, align 4, !dbg !3679
  %104 = udiv i32 %102, %103, !dbg !3680
  %105 = udiv i32 %101, %104, !dbg !3681
  %106 = zext i32 %105 to i64, !dbg !3682
  store i64 %106, i64* %2, align 8, !dbg !3683
  br label %160, !dbg !3683

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !3684
  %109 = load i32, i32* %4, align 4, !dbg !3685
  %110 = load i32, i32* %5, align 4, !dbg !3686
  %111 = udiv i32 %109, %110, !dbg !3687
  %112 = zext i32 %111 to i64, !dbg !3688
  %113 = udiv i64 %108, %112, !dbg !3689
  store i64 %113, i64* %2, align 8, !dbg !3690
  br label %160, !dbg !3690

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !3691
  %116 = trunc i8 %115 to i1, !dbg !3691
  br i1 %116, label %117, label %135, !dbg !3692

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !3693
  %119 = trunc i8 %118 to i1, !dbg !3693
  br i1 %119, label %120, label %128, !dbg !3694

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !3695
  %122 = trunc i64 %121 to i32, !dbg !3696
  %123 = load i32, i32* %5, align 4, !dbg !3697
  %124 = load i32, i32* %4, align 4, !dbg !3698
  %125 = udiv i32 %123, %124, !dbg !3699
  %126 = mul i32 %122, %125, !dbg !3700
  %127 = zext i32 %126 to i64, !dbg !3701
  store i64 %127, i64* %2, align 8, !dbg !3702
  br label %160, !dbg !3702

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !3703
  %130 = load i32, i32* %5, align 4, !dbg !3704
  %131 = load i32, i32* %4, align 4, !dbg !3705
  %132 = udiv i32 %130, %131, !dbg !3706
  %133 = zext i32 %132 to i64, !dbg !3707
  %134 = mul i64 %129, %133, !dbg !3708
  store i64 %134, i64* %2, align 8, !dbg !3709
  br label %160, !dbg !3709

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !3710
  %137 = trunc i8 %136 to i1, !dbg !3710
  br i1 %137, label %138, label %150, !dbg !3711

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !3712
  %140 = load i32, i32* %5, align 4, !dbg !3713
  %141 = zext i32 %140 to i64, !dbg !3713
  %142 = mul i64 %139, %141, !dbg !3714
  %143 = load i64, i64* %12, align 8, !dbg !3715
  %144 = add i64 %142, %143, !dbg !3716
  %145 = load i32, i32* %4, align 4, !dbg !3717
  %146 = zext i32 %145 to i64, !dbg !3717
  %147 = udiv i64 %144, %146, !dbg !3718
  %148 = trunc i64 %147 to i32, !dbg !3719
  %149 = zext i32 %148 to i64, !dbg !3719
  store i64 %149, i64* %2, align 8, !dbg !3720
  br label %160, !dbg !3720

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !3721
  %152 = load i32, i32* %5, align 4, !dbg !3722
  %153 = zext i32 %152 to i64, !dbg !3722
  %154 = mul i64 %151, %153, !dbg !3723
  %155 = load i64, i64* %12, align 8, !dbg !3724
  %156 = add i64 %154, %155, !dbg !3725
  %157 = load i32, i32* %4, align 4, !dbg !3726
  %158 = zext i32 %157 to i64, !dbg !3726
  %159 = udiv i64 %156, %158, !dbg !3727
  store i64 %159, i64* %2, align 8, !dbg !3728
  br label %160, !dbg !3728

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !3729
  ret i64 %161, !dbg !3730
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.120() #0 !dbg !3731 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !3732, !srcloc !3735
  ret void, !dbg !3736
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.121() #0 !dbg !3737 {
  %1 = call i32 @arch_k_cycle_get_32.122() #3, !dbg !3738
  ret i32 %1, !dbg !3739
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.122() #0 !dbg !3740 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !3741
  ret i32 %1, !dbg !3742
}

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.123() #0 !dbg !3743 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.115, align 8, !dbg !3744
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !3745
  store i64 1, i64* %2, align 8, !dbg !3745
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !3745
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !3745
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !3745
  %6 = call i32 @k_sleep.124([1 x i64] %5) #3, !dbg !3745
  %7 = call i64 @k_uptime_delta.116(i64* @timestamp_check.115) #3, !dbg !3746
  store i64 %7, i64* @timestamp_check.115, align 8, !dbg !3747
  ret void, !dbg !3748
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.124([1 x i64]) #0 !dbg !3749 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !3756, metadata !DIExpression()), !dbg !3757
  br label %5, !dbg !3758

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !3759, !srcloc !3761
  br label %6, !dbg !3759

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !3762
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !3762
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !3762
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !3762
  ret i32 %10, !dbg !3763
}

; Function Attrs: noinline nounwind optnone
define dso_local void @mutex_test() #0 !dbg !3764 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3768, metadata !DIExpression()), !dbg !3769
  %4 = load i32*, i32** @output_file, align 4, !dbg !3770
  %5 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.127, i32 0, i32 0), i32* %4) #3, !dbg !3770
  %6 = call i32 @BENCH_START.128() #3, !dbg !3771
  store i32 %6, i32* %1, align 4, !dbg !3772
  store i32 0, i32* %2, align 4, !dbg !3773
  br label %7, !dbg !3775

7:                                                ; preds = %17, %0
  %8 = load i32, i32* %2, align 4, !dbg !3776
  %9 = icmp slt i32 %8, 1000, !dbg !3778
  br i1 %9, label %10, label %20, !dbg !3779

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !3780
  store i64 -1, i64* %11, align 8, !dbg !3780
  %12 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !3782
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !3782
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !3782
  %15 = call i32 @k_mutex_lock(%struct.k_mutex* @DEMO_MUTEX, [1 x i64] %14) #3, !dbg !3782
  %16 = call i32 @k_mutex_unlock(%struct.k_mutex* @DEMO_MUTEX) #3, !dbg !3783
  br label %17, !dbg !3784

17:                                               ; preds = %10
  %18 = load i32, i32* %2, align 4, !dbg !3785
  %19 = add i32 %18, 1, !dbg !3785
  store i32 %19, i32* %2, align 4, !dbg !3785
  br label %7, !dbg !3786, !llvm.loop !3787

20:                                               ; preds = %7
  %21 = load i32, i32* %1, align 4, !dbg !3789
  %22 = call i32 @TIME_STAMP_DELTA_GET.129(i32 %21) #3, !dbg !3790
  store i32 %22, i32* %1, align 4, !dbg !3791
  call void @check_result.130() #3, !dbg !3792
  %23 = load i32, i32* %1, align 4, !dbg !3793
  %24 = zext i32 %23 to i64, !dbg !3793
  %25 = call i64 @k_cyc_to_ns_floor64.131(i64 %24) #3, !dbg !3793
  %26 = udiv i64 %25, 2000, !dbg !3793
  %27 = trunc i64 %26 to i32, !dbg !3793
  %28 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.132, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2.133, i32 0, i32 0), i32 %27) #3, !dbg !3793
  %29 = load i32*, i32** @output_file, align 4, !dbg !3793
  %30 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %29) #3, !dbg !3793
  ret void, !dbg !3795
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.128() #0 !dbg !3796 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !3797, metadata !DIExpression()), !dbg !3798
  call void @bench_test_start.145() #3, !dbg !3799
  %2 = call i32 @TIME_STAMP_DELTA_GET.129(i32 0) #3, !dbg !3800
  store i32 %2, i32* %1, align 4, !dbg !3801
  %3 = load i32, i32* %1, align 4, !dbg !3802
  ret i32 %3, !dbg !3803
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_mutex_lock(%struct.k_mutex*, [1 x i64]) #0 !dbg !3804 {
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_mutex*, align 4
  %5 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_mutex* %0, %struct.k_mutex** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_mutex** %4, metadata !3926, metadata !DIExpression()), !dbg !3927
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %3, metadata !3928, metadata !DIExpression()), !dbg !3929
  br label %7, !dbg !3930

7:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #4, !dbg !3931, !srcloc !3933
  br label %8, !dbg !3931

8:                                                ; preds = %7
  %9 = load %struct.k_mutex*, %struct.k_mutex** %4, align 4, !dbg !3934
  %10 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !3935
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !3935
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !3935
  %13 = call i32 @z_impl_k_mutex_lock(%struct.k_mutex* %9, [1 x i64] %12) #3, !dbg !3935
  ret i32 %13, !dbg !3936
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_mutex_unlock(%struct.k_mutex*) #0 !dbg !3937 {
  %2 = alloca %struct.k_mutex*, align 4
  store %struct.k_mutex* %0, %struct.k_mutex** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_mutex** %2, metadata !3940, metadata !DIExpression()), !dbg !3941
  br label %3, !dbg !3942

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !3943, !srcloc !3945
  br label %4, !dbg !3943

4:                                                ; preds = %3
  %5 = load %struct.k_mutex*, %struct.k_mutex** %2, align 4, !dbg !3946
  %6 = call i32 @z_impl_k_mutex_unlock(%struct.k_mutex* %5) #3, !dbg !3947
  ret i32 %6, !dbg !3948
}

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.129(i32) #0 !dbg !3949 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !3950, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.declare(metadata i32* %3, metadata !3952, metadata !DIExpression()), !dbg !3953
  call void @timestamp_serialize.142() #3, !dbg !3954
  %5 = call i32 @k_cycle_get_32.143() #3, !dbg !3955
  store i32 %5, i32* %3, align 4, !dbg !3956
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3957, metadata !DIExpression()), !dbg !3958
  %6 = load i32, i32* %3, align 4, !dbg !3959
  %7 = load i32, i32* %2, align 4, !dbg !3960
  %8 = icmp uge i32 %6, %7, !dbg !3961
  br i1 %8, label %9, label %13, !dbg !3962

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !3963
  %11 = load i32, i32* %2, align 4, !dbg !3964
  %12 = sub i32 %10, %11, !dbg !3965
  br label %18, !dbg !3962

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !3966
  %15 = sub i32 -1, %14, !dbg !3967
  %16 = load i32, i32* %3, align 4, !dbg !3968
  %17 = add i32 %15, %16, !dbg !3969
  br label %18, !dbg !3962

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !3962
  store i32 %19, i32* %4, align 4, !dbg !3958
  %20 = load i32, i32* %2, align 4, !dbg !3970
  %21 = icmp ugt i32 %20, 0, !dbg !3972
  br i1 %21, label %22, label %26, !dbg !3973

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !3974
  %24 = load i32, i32* %4, align 4, !dbg !3976
  %25 = sub i32 %24, %23, !dbg !3976
  store i32 %25, i32* %4, align 4, !dbg !3976
  br label %26, !dbg !3977

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !3978
  ret i32 %27, !dbg !3979
}

; Function Attrs: noinline nounwind optnone
define internal void @check_result.130() #0 !dbg !3980 {
  %1 = call i32 @bench_test_end.135() #3, !dbg !3981
  %2 = icmp slt i32 %1, 0, !dbg !3983
  br i1 %2, label %3, label %7, !dbg !3984

3:                                                ; preds = %0
  %4 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.3.136, i32 0, i32 0), i32 187) #3, !dbg !3985
  %5 = load i32*, i32** @output_file, align 4, !dbg !3985
  %6 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %5) #3, !dbg !3985
  br label %7, !dbg !3988

7:                                                ; preds = %3, %0
  ret void, !dbg !3989
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.131(i64) #0 !dbg !3990 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3991, metadata !DIExpression()), !dbg !3993
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3995, metadata !DIExpression()), !dbg !3996
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3997, metadata !DIExpression()), !dbg !3998
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !3999, metadata !DIExpression()), !dbg !4000
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !4001, metadata !DIExpression()), !dbg !4002
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4003, metadata !DIExpression()), !dbg !4004
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4005, metadata !DIExpression()), !dbg !4006
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !4007, metadata !DIExpression()), !dbg !4008
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4009, metadata !DIExpression()), !dbg !4010
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4011, metadata !DIExpression()), !dbg !4012
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4013, metadata !DIExpression()), !dbg !4016
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4017, metadata !DIExpression()), !dbg !4018
  %15 = load i64, i64* %14, align 8, !dbg !4019
  %16 = call i32 @sys_clock_hw_cycles_per_sec.134() #3, !dbg !4020
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !4021
  %18 = trunc i8 %17 to i1, !dbg !4021
  br i1 %18, label %19, label %28, !dbg !4022

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !4023
  %21 = load i32, i32* %4, align 4, !dbg !4024
  %22 = icmp ugt i32 %20, %21, !dbg !4025
  br i1 %22, label %23, label %28, !dbg !4026

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !4027
  %25 = load i32, i32* %4, align 4, !dbg !4028
  %26 = urem i32 %24, %25, !dbg !4029
  %27 = icmp eq i32 %26, 0, !dbg !4030
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !4031
  %30 = zext i1 %29 to i8, !dbg !4008
  store i8 %30, i8* %10, align 1, !dbg !4008
  %31 = load i8, i8* %6, align 1, !dbg !4032
  %32 = trunc i8 %31 to i1, !dbg !4032
  br i1 %32, label %33, label %42, !dbg !4033

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !4034
  %35 = load i32, i32* %5, align 4, !dbg !4035
  %36 = icmp ugt i32 %34, %35, !dbg !4036
  br i1 %36, label %37, label %42, !dbg !4037

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !4038
  %39 = load i32, i32* %5, align 4, !dbg !4039
  %40 = urem i32 %38, %39, !dbg !4040
  %41 = icmp eq i32 %40, 0, !dbg !4041
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !4031
  %44 = zext i1 %43 to i8, !dbg !4010
  store i8 %44, i8* %11, align 1, !dbg !4010
  %45 = load i32, i32* %4, align 4, !dbg !4042
  %46 = load i32, i32* %5, align 4, !dbg !4044
  %47 = icmp eq i32 %45, %46, !dbg !4045
  br i1 %47, label %48, label %59, !dbg !4046

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !4047
  %50 = trunc i8 %49 to i1, !dbg !4047
  br i1 %50, label %51, label %55, !dbg !4047

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !4049
  %53 = trunc i64 %52 to i32, !dbg !4050
  %54 = zext i32 %53 to i64, !dbg !4051
  br label %57, !dbg !4047

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !4052
  br label %57, !dbg !4047

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !4047
  store i64 %58, i64* %2, align 8, !dbg !4053
  br label %161, !dbg !4053

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !4012
  %60 = load i8, i8* %10, align 1, !dbg !4054
  %61 = trunc i8 %60 to i1, !dbg !4054
  br i1 %61, label %88, label %62, !dbg !4055

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !4056
  %64 = trunc i8 %63 to i1, !dbg !4056
  br i1 %64, label %65, label %69, !dbg !4056

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !4057
  %67 = load i32, i32* %5, align 4, !dbg !4058
  %68 = udiv i32 %66, %67, !dbg !4059
  br label %71, !dbg !4056

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !4060
  br label %71, !dbg !4056

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !4056
  store i32 %72, i32* %13, align 4, !dbg !4016
  %73 = load i8, i8* %8, align 1, !dbg !4061
  %74 = trunc i8 %73 to i1, !dbg !4061
  br i1 %74, label %75, label %79, !dbg !4063

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !4064
  %77 = sub i32 %76, 1, !dbg !4066
  %78 = zext i32 %77 to i64, !dbg !4064
  store i64 %78, i64* %12, align 8, !dbg !4067
  br label %87, !dbg !4068

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !4069
  %81 = trunc i8 %80 to i1, !dbg !4069
  br i1 %81, label %82, label %86, !dbg !4071

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !4072
  %84 = udiv i32 %83, 2, !dbg !4074
  %85 = zext i32 %84 to i64, !dbg !4072
  store i64 %85, i64* %12, align 8, !dbg !4075
  br label %86, !dbg !4076

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !4077

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !4078
  %90 = trunc i8 %89 to i1, !dbg !4078
  br i1 %90, label %91, label %115, !dbg !4080

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !4081
  %93 = load i64, i64* %3, align 8, !dbg !4083
  %94 = add i64 %93, %92, !dbg !4083
  store i64 %94, i64* %3, align 8, !dbg !4083
  %95 = load i8, i8* %7, align 1, !dbg !4084
  %96 = trunc i8 %95 to i1, !dbg !4084
  br i1 %96, label %97, label %108, !dbg !4086

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !4087
  %99 = icmp ult i64 %98, 4294967296, !dbg !4088
  br i1 %99, label %100, label %108, !dbg !4089

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !4090
  %102 = trunc i64 %101 to i32, !dbg !4092
  %103 = load i32, i32* %4, align 4, !dbg !4093
  %104 = load i32, i32* %5, align 4, !dbg !4094
  %105 = udiv i32 %103, %104, !dbg !4095
  %106 = udiv i32 %102, %105, !dbg !4096
  %107 = zext i32 %106 to i64, !dbg !4097
  store i64 %107, i64* %2, align 8, !dbg !4098
  br label %161, !dbg !4098

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !4099
  %110 = load i32, i32* %4, align 4, !dbg !4101
  %111 = load i32, i32* %5, align 4, !dbg !4102
  %112 = udiv i32 %110, %111, !dbg !4103
  %113 = zext i32 %112 to i64, !dbg !4104
  %114 = udiv i64 %109, %113, !dbg !4105
  store i64 %114, i64* %2, align 8, !dbg !4106
  br label %161, !dbg !4106

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !4107
  %117 = trunc i8 %116 to i1, !dbg !4107
  br i1 %117, label %118, label %136, !dbg !4109

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !4110
  %120 = trunc i8 %119 to i1, !dbg !4110
  br i1 %120, label %121, label %129, !dbg !4113

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !4114
  %123 = trunc i64 %122 to i32, !dbg !4116
  %124 = load i32, i32* %5, align 4, !dbg !4117
  %125 = load i32, i32* %4, align 4, !dbg !4118
  %126 = udiv i32 %124, %125, !dbg !4119
  %127 = mul i32 %123, %126, !dbg !4120
  %128 = zext i32 %127 to i64, !dbg !4121
  store i64 %128, i64* %2, align 8, !dbg !4122
  br label %161, !dbg !4122

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !4123
  %131 = load i32, i32* %5, align 4, !dbg !4125
  %132 = load i32, i32* %4, align 4, !dbg !4126
  %133 = udiv i32 %131, %132, !dbg !4127
  %134 = zext i32 %133 to i64, !dbg !4128
  %135 = mul i64 %130, %134, !dbg !4129
  store i64 %135, i64* %2, align 8, !dbg !4130
  br label %161, !dbg !4130

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !4131
  %138 = trunc i8 %137 to i1, !dbg !4131
  br i1 %138, label %139, label %151, !dbg !4134

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !4135
  %141 = load i32, i32* %5, align 4, !dbg !4137
  %142 = zext i32 %141 to i64, !dbg !4137
  %143 = mul i64 %140, %142, !dbg !4138
  %144 = load i64, i64* %12, align 8, !dbg !4139
  %145 = add i64 %143, %144, !dbg !4140
  %146 = load i32, i32* %4, align 4, !dbg !4141
  %147 = zext i32 %146 to i64, !dbg !4141
  %148 = udiv i64 %145, %147, !dbg !4142
  %149 = trunc i64 %148 to i32, !dbg !4143
  %150 = zext i32 %149 to i64, !dbg !4143
  store i64 %150, i64* %2, align 8, !dbg !4144
  br label %161, !dbg !4144

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !4145
  %153 = load i32, i32* %5, align 4, !dbg !4147
  %154 = zext i32 %153 to i64, !dbg !4147
  %155 = mul i64 %152, %154, !dbg !4148
  %156 = load i64, i64* %12, align 8, !dbg !4149
  %157 = add i64 %155, %156, !dbg !4150
  %158 = load i32, i32* %4, align 4, !dbg !4151
  %159 = zext i32 %158 to i64, !dbg !4151
  %160 = udiv i64 %157, %159, !dbg !4152
  store i64 %160, i64* %2, align 8, !dbg !4153
  br label %161, !dbg !4153

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !4154
  ret i64 %162, !dbg !4155
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.134() #0 !dbg !4156 {
  ret i32 72000000, !dbg !4157
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.135() #0 !dbg !4158 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.138(i64* @timestamp_check.137) #3, !dbg !4159
  store i64 %2, i64* @timestamp_check.137, align 8, !dbg !4160
  %3 = load i64, i64* @timestamp_check.137, align 8, !dbg !4161
  %4 = icmp sge i64 %3, 1000, !dbg !4163
  br i1 %4, label %5, label %6, !dbg !4164

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !4165
  br label %7, !dbg !4165

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !4167
  br label %7, !dbg !4167

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !4168
  ret i32 %8, !dbg !4168
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.138(i64*) #0 !dbg !4169 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !4170, metadata !DIExpression()), !dbg !4171
  call void @llvm.dbg.declare(metadata i64* %3, metadata !4172, metadata !DIExpression()), !dbg !4173
  call void @llvm.dbg.declare(metadata i64* %4, metadata !4174, metadata !DIExpression()), !dbg !4175
  %5 = call i64 @k_uptime_get.139() #3, !dbg !4176
  store i64 %5, i64* %3, align 8, !dbg !4177
  %6 = load i64, i64* %3, align 8, !dbg !4178
  %7 = load i64*, i64** %2, align 4, !dbg !4179
  %8 = load i64, i64* %7, align 8, !dbg !4180
  %9 = sub i64 %6, %8, !dbg !4181
  store i64 %9, i64* %4, align 8, !dbg !4182
  %10 = load i64, i64* %3, align 8, !dbg !4183
  %11 = load i64*, i64** %2, align 4, !dbg !4184
  store i64 %10, i64* %11, align 8, !dbg !4185
  %12 = load i64, i64* %4, align 8, !dbg !4186
  ret i64 %12, !dbg !4187
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.139() #0 !dbg !4188 {
  %1 = call i64 @k_uptime_ticks.140() #3, !dbg !4189
  %2 = call i64 @k_ticks_to_ms_floor64.141(i64 %1) #3, !dbg !4190
  ret i64 %2, !dbg !4191
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.140() #0 !dbg !4192 {
  br label %1, !dbg !4193

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4194, !srcloc !4196
  br label %2, !dbg !4194

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !4197
  ret i64 %3, !dbg !4198
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.141(i64) #0 !dbg !4199 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !3991, metadata !DIExpression()), !dbg !4200
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !3995, metadata !DIExpression()), !dbg !4202
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !3997, metadata !DIExpression()), !dbg !4203
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !3999, metadata !DIExpression()), !dbg !4204
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !4001, metadata !DIExpression()), !dbg !4205
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4003, metadata !DIExpression()), !dbg !4206
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4005, metadata !DIExpression()), !dbg !4207
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !4007, metadata !DIExpression()), !dbg !4208
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4009, metadata !DIExpression()), !dbg !4209
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4011, metadata !DIExpression()), !dbg !4210
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4013, metadata !DIExpression()), !dbg !4211
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4212, metadata !DIExpression()), !dbg !4213
  %15 = load i64, i64* %14, align 8, !dbg !4214
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !4215
  %17 = trunc i8 %16 to i1, !dbg !4215
  br i1 %17, label %18, label %27, !dbg !4216

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !4217
  %20 = load i32, i32* %4, align 4, !dbg !4218
  %21 = icmp ugt i32 %19, %20, !dbg !4219
  br i1 %21, label %22, label %27, !dbg !4220

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !4221
  %24 = load i32, i32* %4, align 4, !dbg !4222
  %25 = urem i32 %23, %24, !dbg !4223
  %26 = icmp eq i32 %25, 0, !dbg !4224
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !4225
  %29 = zext i1 %28 to i8, !dbg !4208
  store i8 %29, i8* %10, align 1, !dbg !4208
  %30 = load i8, i8* %6, align 1, !dbg !4226
  %31 = trunc i8 %30 to i1, !dbg !4226
  br i1 %31, label %32, label %41, !dbg !4227

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !4228
  %34 = load i32, i32* %5, align 4, !dbg !4229
  %35 = icmp ugt i32 %33, %34, !dbg !4230
  br i1 %35, label %36, label %41, !dbg !4231

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !4232
  %38 = load i32, i32* %5, align 4, !dbg !4233
  %39 = urem i32 %37, %38, !dbg !4234
  %40 = icmp eq i32 %39, 0, !dbg !4235
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !4225
  %43 = zext i1 %42 to i8, !dbg !4209
  store i8 %43, i8* %11, align 1, !dbg !4209
  %44 = load i32, i32* %4, align 4, !dbg !4236
  %45 = load i32, i32* %5, align 4, !dbg !4237
  %46 = icmp eq i32 %44, %45, !dbg !4238
  br i1 %46, label %47, label %58, !dbg !4239

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !4240
  %49 = trunc i8 %48 to i1, !dbg !4240
  br i1 %49, label %50, label %54, !dbg !4240

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !4241
  %52 = trunc i64 %51 to i32, !dbg !4242
  %53 = zext i32 %52 to i64, !dbg !4243
  br label %56, !dbg !4240

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !4244
  br label %56, !dbg !4240

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !4240
  store i64 %57, i64* %2, align 8, !dbg !4245
  br label %160, !dbg !4245

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !4210
  %59 = load i8, i8* %10, align 1, !dbg !4246
  %60 = trunc i8 %59 to i1, !dbg !4246
  br i1 %60, label %87, label %61, !dbg !4247

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !4248
  %63 = trunc i8 %62 to i1, !dbg !4248
  br i1 %63, label %64, label %68, !dbg !4248

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !4249
  %66 = load i32, i32* %5, align 4, !dbg !4250
  %67 = udiv i32 %65, %66, !dbg !4251
  br label %70, !dbg !4248

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !4252
  br label %70, !dbg !4248

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !4248
  store i32 %71, i32* %13, align 4, !dbg !4211
  %72 = load i8, i8* %8, align 1, !dbg !4253
  %73 = trunc i8 %72 to i1, !dbg !4253
  br i1 %73, label %74, label %78, !dbg !4254

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !4255
  %76 = sub i32 %75, 1, !dbg !4256
  %77 = zext i32 %76 to i64, !dbg !4255
  store i64 %77, i64* %12, align 8, !dbg !4257
  br label %86, !dbg !4258

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !4259
  %80 = trunc i8 %79 to i1, !dbg !4259
  br i1 %80, label %81, label %85, !dbg !4260

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !4261
  %83 = udiv i32 %82, 2, !dbg !4262
  %84 = zext i32 %83 to i64, !dbg !4261
  store i64 %84, i64* %12, align 8, !dbg !4263
  br label %85, !dbg !4264

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !4265

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !4266
  %89 = trunc i8 %88 to i1, !dbg !4266
  br i1 %89, label %90, label %114, !dbg !4267

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !4268
  %92 = load i64, i64* %3, align 8, !dbg !4269
  %93 = add i64 %92, %91, !dbg !4269
  store i64 %93, i64* %3, align 8, !dbg !4269
  %94 = load i8, i8* %7, align 1, !dbg !4270
  %95 = trunc i8 %94 to i1, !dbg !4270
  br i1 %95, label %96, label %107, !dbg !4271

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !4272
  %98 = icmp ult i64 %97, 4294967296, !dbg !4273
  br i1 %98, label %99, label %107, !dbg !4274

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !4275
  %101 = trunc i64 %100 to i32, !dbg !4276
  %102 = load i32, i32* %4, align 4, !dbg !4277
  %103 = load i32, i32* %5, align 4, !dbg !4278
  %104 = udiv i32 %102, %103, !dbg !4279
  %105 = udiv i32 %101, %104, !dbg !4280
  %106 = zext i32 %105 to i64, !dbg !4281
  store i64 %106, i64* %2, align 8, !dbg !4282
  br label %160, !dbg !4282

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !4283
  %109 = load i32, i32* %4, align 4, !dbg !4284
  %110 = load i32, i32* %5, align 4, !dbg !4285
  %111 = udiv i32 %109, %110, !dbg !4286
  %112 = zext i32 %111 to i64, !dbg !4287
  %113 = udiv i64 %108, %112, !dbg !4288
  store i64 %113, i64* %2, align 8, !dbg !4289
  br label %160, !dbg !4289

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !4290
  %116 = trunc i8 %115 to i1, !dbg !4290
  br i1 %116, label %117, label %135, !dbg !4291

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !4292
  %119 = trunc i8 %118 to i1, !dbg !4292
  br i1 %119, label %120, label %128, !dbg !4293

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !4294
  %122 = trunc i64 %121 to i32, !dbg !4295
  %123 = load i32, i32* %5, align 4, !dbg !4296
  %124 = load i32, i32* %4, align 4, !dbg !4297
  %125 = udiv i32 %123, %124, !dbg !4298
  %126 = mul i32 %122, %125, !dbg !4299
  %127 = zext i32 %126 to i64, !dbg !4300
  store i64 %127, i64* %2, align 8, !dbg !4301
  br label %160, !dbg !4301

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !4302
  %130 = load i32, i32* %5, align 4, !dbg !4303
  %131 = load i32, i32* %4, align 4, !dbg !4304
  %132 = udiv i32 %130, %131, !dbg !4305
  %133 = zext i32 %132 to i64, !dbg !4306
  %134 = mul i64 %129, %133, !dbg !4307
  store i64 %134, i64* %2, align 8, !dbg !4308
  br label %160, !dbg !4308

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !4309
  %137 = trunc i8 %136 to i1, !dbg !4309
  br i1 %137, label %138, label %150, !dbg !4310

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !4311
  %140 = load i32, i32* %5, align 4, !dbg !4312
  %141 = zext i32 %140 to i64, !dbg !4312
  %142 = mul i64 %139, %141, !dbg !4313
  %143 = load i64, i64* %12, align 8, !dbg !4314
  %144 = add i64 %142, %143, !dbg !4315
  %145 = load i32, i32* %4, align 4, !dbg !4316
  %146 = zext i32 %145 to i64, !dbg !4316
  %147 = udiv i64 %144, %146, !dbg !4317
  %148 = trunc i64 %147 to i32, !dbg !4318
  %149 = zext i32 %148 to i64, !dbg !4318
  store i64 %149, i64* %2, align 8, !dbg !4319
  br label %160, !dbg !4319

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !4320
  %152 = load i32, i32* %5, align 4, !dbg !4321
  %153 = zext i32 %152 to i64, !dbg !4321
  %154 = mul i64 %151, %153, !dbg !4322
  %155 = load i64, i64* %12, align 8, !dbg !4323
  %156 = add i64 %154, %155, !dbg !4324
  %157 = load i32, i32* %4, align 4, !dbg !4325
  %158 = zext i32 %157 to i64, !dbg !4325
  %159 = udiv i64 %156, %158, !dbg !4326
  store i64 %159, i64* %2, align 8, !dbg !4327
  br label %160, !dbg !4327

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !4328
  ret i64 %161, !dbg !4329
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.142() #0 !dbg !4330 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !4331, !srcloc !4334
  ret void, !dbg !4335
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.143() #0 !dbg !4336 {
  %1 = call i32 @arch_k_cycle_get_32.144() #3, !dbg !4337
  ret i32 %1, !dbg !4338
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.144() #0 !dbg !4339 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !4340
  ret i32 %1, !dbg !4341
}

declare dso_local i32 @z_impl_k_mutex_unlock(%struct.k_mutex*) #2

declare dso_local i32 @z_impl_k_mutex_lock(%struct.k_mutex*, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.145() #0 !dbg !4342 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.137, align 8, !dbg !4343
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !4344
  store i64 1, i64* %2, align 8, !dbg !4344
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !4344
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !4344
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !4344
  %6 = call i32 @k_sleep.146([1 x i64] %5) #3, !dbg !4344
  %7 = call i64 @k_uptime_delta.138(i64* @timestamp_check.137) #3, !dbg !4345
  store i64 %7, i64* @timestamp_check.137, align 8, !dbg !4346
  ret void, !dbg !4347
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.146([1 x i64]) #0 !dbg !4348 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !4351, metadata !DIExpression()), !dbg !4352
  br label %5, !dbg !4353

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4354, !srcloc !4356
  br label %6, !dbg !4354

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !4357
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !4357
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !4357
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !4357
  ret i32 %10, !dbg !4358
}

; Function Attrs: noinline nounwind optnone
define dso_local void @pipe_test() #0 !dbg !4359 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca [3 x i32], align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %struct.getinfo, align 4
  %9 = alloca %struct.k_timeout_t, align 8
  %10 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4361, metadata !DIExpression()), !dbg !4362
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4363, metadata !DIExpression()), !dbg !4364
  call void @llvm.dbg.declare(metadata [3 x i32]* %3, metadata !4365, metadata !DIExpression()), !dbg !4367
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4368, metadata !DIExpression()), !dbg !4369
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4370, metadata !DIExpression()), !dbg !4371
  call void @llvm.dbg.declare(metadata i32* %6, metadata !4372, metadata !DIExpression()), !dbg !4373
  store i32 -1, i32* %6, align 4, !dbg !4373
  call void @llvm.dbg.declare(metadata i32* %7, metadata !4374, metadata !DIExpression()), !dbg !4375
  call void @llvm.dbg.declare(metadata %struct.getinfo* %8, metadata !4376, metadata !DIExpression()), !dbg !4382
  call void @k_sem_reset.149(%struct.k_sem* @SEM0) #3, !dbg !4383
  call void @k_sem_give.150(%struct.k_sem* @STARTRCV) #3, !dbg !4384
  %11 = load i32*, i32** @output_file, align 4, !dbg !4385
  %12 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %11) #3, !dbg !4385
  %13 = load i32*, i32** @output_file, align 4, !dbg !4386
  %14 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1.152, i32 0, i32 0), i32* %13) #3, !dbg !4386
  %15 = load i32*, i32** @output_file, align 4, !dbg !4387
  %16 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %15) #3, !dbg !4387
  %17 = load i32*, i32** @output_file, align 4, !dbg !4388
  %18 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.2.153, i32 0, i32 0), i32* %17) #3, !dbg !4388
  %19 = load i32*, i32** @output_file, align 4, !dbg !4389
  %20 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %19) #3, !dbg !4389
  %21 = load i32*, i32** @output_file, align 4, !dbg !4390
  %22 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.3.154, i32 0, i32 0), i32* %21) #3, !dbg !4390
  %23 = load i32*, i32** @output_file, align 4, !dbg !4391
  %24 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %23) #3, !dbg !4391
  %25 = load i32*, i32** @output_file, align 4, !dbg !4392
  %26 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.4.155, i32 0, i32 0), i32* %25) #3, !dbg !4392
  %27 = load i32*, i32** @output_file, align 4, !dbg !4393
  %28 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %27) #3, !dbg !4393
  %29 = load i32*, i32** @output_file, align 4, !dbg !4394
  %30 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.5.156, i32 0, i32 0), i32* %29) #3, !dbg !4394
  %31 = load i32*, i32** @output_file, align 4, !dbg !4395
  %32 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %31) #3, !dbg !4395
  store i32 8, i32* %1, align 4, !dbg !4396
  br label %33, !dbg !4398

33:                                               ; preds = %106, %0
  %34 = load i32, i32* %1, align 4, !dbg !4399
  %35 = icmp ule i32 %34, 2048, !dbg !4401
  br i1 %35, label %36, label %109, !dbg !4402

36:                                               ; preds = %33
  store i32 0, i32* %5, align 4, !dbg !4403
  br label %37, !dbg !4406

37:                                               ; preds = %55, %36
  %38 = load i32, i32* %5, align 4, !dbg !4407
  %39 = icmp slt i32 %38, 3, !dbg !4409
  br i1 %39, label %40, label %58, !dbg !4410

40:                                               ; preds = %37
  store i32 256, i32* %4, align 4, !dbg !4411
  %41 = load i32, i32* %5, align 4, !dbg !4413
  %42 = getelementptr [0 x %struct.k_pipe*], [0 x %struct.k_pipe*]* bitcast ([3 x %struct.k_pipe*]* @test_pipes to [0 x %struct.k_pipe*]*), i32 0, i32 %41, !dbg !4414
  %43 = load %struct.k_pipe*, %struct.k_pipe** %42, align 4, !dbg !4414
  %44 = load i32, i32* %1, align 4, !dbg !4415
  %45 = load i32, i32* %4, align 4, !dbg !4416
  %46 = load i32, i32* %5, align 4, !dbg !4417
  %47 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 %46, !dbg !4418
  %48 = call i32 @pipeput(%struct.k_pipe* %43, i8 zeroext 2, i32 %44, i32 %45, i32* %47) #3, !dbg !4419
  %49 = bitcast %struct.getinfo* %8 to i8*, !dbg !4420
  %50 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %9, i32 0, i32 0, !dbg !4421
  store i64 -1, i64* %50, align 8, !dbg !4421
  %51 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %9, i32 0, i32 0, !dbg !4422
  %52 = bitcast i64* %51 to [1 x i64]*, !dbg !4422
  %53 = load [1 x i64], [1 x i64]* %52, align 8, !dbg !4422
  %54 = call i32 @k_msgq_get.157(%struct.k_msgq* @CH_COMM, i8* %49, [1 x i64] %53) #3, !dbg !4422
  br label %55, !dbg !4423

55:                                               ; preds = %40
  %56 = load i32, i32* %5, align 4, !dbg !4424
  %57 = add i32 %56, 1, !dbg !4424
  store i32 %57, i32* %5, align 4, !dbg !4424
  br label %37, !dbg !4425, !llvm.loop !4426

58:                                               ; preds = %37
  %59 = load i32, i32* %1, align 4, !dbg !4428
  %60 = load i32, i32* %1, align 4, !dbg !4428
  %61 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0, !dbg !4428
  %62 = load i32, i32* %61, align 4, !dbg !4428
  %63 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 1, !dbg !4428
  %64 = load i32, i32* %63, align 4, !dbg !4428
  %65 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 2, !dbg !4428
  %66 = load i32, i32* %65, align 4, !dbg !4428
  %67 = load i32, i32* %1, align 4, !dbg !4428
  %68 = mul i32 1000000, %67, !dbg !4428
  %69 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0, !dbg !4428
  %70 = load i32, i32* %69, align 4, !dbg !4428
  %71 = icmp ne i32 %70, 0, !dbg !4428
  br i1 %71, label %72, label %75, !dbg !4428

72:                                               ; preds = %58
  %73 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0, !dbg !4428
  %74 = load i32, i32* %73, align 4, !dbg !4428
  br label %76, !dbg !4428

75:                                               ; preds = %58
  br label %76, !dbg !4428

76:                                               ; preds = %75, %72
  %77 = phi i32 [ %74, %72 ], [ 1, %75 ], !dbg !4428
  %78 = udiv i32 %68, %77, !dbg !4428
  %79 = load i32, i32* %1, align 4, !dbg !4428
  %80 = mul i32 1000000, %79, !dbg !4428
  %81 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 1, !dbg !4428
  %82 = load i32, i32* %81, align 4, !dbg !4428
  %83 = icmp ne i32 %82, 0, !dbg !4428
  br i1 %83, label %84, label %87, !dbg !4428

84:                                               ; preds = %76
  %85 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 1, !dbg !4428
  %86 = load i32, i32* %85, align 4, !dbg !4428
  br label %88, !dbg !4428

87:                                               ; preds = %76
  br label %88, !dbg !4428

88:                                               ; preds = %87, %84
  %89 = phi i32 [ %86, %84 ], [ 1, %87 ], !dbg !4428
  %90 = udiv i32 %80, %89, !dbg !4428
  %91 = load i32, i32* %1, align 4, !dbg !4428
  %92 = mul i32 1000000, %91, !dbg !4428
  %93 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 2, !dbg !4428
  %94 = load i32, i32* %93, align 4, !dbg !4428
  %95 = icmp ne i32 %94, 0, !dbg !4428
  br i1 %95, label %96, label %99, !dbg !4428

96:                                               ; preds = %88
  %97 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 2, !dbg !4428
  %98 = load i32, i32* %97, align 4, !dbg !4428
  br label %100, !dbg !4428

99:                                               ; preds = %88
  br label %100, !dbg !4428

100:                                              ; preds = %99, %96
  %101 = phi i32 [ %98, %96 ], [ 1, %99 ], !dbg !4428
  %102 = udiv i32 %92, %101, !dbg !4428
  %103 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6.158, i32 0, i32 0), i32 %59, i32 %60, i32 %62, i32 %64, i32 %66, i32 %78, i32 %90, i32 %102) #3, !dbg !4428
  %104 = load i32*, i32** @output_file, align 4, !dbg !4428
  %105 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %104) #3, !dbg !4428
  br label %106, !dbg !4430

106:                                              ; preds = %100
  %107 = load i32, i32* %1, align 4, !dbg !4431
  %108 = shl i32 %107, 1, !dbg !4431
  store i32 %108, i32* %1, align 4, !dbg !4431
  br label %33, !dbg !4432, !llvm.loop !4433

109:                                              ; preds = %33
  %110 = load i32*, i32** @output_file, align 4, !dbg !4435
  %111 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %110) #3, !dbg !4435
  store i32 0, i32* %7, align 4, !dbg !4436
  br label %112, !dbg !4438

112:                                              ; preds = %239, %109
  %113 = load i32, i32* %7, align 4, !dbg !4439
  %114 = icmp slt i32 %113, 2, !dbg !4441
  br i1 %114, label %115, label %242, !dbg !4442

115:                                              ; preds = %112
  %116 = load i32, i32* %7, align 4, !dbg !4443
  %117 = icmp eq i32 %116, 0, !dbg !4446
  br i1 %117, label %118, label %123, !dbg !4447

118:                                              ; preds = %115
  %119 = load i32*, i32** @output_file, align 4, !dbg !4448
  %120 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.7.159, i32 0, i32 0), i32* %119) #3, !dbg !4448
  %121 = call %struct.k_thread.188* @k_current_get() #3, !dbg !4450
  %122 = call i32 @k_thread_priority_get(%struct.k_thread.188* %121) #3, !dbg !4451
  store i32 %122, i32* %6, align 4, !dbg !4452
  br label %123, !dbg !4453

123:                                              ; preds = %118, %115
  %124 = load i32, i32* %7, align 4, !dbg !4454
  %125 = icmp eq i32 %124, 1, !dbg !4456
  br i1 %125, label %126, label %132, !dbg !4457

126:                                              ; preds = %123
  %127 = load i32*, i32** @output_file, align 4, !dbg !4458
  %128 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.8.160, i32 0, i32 0), i32* %127) #3, !dbg !4458
  %129 = call %struct.k_thread.188* @k_current_get() #3, !dbg !4460
  %130 = load i32, i32* %6, align 4, !dbg !4461
  %131 = sub i32 %130, 2, !dbg !4462
  call void @k_thread_priority_set(%struct.k_thread.188* %129, i32 %131) #3, !dbg !4463
  br label %132, !dbg !4464

132:                                              ; preds = %126, %123
  %133 = load i32*, i32** @output_file, align 4, !dbg !4465
  %134 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %133) #3, !dbg !4465
  br label %135, !dbg !4466

135:                                              ; preds = %132
  %136 = load i32*, i32** @output_file, align 4, !dbg !4467
  %137 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.4.155, i32 0, i32 0), i32* %136) #3, !dbg !4467
  %138 = load i32*, i32** @output_file, align 4, !dbg !4467
  %139 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %138) #3, !dbg !4467
  br label %140, !dbg !4467

140:                                              ; preds = %135
  %141 = load i32*, i32** @output_file, align 4, !dbg !4469
  %142 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.5.156, i32 0, i32 0), i32* %141) #3, !dbg !4469
  %143 = load i32*, i32** @output_file, align 4, !dbg !4470
  %144 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %143) #3, !dbg !4470
  store i32 8, i32* %1, align 4, !dbg !4471
  br label %145, !dbg !4473

145:                                              ; preds = %231, %140
  %146 = load i32, i32* %1, align 4, !dbg !4474
  %147 = icmp ule i32 %146, 2048, !dbg !4476
  br i1 %147, label %148, label %234, !dbg !4477

148:                                              ; preds = %145
  %149 = load i32, i32* %1, align 4, !dbg !4478
  %150 = udiv i32 2048, %149, !dbg !4480
  store i32 %150, i32* %4, align 4, !dbg !4481
  store i32 0, i32* %5, align 4, !dbg !4482
  br label %151, !dbg !4484

151:                                              ; preds = %171, %148
  %152 = load i32, i32* %5, align 4, !dbg !4485
  %153 = icmp slt i32 %152, 3, !dbg !4487
  br i1 %153, label %154, label %174, !dbg !4488

154:                                              ; preds = %151
  %155 = load i32, i32* %5, align 4, !dbg !4489
  %156 = getelementptr [0 x %struct.k_pipe*], [0 x %struct.k_pipe*]* bitcast ([3 x %struct.k_pipe*]* @test_pipes to [0 x %struct.k_pipe*]*), i32 0, i32 %155, !dbg !4491
  %157 = load %struct.k_pipe*, %struct.k_pipe** %156, align 4, !dbg !4491
  %158 = load i32, i32* %1, align 4, !dbg !4492
  %159 = load i32, i32* %4, align 4, !dbg !4493
  %160 = load i32, i32* %5, align 4, !dbg !4494
  %161 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 %160, !dbg !4495
  %162 = call i32 @pipeput(%struct.k_pipe* %157, i8 zeroext 1, i32 %158, i32 %159, i32* %161) #3, !dbg !4496
  %163 = bitcast %struct.getinfo* %8 to i8*, !dbg !4497
  %164 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %10, i32 0, i32 0, !dbg !4498
  store i64 -1, i64* %164, align 8, !dbg !4498
  %165 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %10, i32 0, i32 0, !dbg !4499
  %166 = bitcast i64* %165 to [1 x i64]*, !dbg !4499
  %167 = load [1 x i64], [1 x i64]* %166, align 8, !dbg !4499
  %168 = call i32 @k_msgq_get.157(%struct.k_msgq* @CH_COMM, i8* %163, [1 x i64] %167) #3, !dbg !4499
  %169 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %8, i32 0, i32 2, !dbg !4500
  %170 = load i32, i32* %169, align 4, !dbg !4500
  store i32 %170, i32* %2, align 4, !dbg !4501
  br label %171, !dbg !4502

171:                                              ; preds = %154
  %172 = load i32, i32* %5, align 4, !dbg !4503
  %173 = add i32 %172, 1, !dbg !4503
  store i32 %173, i32* %5, align 4, !dbg !4503
  br label %151, !dbg !4504, !llvm.loop !4505

174:                                              ; preds = %151
  %175 = load i32, i32* %1, align 4, !dbg !4507
  %176 = load i32, i32* %2, align 4, !dbg !4507
  %177 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0, !dbg !4507
  %178 = load i32, i32* %177, align 4, !dbg !4507
  %179 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 1, !dbg !4507
  %180 = load i32, i32* %179, align 4, !dbg !4507
  %181 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 2, !dbg !4507
  %182 = load i32, i32* %181, align 4, !dbg !4507
  %183 = load i32, i32* %1, align 4, !dbg !4507
  %184 = zext i32 %183 to i64, !dbg !4507
  %185 = mul i64 %184, 1000000, !dbg !4507
  %186 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0, !dbg !4507
  %187 = load i32, i32* %186, align 4, !dbg !4507
  %188 = icmp ne i32 %187, 0, !dbg !4507
  br i1 %188, label %189, label %192, !dbg !4507

189:                                              ; preds = %174
  %190 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 0, !dbg !4507
  %191 = load i32, i32* %190, align 4, !dbg !4507
  br label %193, !dbg !4507

192:                                              ; preds = %174
  br label %193, !dbg !4507

193:                                              ; preds = %192, %189
  %194 = phi i32 [ %191, %189 ], [ 1, %192 ], !dbg !4507
  %195 = zext i32 %194 to i64, !dbg !4507
  %196 = udiv i64 %185, %195, !dbg !4507
  %197 = trunc i64 %196 to i32, !dbg !4507
  %198 = load i32, i32* %1, align 4, !dbg !4507
  %199 = zext i32 %198 to i64, !dbg !4507
  %200 = mul i64 %199, 1000000, !dbg !4507
  %201 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 1, !dbg !4507
  %202 = load i32, i32* %201, align 4, !dbg !4507
  %203 = icmp ne i32 %202, 0, !dbg !4507
  br i1 %203, label %204, label %207, !dbg !4507

204:                                              ; preds = %193
  %205 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 1, !dbg !4507
  %206 = load i32, i32* %205, align 4, !dbg !4507
  br label %208, !dbg !4507

207:                                              ; preds = %193
  br label %208, !dbg !4507

208:                                              ; preds = %207, %204
  %209 = phi i32 [ %206, %204 ], [ 1, %207 ], !dbg !4507
  %210 = zext i32 %209 to i64, !dbg !4507
  %211 = udiv i64 %200, %210, !dbg !4507
  %212 = trunc i64 %211 to i32, !dbg !4507
  %213 = load i32, i32* %1, align 4, !dbg !4507
  %214 = zext i32 %213 to i64, !dbg !4507
  %215 = mul i64 %214, 1000000, !dbg !4507
  %216 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 2, !dbg !4507
  %217 = load i32, i32* %216, align 4, !dbg !4507
  %218 = icmp ne i32 %217, 0, !dbg !4507
  br i1 %218, label %219, label %222, !dbg !4507

219:                                              ; preds = %208
  %220 = getelementptr [3 x i32], [3 x i32]* %3, i32 0, i32 2, !dbg !4507
  %221 = load i32, i32* %220, align 4, !dbg !4507
  br label %223, !dbg !4507

222:                                              ; preds = %208
  br label %223, !dbg !4507

223:                                              ; preds = %222, %219
  %224 = phi i32 [ %221, %219 ], [ 1, %222 ], !dbg !4507
  %225 = zext i32 %224 to i64, !dbg !4507
  %226 = udiv i64 %215, %225, !dbg !4507
  %227 = trunc i64 %226 to i32, !dbg !4507
  %228 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.9.161, i32 0, i32 0), i32 %175, i32 %176, i32 %178, i32 %180, i32 %182, i32 %197, i32 %212, i32 %227) #3, !dbg !4507
  %229 = load i32*, i32** @output_file, align 4, !dbg !4507
  %230 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %229) #3, !dbg !4507
  br label %231, !dbg !4509

231:                                              ; preds = %223
  %232 = load i32, i32* %1, align 4, !dbg !4510
  %233 = shl i32 %232, 1, !dbg !4510
  store i32 %233, i32* %1, align 4, !dbg !4510
  br label %145, !dbg !4511, !llvm.loop !4512

234:                                              ; preds = %145
  %235 = load i32*, i32** @output_file, align 4, !dbg !4514
  %236 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.151, i32 0, i32 0), i32* %235) #3, !dbg !4514
  %237 = call %struct.k_thread.188* @k_current_get() #3, !dbg !4515
  %238 = load i32, i32* %6, align 4, !dbg !4516
  call void @k_thread_priority_set(%struct.k_thread.188* %237, i32 %238) #3, !dbg !4517
  br label %239, !dbg !4518

239:                                              ; preds = %234
  %240 = load i32, i32* %7, align 4, !dbg !4519
  %241 = add i32 %240, 1, !dbg !4519
  store i32 %241, i32* %7, align 4, !dbg !4519
  br label %112, !dbg !4520, !llvm.loop !4521

242:                                              ; preds = %112
  ret void, !dbg !4523
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_reset.149(%struct.k_sem*) #0 !dbg !4524 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !4551, metadata !DIExpression()), !dbg !4552
  br label %3, !dbg !4553

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4554, !srcloc !4556
  br label %4, !dbg !4554

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !4557
  call void @z_impl_k_sem_reset.177(%struct.k_sem* %5) #3, !dbg !4558
  ret void, !dbg !4559
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_give.150(%struct.k_sem*) #0 !dbg !4560 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !4561, metadata !DIExpression()), !dbg !4562
  br label %3, !dbg !4563

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4564, !srcloc !4566
  br label %4, !dbg !4564

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !4567
  call void @z_impl_k_sem_give(%struct.k_sem* %5) #3, !dbg !4568
  ret void, !dbg !4569
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pipeput(%struct.k_pipe*, i8 zeroext, i32, i32, i32*) #0 !dbg !4570 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_pipe*, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.k_timeout_t, align 8
  store %struct.k_pipe* %0, %struct.k_pipe** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_pipe** %7, metadata !4591, metadata !DIExpression()), !dbg !4592
  store i8 %1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4593, metadata !DIExpression()), !dbg !4594
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !4595, metadata !DIExpression()), !dbg !4596
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4597, metadata !DIExpression()), !dbg !4598
  store i32* %4, i32** %11, align 4
  call void @llvm.dbg.declare(metadata i32** %11, metadata !4599, metadata !DIExpression()), !dbg !4600
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4601, metadata !DIExpression()), !dbg !4602
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4603, metadata !DIExpression()), !dbg !4604
  call void @llvm.dbg.declare(metadata i32* %14, metadata !4605, metadata !DIExpression()), !dbg !4606
  store i32 0, i32* %14, align 4, !dbg !4606
  call void @llvm.dbg.declare(metadata i32* %15, metadata !4607, metadata !DIExpression()), !dbg !4608
  %21 = load i32, i32* %9, align 4, !dbg !4609
  %22 = load i32, i32* %10, align 4, !dbg !4610
  %23 = mul i32 %21, %22, !dbg !4611
  store i32 %23, i32* %15, align 4, !dbg !4608
  call void @k_sem_give.150(%struct.k_sem* @SEM0) #3, !dbg !4612
  %24 = call i32 @BENCH_START.162() #3, !dbg !4613
  store i32 %24, i32* %13, align 4, !dbg !4614
  store i32 0, i32* %12, align 4, !dbg !4615
  br label %25, !dbg !4617

25:                                               ; preds = %89, %5
  %26 = load i8, i8* %8, align 1, !dbg !4618
  %27 = zext i8 %26 to i32, !dbg !4618
  %28 = icmp eq i32 %27, 1, !dbg !4620
  br i1 %28, label %33, label %29, !dbg !4621

29:                                               ; preds = %25
  %30 = load i32, i32* %12, align 4, !dbg !4622
  %31 = load i32, i32* %10, align 4, !dbg !4623
  %32 = icmp slt i32 %30, %31, !dbg !4624
  br label %33, !dbg !4621

33:                                               ; preds = %29, %25
  %34 = phi i1 [ true, %25 ], [ %32, %29 ]
  br i1 %34, label %35, label %92, !dbg !4625

35:                                               ; preds = %33
  call void @llvm.dbg.declare(metadata i32* %16, metadata !4626, metadata !DIExpression()), !dbg !4628
  store i32 0, i32* %16, align 4, !dbg !4628
  call void @llvm.dbg.declare(metadata i32* %17, metadata !4629, metadata !DIExpression()), !dbg !4630
  %36 = load i32, i32* %9, align 4, !dbg !4631
  %37 = load i32, i32* %15, align 4, !dbg !4631
  %38 = load i32, i32* %14, align 4, !dbg !4631
  %39 = sub i32 %37, %38, !dbg !4631
  %40 = icmp ult i32 %36, %39, !dbg !4631
  br i1 %40, label %41, label %43, !dbg !4631

41:                                               ; preds = %35
  %42 = load i32, i32* %9, align 4, !dbg !4631
  br label %47, !dbg !4631

43:                                               ; preds = %35
  %44 = load i32, i32* %15, align 4, !dbg !4631
  %45 = load i32, i32* %14, align 4, !dbg !4631
  %46 = sub i32 %44, %45, !dbg !4631
  br label %47, !dbg !4631

47:                                               ; preds = %43, %41
  %48 = phi i32 [ %42, %41 ], [ %46, %43 ], !dbg !4631
  store i32 %48, i32* %17, align 4, !dbg !4630
  call void @llvm.dbg.declare(metadata i32* %18, metadata !4632, metadata !DIExpression()), !dbg !4633
  call void @llvm.dbg.declare(metadata i32* %19, metadata !4634, metadata !DIExpression()), !dbg !4635
  store i32 0, i32* %19, align 4, !dbg !4635
  %49 = load i8, i8* %8, align 1, !dbg !4636
  %50 = zext i8 %49 to i32, !dbg !4636
  %51 = icmp eq i32 %50, 2, !dbg !4638
  br i1 %51, label %52, label %54, !dbg !4639

52:                                               ; preds = %47
  %53 = load i32, i32* %17, align 4, !dbg !4640
  store i32 %53, i32* %19, align 4, !dbg !4642
  br label %54, !dbg !4643

54:                                               ; preds = %52, %47
  %55 = load %struct.k_pipe*, %struct.k_pipe** %7, align 4, !dbg !4644
  %56 = load i32, i32* %17, align 4, !dbg !4645
  %57 = load i32, i32* %19, align 4, !dbg !4646
  %58 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %20, i32 0, i32 0, !dbg !4647
  store i64 -1, i64* %58, align 8, !dbg !4647
  %59 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %20, i32 0, i32 0, !dbg !4648
  %60 = bitcast i64* %59 to [1 x i64]*, !dbg !4648
  %61 = load [1 x i64], [1 x i64]* %60, align 8, !dbg !4648
  %62 = call i32 @k_pipe_put(%struct.k_pipe* %55, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_bench, i32 0, i32 0), i32 %56, i32* %16, i32 %57, [1 x i64] %61) #3, !dbg !4648
  store i32 %62, i32* %18, align 4, !dbg !4649
  %63 = load i32, i32* %18, align 4, !dbg !4650
  %64 = icmp ne i32 %63, 0, !dbg !4652
  br i1 %64, label %65, label %66, !dbg !4653

65:                                               ; preds = %54
  store i32 1, i32* %6, align 4, !dbg !4654
  br label %118, !dbg !4654

66:                                               ; preds = %54
  %67 = load i8, i8* %8, align 1, !dbg !4656
  %68 = zext i8 %67 to i32, !dbg !4656
  %69 = icmp eq i32 %68, 2, !dbg !4658
  br i1 %69, label %70, label %75, !dbg !4659

70:                                               ; preds = %66
  %71 = load i32, i32* %16, align 4, !dbg !4660
  %72 = load i32, i32* %17, align 4, !dbg !4661
  %73 = icmp ne i32 %71, %72, !dbg !4662
  br i1 %73, label %74, label %75, !dbg !4663

74:                                               ; preds = %70
  store i32 1, i32* %6, align 4, !dbg !4664
  br label %118, !dbg !4664

75:                                               ; preds = %70, %66
  %76 = load i32, i32* %16, align 4, !dbg !4666
  %77 = load i32, i32* %14, align 4, !dbg !4667
  %78 = add i32 %77, %76, !dbg !4667
  store i32 %78, i32* %14, align 4, !dbg !4667
  %79 = load i32, i32* %15, align 4, !dbg !4668
  %80 = load i32, i32* %14, align 4, !dbg !4670
  %81 = icmp eq i32 %79, %80, !dbg !4671
  br i1 %81, label %82, label %83, !dbg !4672

82:                                               ; preds = %75
  br label %92, !dbg !4673

83:                                               ; preds = %75
  %84 = load i32, i32* %15, align 4, !dbg !4675
  %85 = load i32, i32* %14, align 4, !dbg !4677
  %86 = icmp ult i32 %84, %85, !dbg !4678
  br i1 %86, label %87, label %88, !dbg !4679

87:                                               ; preds = %83
  store i32 1, i32* %6, align 4, !dbg !4680
  br label %118, !dbg !4680

88:                                               ; preds = %83
  br label %89, !dbg !4682

89:                                               ; preds = %88
  %90 = load i32, i32* %12, align 4, !dbg !4683
  %91 = add i32 %90, 1, !dbg !4683
  store i32 %91, i32* %12, align 4, !dbg !4683
  br label %25, !dbg !4684, !llvm.loop !4685

92:                                               ; preds = %82, %33
  %93 = load i32, i32* %13, align 4, !dbg !4687
  %94 = call i32 @TIME_STAMP_DELTA_GET.163(i32 %93) #3, !dbg !4688
  store i32 %94, i32* %13, align 4, !dbg !4689
  %95 = load i32, i32* %13, align 4, !dbg !4690
  %96 = zext i32 %95 to i64, !dbg !4690
  %97 = call i64 @k_cyc_to_ns_floor64.164(i64 %96) #3, !dbg !4690
  %98 = load i32, i32* %10, align 4, !dbg !4690
  %99 = sext i32 %98 to i64, !dbg !4690
  %100 = udiv i64 %97, %99, !dbg !4690
  %101 = trunc i64 %100 to i32, !dbg !4690
  %102 = load i32*, i32** %11, align 4, !dbg !4691
  store i32 %101, i32* %102, align 4, !dbg !4692
  %103 = call i32 @bench_test_end.165() #3, !dbg !4693
  %104 = icmp slt i32 %103, 0, !dbg !4695
  br i1 %104, label %105, label %117, !dbg !4696

105:                                              ; preds = %92
  %106 = call i32 @high_timer_overflow() #3, !dbg !4697
  %107 = icmp ne i32 %106, 0, !dbg !4697
  br i1 %107, label %108, label %111, !dbg !4700

108:                                              ; preds = %105
  %109 = load i32*, i32** @output_file, align 4, !dbg !4701
  %110 = call i32 @fputs(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.10, i32 0, i32 0), i32* %109) #3, !dbg !4701
  br label %114, !dbg !4703

111:                                              ; preds = %105
  %112 = load i32*, i32** @output_file, align 4, !dbg !4704
  %113 = call i32 @fputs(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i32 0, i32 0), i32* %112) #3, !dbg !4704
  br label %114

114:                                              ; preds = %111, %108
  %115 = load i32*, i32** @output_file, align 4, !dbg !4706
  %116 = call i32 @fputs(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i32 0, i32 0), i32* %115) #3, !dbg !4706
  br label %117, !dbg !4707

117:                                              ; preds = %114, %92
  store i32 0, i32* %6, align 4, !dbg !4708
  br label %118, !dbg !4708

118:                                              ; preds = %117, %87, %74, %65
  %119 = load i32, i32* %6, align 4, !dbg !4709
  ret i32 %119, !dbg !4709
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_get.157(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !4710 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !4730, metadata !DIExpression()), !dbg !4731
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !4732, metadata !DIExpression()), !dbg !4733
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !4734, metadata !DIExpression()), !dbg !4735
  br label %9, !dbg !4736

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4737, !srcloc !4739
  br label %10, !dbg !4737

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !4740
  %12 = load i8*, i8** %6, align 4, !dbg !4741
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !4742
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !4742
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !4742
  %16 = call i32 @z_impl_k_msgq_get(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !4742
  ret i32 %16, !dbg !4743
}

; Function Attrs: noinline nounwind optnone
define internal %struct.k_thread.188* @k_current_get() #0 !dbg !4744 {
  br label %1, !dbg !4835

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4836, !srcloc !4838
  br label %2, !dbg !4836

2:                                                ; preds = %1
  %3 = call %struct.k_thread.188* bitcast (%struct.k_thread.188* (...)* @z_impl_k_current_get to %struct.k_thread.188* ()*)() #3, !dbg !4839
  ret %struct.k_thread.188* %3, !dbg !4840
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_thread_priority_get(%struct.k_thread.188*) #0 !dbg !4841 {
  %2 = alloca %struct.k_thread.188*, align 4
  store %struct.k_thread.188* %0, %struct.k_thread.188** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.188** %2, metadata !4844, metadata !DIExpression()), !dbg !4845
  br label %3, !dbg !4846

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4847, !srcloc !4849
  br label %4, !dbg !4847

4:                                                ; preds = %3
  %5 = load %struct.k_thread.188*, %struct.k_thread.188** %2, align 4, !dbg !4850
  %6 = call i32 @z_impl_k_thread_priority_get(%struct.k_thread.188* %5) #3, !dbg !4851
  ret i32 %6, !dbg !4852
}

; Function Attrs: noinline nounwind optnone
define internal void @k_thread_priority_set(%struct.k_thread.188*, i32) #0 !dbg !4853 {
  %3 = alloca %struct.k_thread.188*, align 4
  %4 = alloca i32, align 4
  store %struct.k_thread.188* %0, %struct.k_thread.188** %3, align 4
  call void @llvm.dbg.declare(metadata %struct.k_thread.188** %3, metadata !4856, metadata !DIExpression()), !dbg !4857
  store i32 %1, i32* %4, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4858, metadata !DIExpression()), !dbg !4859
  br label %5, !dbg !4860

5:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4861, !srcloc !4863
  br label %6, !dbg !4861

6:                                                ; preds = %5
  %7 = load %struct.k_thread.188*, %struct.k_thread.188** %3, align 4, !dbg !4864
  %8 = load i32, i32* %4, align 4, !dbg !4865
  call void @z_impl_k_thread_priority_set(%struct.k_thread.188* %7, i32 %8) #3, !dbg !4866
  ret void, !dbg !4867
}

declare dso_local void @z_impl_k_thread_priority_set(%struct.k_thread.188*, i32) #2

declare dso_local i32 @z_impl_k_thread_priority_get(%struct.k_thread.188*) #2

declare dso_local %struct.k_thread.188* @z_impl_k_current_get(...) #2

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.162() #0 !dbg !4868 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !4869, metadata !DIExpression()), !dbg !4870
  call void @bench_test_start.175() #3, !dbg !4871
  %2 = call i32 @TIME_STAMP_DELTA_GET.163(i32 0) #3, !dbg !4872
  store i32 %2, i32* %1, align 4, !dbg !4873
  %3 = load i32, i32* %1, align 4, !dbg !4874
  ret i32 %3, !dbg !4875
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_pipe_put(%struct.k_pipe*, i8*, i32, i32*, i32, [1 x i64]) #0 !dbg !4876 {
  %7 = alloca %struct.k_timeout_t, align 8
  %8 = alloca %struct.k_pipe*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0
  %14 = bitcast i64* %13 to [1 x i64]*
  store [1 x i64] %5, [1 x i64]* %14, align 8
  store %struct.k_pipe* %0, %struct.k_pipe** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_pipe** %8, metadata !4880, metadata !DIExpression()), !dbg !4881
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !4882, metadata !DIExpression()), !dbg !4883
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !4884, metadata !DIExpression()), !dbg !4885
  store i32* %3, i32** %11, align 4
  call void @llvm.dbg.declare(metadata i32** %11, metadata !4886, metadata !DIExpression()), !dbg !4887
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !4888, metadata !DIExpression()), !dbg !4889
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %7, metadata !4890, metadata !DIExpression()), !dbg !4891
  br label %15, !dbg !4892

15:                                               ; preds = %6
  call void asm sideeffect "", "~{memory}"() #4, !dbg !4893, !srcloc !4895
  br label %16, !dbg !4893

16:                                               ; preds = %15
  %17 = load %struct.k_pipe*, %struct.k_pipe** %8, align 4, !dbg !4896
  %18 = load i8*, i8** %9, align 4, !dbg !4897
  %19 = load i32, i32* %10, align 4, !dbg !4898
  %20 = load i32*, i32** %11, align 4, !dbg !4899
  %21 = load i32, i32* %12, align 4, !dbg !4900
  %22 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !4901
  %23 = bitcast i64* %22 to [1 x i64]*, !dbg !4901
  %24 = load [1 x i64], [1 x i64]* %23, align 8, !dbg !4901
  %25 = call i32 @z_impl_k_pipe_put(%struct.k_pipe* %17, i8* %18, i32 %19, i32* %20, i32 %21, [1 x i64] %24) #3, !dbg !4901
  ret i32 %25, !dbg !4902
}

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.163(i32) #0 !dbg !4903 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !4904, metadata !DIExpression()), !dbg !4905
  call void @llvm.dbg.declare(metadata i32* %3, metadata !4906, metadata !DIExpression()), !dbg !4907
  call void @timestamp_serialize.172() #3, !dbg !4908
  %5 = call i32 @k_cycle_get_32.173() #3, !dbg !4909
  store i32 %5, i32* %3, align 4, !dbg !4910
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4911, metadata !DIExpression()), !dbg !4912
  %6 = load i32, i32* %3, align 4, !dbg !4913
  %7 = load i32, i32* %2, align 4, !dbg !4914
  %8 = icmp uge i32 %6, %7, !dbg !4915
  br i1 %8, label %9, label %13, !dbg !4916

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !4917
  %11 = load i32, i32* %2, align 4, !dbg !4918
  %12 = sub i32 %10, %11, !dbg !4919
  br label %18, !dbg !4916

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !4920
  %15 = sub i32 -1, %14, !dbg !4921
  %16 = load i32, i32* %3, align 4, !dbg !4922
  %17 = add i32 %15, %16, !dbg !4923
  br label %18, !dbg !4916

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !4916
  store i32 %19, i32* %4, align 4, !dbg !4912
  %20 = load i32, i32* %2, align 4, !dbg !4924
  %21 = icmp ugt i32 %20, 0, !dbg !4926
  br i1 %21, label %22, label %26, !dbg !4927

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !4928
  %24 = load i32, i32* %4, align 4, !dbg !4930
  %25 = sub i32 %24, %23, !dbg !4930
  store i32 %25, i32* %4, align 4, !dbg !4930
  br label %26, !dbg !4931

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !4932
  ret i32 %27, !dbg !4933
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.164(i64) #0 !dbg !4934 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !4935, metadata !DIExpression()), !dbg !4937
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4939, metadata !DIExpression()), !dbg !4940
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4941, metadata !DIExpression()), !dbg !4942
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4943, metadata !DIExpression()), !dbg !4944
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !4945, metadata !DIExpression()), !dbg !4946
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4947, metadata !DIExpression()), !dbg !4948
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4949, metadata !DIExpression()), !dbg !4950
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !4951, metadata !DIExpression()), !dbg !4952
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4953, metadata !DIExpression()), !dbg !4954
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4955, metadata !DIExpression()), !dbg !4956
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4957, metadata !DIExpression()), !dbg !4960
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !4961, metadata !DIExpression()), !dbg !4962
  %15 = load i64, i64* %14, align 8, !dbg !4963
  %16 = call i32 @sys_clock_hw_cycles_per_sec.171() #3, !dbg !4964
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !4965
  %18 = trunc i8 %17 to i1, !dbg !4965
  br i1 %18, label %19, label %28, !dbg !4966

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !4967
  %21 = load i32, i32* %4, align 4, !dbg !4968
  %22 = icmp ugt i32 %20, %21, !dbg !4969
  br i1 %22, label %23, label %28, !dbg !4970

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !4971
  %25 = load i32, i32* %4, align 4, !dbg !4972
  %26 = urem i32 %24, %25, !dbg !4973
  %27 = icmp eq i32 %26, 0, !dbg !4974
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !4975
  %30 = zext i1 %29 to i8, !dbg !4952
  store i8 %30, i8* %10, align 1, !dbg !4952
  %31 = load i8, i8* %6, align 1, !dbg !4976
  %32 = trunc i8 %31 to i1, !dbg !4976
  br i1 %32, label %33, label %42, !dbg !4977

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !4978
  %35 = load i32, i32* %5, align 4, !dbg !4979
  %36 = icmp ugt i32 %34, %35, !dbg !4980
  br i1 %36, label %37, label %42, !dbg !4981

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !4982
  %39 = load i32, i32* %5, align 4, !dbg !4983
  %40 = urem i32 %38, %39, !dbg !4984
  %41 = icmp eq i32 %40, 0, !dbg !4985
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !4975
  %44 = zext i1 %43 to i8, !dbg !4954
  store i8 %44, i8* %11, align 1, !dbg !4954
  %45 = load i32, i32* %4, align 4, !dbg !4986
  %46 = load i32, i32* %5, align 4, !dbg !4988
  %47 = icmp eq i32 %45, %46, !dbg !4989
  br i1 %47, label %48, label %59, !dbg !4990

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !4991
  %50 = trunc i8 %49 to i1, !dbg !4991
  br i1 %50, label %51, label %55, !dbg !4991

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !4993
  %53 = trunc i64 %52 to i32, !dbg !4994
  %54 = zext i32 %53 to i64, !dbg !4995
  br label %57, !dbg !4991

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !4996
  br label %57, !dbg !4991

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !4991
  store i64 %58, i64* %2, align 8, !dbg !4997
  br label %161, !dbg !4997

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !4956
  %60 = load i8, i8* %10, align 1, !dbg !4998
  %61 = trunc i8 %60 to i1, !dbg !4998
  br i1 %61, label %88, label %62, !dbg !4999

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !5000
  %64 = trunc i8 %63 to i1, !dbg !5000
  br i1 %64, label %65, label %69, !dbg !5000

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !5001
  %67 = load i32, i32* %5, align 4, !dbg !5002
  %68 = udiv i32 %66, %67, !dbg !5003
  br label %71, !dbg !5000

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !5004
  br label %71, !dbg !5000

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !5000
  store i32 %72, i32* %13, align 4, !dbg !4960
  %73 = load i8, i8* %8, align 1, !dbg !5005
  %74 = trunc i8 %73 to i1, !dbg !5005
  br i1 %74, label %75, label %79, !dbg !5007

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !5008
  %77 = sub i32 %76, 1, !dbg !5010
  %78 = zext i32 %77 to i64, !dbg !5008
  store i64 %78, i64* %12, align 8, !dbg !5011
  br label %87, !dbg !5012

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !5013
  %81 = trunc i8 %80 to i1, !dbg !5013
  br i1 %81, label %82, label %86, !dbg !5015

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !5016
  %84 = udiv i32 %83, 2, !dbg !5018
  %85 = zext i32 %84 to i64, !dbg !5016
  store i64 %85, i64* %12, align 8, !dbg !5019
  br label %86, !dbg !5020

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !5021

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !5022
  %90 = trunc i8 %89 to i1, !dbg !5022
  br i1 %90, label %91, label %115, !dbg !5024

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !5025
  %93 = load i64, i64* %3, align 8, !dbg !5027
  %94 = add i64 %93, %92, !dbg !5027
  store i64 %94, i64* %3, align 8, !dbg !5027
  %95 = load i8, i8* %7, align 1, !dbg !5028
  %96 = trunc i8 %95 to i1, !dbg !5028
  br i1 %96, label %97, label %108, !dbg !5030

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !5031
  %99 = icmp ult i64 %98, 4294967296, !dbg !5032
  br i1 %99, label %100, label %108, !dbg !5033

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !5034
  %102 = trunc i64 %101 to i32, !dbg !5036
  %103 = load i32, i32* %4, align 4, !dbg !5037
  %104 = load i32, i32* %5, align 4, !dbg !5038
  %105 = udiv i32 %103, %104, !dbg !5039
  %106 = udiv i32 %102, %105, !dbg !5040
  %107 = zext i32 %106 to i64, !dbg !5041
  store i64 %107, i64* %2, align 8, !dbg !5042
  br label %161, !dbg !5042

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !5043
  %110 = load i32, i32* %4, align 4, !dbg !5045
  %111 = load i32, i32* %5, align 4, !dbg !5046
  %112 = udiv i32 %110, %111, !dbg !5047
  %113 = zext i32 %112 to i64, !dbg !5048
  %114 = udiv i64 %109, %113, !dbg !5049
  store i64 %114, i64* %2, align 8, !dbg !5050
  br label %161, !dbg !5050

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !5051
  %117 = trunc i8 %116 to i1, !dbg !5051
  br i1 %117, label %118, label %136, !dbg !5053

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !5054
  %120 = trunc i8 %119 to i1, !dbg !5054
  br i1 %120, label %121, label %129, !dbg !5057

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !5058
  %123 = trunc i64 %122 to i32, !dbg !5060
  %124 = load i32, i32* %5, align 4, !dbg !5061
  %125 = load i32, i32* %4, align 4, !dbg !5062
  %126 = udiv i32 %124, %125, !dbg !5063
  %127 = mul i32 %123, %126, !dbg !5064
  %128 = zext i32 %127 to i64, !dbg !5065
  store i64 %128, i64* %2, align 8, !dbg !5066
  br label %161, !dbg !5066

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !5067
  %131 = load i32, i32* %5, align 4, !dbg !5069
  %132 = load i32, i32* %4, align 4, !dbg !5070
  %133 = udiv i32 %131, %132, !dbg !5071
  %134 = zext i32 %133 to i64, !dbg !5072
  %135 = mul i64 %130, %134, !dbg !5073
  store i64 %135, i64* %2, align 8, !dbg !5074
  br label %161, !dbg !5074

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !5075
  %138 = trunc i8 %137 to i1, !dbg !5075
  br i1 %138, label %139, label %151, !dbg !5078

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !5079
  %141 = load i32, i32* %5, align 4, !dbg !5081
  %142 = zext i32 %141 to i64, !dbg !5081
  %143 = mul i64 %140, %142, !dbg !5082
  %144 = load i64, i64* %12, align 8, !dbg !5083
  %145 = add i64 %143, %144, !dbg !5084
  %146 = load i32, i32* %4, align 4, !dbg !5085
  %147 = zext i32 %146 to i64, !dbg !5085
  %148 = udiv i64 %145, %147, !dbg !5086
  %149 = trunc i64 %148 to i32, !dbg !5087
  %150 = zext i32 %149 to i64, !dbg !5087
  store i64 %150, i64* %2, align 8, !dbg !5088
  br label %161, !dbg !5088

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !5089
  %153 = load i32, i32* %5, align 4, !dbg !5091
  %154 = zext i32 %153 to i64, !dbg !5091
  %155 = mul i64 %152, %154, !dbg !5092
  %156 = load i64, i64* %12, align 8, !dbg !5093
  %157 = add i64 %155, %156, !dbg !5094
  %158 = load i32, i32* %4, align 4, !dbg !5095
  %159 = zext i32 %158 to i64, !dbg !5095
  %160 = udiv i64 %157, %159, !dbg !5096
  store i64 %160, i64* %2, align 8, !dbg !5097
  br label %161, !dbg !5097

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !5098
  ret i64 %162, !dbg !5099
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.165() #0 !dbg !5100 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.167(i64* @timestamp_check.166) #3, !dbg !5101
  store i64 %2, i64* @timestamp_check.166, align 8, !dbg !5102
  %3 = load i64, i64* @timestamp_check.166, align 8, !dbg !5103
  %4 = icmp sge i64 %3, 1000, !dbg !5105
  br i1 %4, label %5, label %6, !dbg !5106

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !5107
  br label %7, !dbg !5107

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !5109
  br label %7, !dbg !5109

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !5110
  ret i32 %8, !dbg !5110
}

; Function Attrs: noinline nounwind optnone
define internal i32 @high_timer_overflow() #0 !dbg !5111 {
  %1 = alloca i32, align 4
  %2 = load i64, i64* @timestamp_check.166, align 8, !dbg !5112
  %3 = call i64 @k_cyc_to_ns_floor64.164(i64 4294967295) #3, !dbg !5114
  %4 = udiv i64 %3, 1000000, !dbg !5115
  %5 = icmp uge i64 %2, %4, !dbg !5116
  br i1 %5, label %6, label %7, !dbg !5117

6:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !5118
  br label %8, !dbg !5118

7:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !5120
  br label %8, !dbg !5120

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %1, align 4, !dbg !5121
  ret i32 %9, !dbg !5121
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.167(i64*) #0 !dbg !5122 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !5123, metadata !DIExpression()), !dbg !5124
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5125, metadata !DIExpression()), !dbg !5126
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5127, metadata !DIExpression()), !dbg !5128
  %5 = call i64 @k_uptime_get.168() #3, !dbg !5129
  store i64 %5, i64* %3, align 8, !dbg !5130
  %6 = load i64, i64* %3, align 8, !dbg !5131
  %7 = load i64*, i64** %2, align 4, !dbg !5132
  %8 = load i64, i64* %7, align 8, !dbg !5133
  %9 = sub i64 %6, %8, !dbg !5134
  store i64 %9, i64* %4, align 8, !dbg !5135
  %10 = load i64, i64* %3, align 8, !dbg !5136
  %11 = load i64*, i64** %2, align 4, !dbg !5137
  store i64 %10, i64* %11, align 8, !dbg !5138
  %12 = load i64, i64* %4, align 8, !dbg !5139
  ret i64 %12, !dbg !5140
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.168() #0 !dbg !5141 {
  %1 = call i64 @k_uptime_ticks.169() #3, !dbg !5142
  %2 = call i64 @k_ticks_to_ms_floor64.170(i64 %1) #3, !dbg !5143
  ret i64 %2, !dbg !5144
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.169() #0 !dbg !5145 {
  br label %1, !dbg !5146

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !5147, !srcloc !5149
  br label %2, !dbg !5147

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !5150
  ret i64 %3, !dbg !5151
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.170(i64) #0 !dbg !5152 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !4935, metadata !DIExpression()), !dbg !5153
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !4939, metadata !DIExpression()), !dbg !5155
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !4941, metadata !DIExpression()), !dbg !5156
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !4943, metadata !DIExpression()), !dbg !5157
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !4945, metadata !DIExpression()), !dbg !5158
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !4947, metadata !DIExpression()), !dbg !5159
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !4949, metadata !DIExpression()), !dbg !5160
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !4951, metadata !DIExpression()), !dbg !5161
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !4953, metadata !DIExpression()), !dbg !5162
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !4955, metadata !DIExpression()), !dbg !5163
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !4957, metadata !DIExpression()), !dbg !5164
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5165, metadata !DIExpression()), !dbg !5166
  %15 = load i64, i64* %14, align 8, !dbg !5167
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !5168
  %17 = trunc i8 %16 to i1, !dbg !5168
  br i1 %17, label %18, label %27, !dbg !5169

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !5170
  %20 = load i32, i32* %4, align 4, !dbg !5171
  %21 = icmp ugt i32 %19, %20, !dbg !5172
  br i1 %21, label %22, label %27, !dbg !5173

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !5174
  %24 = load i32, i32* %4, align 4, !dbg !5175
  %25 = urem i32 %23, %24, !dbg !5176
  %26 = icmp eq i32 %25, 0, !dbg !5177
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !5178
  %29 = zext i1 %28 to i8, !dbg !5161
  store i8 %29, i8* %10, align 1, !dbg !5161
  %30 = load i8, i8* %6, align 1, !dbg !5179
  %31 = trunc i8 %30 to i1, !dbg !5179
  br i1 %31, label %32, label %41, !dbg !5180

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !5181
  %34 = load i32, i32* %5, align 4, !dbg !5182
  %35 = icmp ugt i32 %33, %34, !dbg !5183
  br i1 %35, label %36, label %41, !dbg !5184

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !5185
  %38 = load i32, i32* %5, align 4, !dbg !5186
  %39 = urem i32 %37, %38, !dbg !5187
  %40 = icmp eq i32 %39, 0, !dbg !5188
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !5178
  %43 = zext i1 %42 to i8, !dbg !5162
  store i8 %43, i8* %11, align 1, !dbg !5162
  %44 = load i32, i32* %4, align 4, !dbg !5189
  %45 = load i32, i32* %5, align 4, !dbg !5190
  %46 = icmp eq i32 %44, %45, !dbg !5191
  br i1 %46, label %47, label %58, !dbg !5192

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !5193
  %49 = trunc i8 %48 to i1, !dbg !5193
  br i1 %49, label %50, label %54, !dbg !5193

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !5194
  %52 = trunc i64 %51 to i32, !dbg !5195
  %53 = zext i32 %52 to i64, !dbg !5196
  br label %56, !dbg !5193

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !5197
  br label %56, !dbg !5193

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !5193
  store i64 %57, i64* %2, align 8, !dbg !5198
  br label %160, !dbg !5198

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !5163
  %59 = load i8, i8* %10, align 1, !dbg !5199
  %60 = trunc i8 %59 to i1, !dbg !5199
  br i1 %60, label %87, label %61, !dbg !5200

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !5201
  %63 = trunc i8 %62 to i1, !dbg !5201
  br i1 %63, label %64, label %68, !dbg !5201

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !5202
  %66 = load i32, i32* %5, align 4, !dbg !5203
  %67 = udiv i32 %65, %66, !dbg !5204
  br label %70, !dbg !5201

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !5205
  br label %70, !dbg !5201

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !5201
  store i32 %71, i32* %13, align 4, !dbg !5164
  %72 = load i8, i8* %8, align 1, !dbg !5206
  %73 = trunc i8 %72 to i1, !dbg !5206
  br i1 %73, label %74, label %78, !dbg !5207

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !5208
  %76 = sub i32 %75, 1, !dbg !5209
  %77 = zext i32 %76 to i64, !dbg !5208
  store i64 %77, i64* %12, align 8, !dbg !5210
  br label %86, !dbg !5211

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !5212
  %80 = trunc i8 %79 to i1, !dbg !5212
  br i1 %80, label %81, label %85, !dbg !5213

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !5214
  %83 = udiv i32 %82, 2, !dbg !5215
  %84 = zext i32 %83 to i64, !dbg !5214
  store i64 %84, i64* %12, align 8, !dbg !5216
  br label %85, !dbg !5217

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !5218

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !5219
  %89 = trunc i8 %88 to i1, !dbg !5219
  br i1 %89, label %90, label %114, !dbg !5220

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !5221
  %92 = load i64, i64* %3, align 8, !dbg !5222
  %93 = add i64 %92, %91, !dbg !5222
  store i64 %93, i64* %3, align 8, !dbg !5222
  %94 = load i8, i8* %7, align 1, !dbg !5223
  %95 = trunc i8 %94 to i1, !dbg !5223
  br i1 %95, label %96, label %107, !dbg !5224

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !5225
  %98 = icmp ult i64 %97, 4294967296, !dbg !5226
  br i1 %98, label %99, label %107, !dbg !5227

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !5228
  %101 = trunc i64 %100 to i32, !dbg !5229
  %102 = load i32, i32* %4, align 4, !dbg !5230
  %103 = load i32, i32* %5, align 4, !dbg !5231
  %104 = udiv i32 %102, %103, !dbg !5232
  %105 = udiv i32 %101, %104, !dbg !5233
  %106 = zext i32 %105 to i64, !dbg !5234
  store i64 %106, i64* %2, align 8, !dbg !5235
  br label %160, !dbg !5235

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !5236
  %109 = load i32, i32* %4, align 4, !dbg !5237
  %110 = load i32, i32* %5, align 4, !dbg !5238
  %111 = udiv i32 %109, %110, !dbg !5239
  %112 = zext i32 %111 to i64, !dbg !5240
  %113 = udiv i64 %108, %112, !dbg !5241
  store i64 %113, i64* %2, align 8, !dbg !5242
  br label %160, !dbg !5242

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !5243
  %116 = trunc i8 %115 to i1, !dbg !5243
  br i1 %116, label %117, label %135, !dbg !5244

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !5245
  %119 = trunc i8 %118 to i1, !dbg !5245
  br i1 %119, label %120, label %128, !dbg !5246

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !5247
  %122 = trunc i64 %121 to i32, !dbg !5248
  %123 = load i32, i32* %5, align 4, !dbg !5249
  %124 = load i32, i32* %4, align 4, !dbg !5250
  %125 = udiv i32 %123, %124, !dbg !5251
  %126 = mul i32 %122, %125, !dbg !5252
  %127 = zext i32 %126 to i64, !dbg !5253
  store i64 %127, i64* %2, align 8, !dbg !5254
  br label %160, !dbg !5254

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !5255
  %130 = load i32, i32* %5, align 4, !dbg !5256
  %131 = load i32, i32* %4, align 4, !dbg !5257
  %132 = udiv i32 %130, %131, !dbg !5258
  %133 = zext i32 %132 to i64, !dbg !5259
  %134 = mul i64 %129, %133, !dbg !5260
  store i64 %134, i64* %2, align 8, !dbg !5261
  br label %160, !dbg !5261

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !5262
  %137 = trunc i8 %136 to i1, !dbg !5262
  br i1 %137, label %138, label %150, !dbg !5263

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !5264
  %140 = load i32, i32* %5, align 4, !dbg !5265
  %141 = zext i32 %140 to i64, !dbg !5265
  %142 = mul i64 %139, %141, !dbg !5266
  %143 = load i64, i64* %12, align 8, !dbg !5267
  %144 = add i64 %142, %143, !dbg !5268
  %145 = load i32, i32* %4, align 4, !dbg !5269
  %146 = zext i32 %145 to i64, !dbg !5269
  %147 = udiv i64 %144, %146, !dbg !5270
  %148 = trunc i64 %147 to i32, !dbg !5271
  %149 = zext i32 %148 to i64, !dbg !5271
  store i64 %149, i64* %2, align 8, !dbg !5272
  br label %160, !dbg !5272

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !5273
  %152 = load i32, i32* %5, align 4, !dbg !5274
  %153 = zext i32 %152 to i64, !dbg !5274
  %154 = mul i64 %151, %153, !dbg !5275
  %155 = load i64, i64* %12, align 8, !dbg !5276
  %156 = add i64 %154, %155, !dbg !5277
  %157 = load i32, i32* %4, align 4, !dbg !5278
  %158 = zext i32 %157 to i64, !dbg !5278
  %159 = udiv i64 %156, %158, !dbg !5279
  store i64 %159, i64* %2, align 8, !dbg !5280
  br label %160, !dbg !5280

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !5281
  ret i64 %161, !dbg !5282
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.171() #0 !dbg !5283 {
  ret i32 72000000, !dbg !5284
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.172() #0 !dbg !5285 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !5286, !srcloc !5289
  ret void, !dbg !5290
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.173() #0 !dbg !5291 {
  %1 = call i32 @arch_k_cycle_get_32.174() #3, !dbg !5292
  ret i32 %1, !dbg !5293
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.174() #0 !dbg !5294 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !5295
  ret i32 %1, !dbg !5296
}

declare dso_local i32 @z_impl_k_pipe_put(%struct.k_pipe*, i8*, i32, i32*, i32, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.175() #0 !dbg !5297 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.166, align 8, !dbg !5298
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !5299
  store i64 1, i64* %2, align 8, !dbg !5299
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !5299
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !5299
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !5299
  %6 = call i32 @k_sleep.176([1 x i64] %5) #3, !dbg !5299
  %7 = call i64 @k_uptime_delta.167(i64* @timestamp_check.166) #3, !dbg !5300
  store i64 %7, i64* @timestamp_check.166, align 8, !dbg !5301
  ret void, !dbg !5302
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.176([1 x i64]) #0 !dbg !5303 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !5306, metadata !DIExpression()), !dbg !5307
  br label %5, !dbg !5308

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !5309, !srcloc !5311
  br label %6, !dbg !5309

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !5312
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !5312
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !5312
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !5312
  ret i32 %10, !dbg !5313
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_k_sem_reset.177(%struct.k_sem*) #0 !dbg !5314 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !5315, metadata !DIExpression()), !dbg !5316
  %3 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !5317
  %4 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %3, i32 0, i32 1, !dbg !5318
  store i32 0, i32* %4, align 4, !dbg !5319
  ret void, !dbg !5320
}

; Function Attrs: noinline nounwind optnone
define dso_local void @piperecvtask() #0 !dbg !5321 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.getinfo, align 4
  %7 = alloca %struct.k_timeout_t, align 8
  %8 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5323, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5325, metadata !DIExpression()), !dbg !5326
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5327, metadata !DIExpression()), !dbg !5328
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5329, metadata !DIExpression()), !dbg !5330
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5331, metadata !DIExpression()), !dbg !5332
  call void @llvm.dbg.declare(metadata %struct.getinfo* %6, metadata !5333, metadata !DIExpression()), !dbg !5339
  store i32 8, i32* %1, align 4, !dbg !5340
  br label %9, !dbg !5342

9:                                                ; preds = %39, %0
  %10 = load i32, i32* %1, align 4, !dbg !5343
  %11 = icmp sle i32 %10, 2048, !dbg !5345
  br i1 %11, label %12, label %42, !dbg !5346

12:                                               ; preds = %9
  store i32 0, i32* %4, align 4, !dbg !5347
  br label %13, !dbg !5350

13:                                               ; preds = %35, %12
  %14 = load i32, i32* %4, align 4, !dbg !5351
  %15 = icmp slt i32 %14, 3, !dbg !5353
  br i1 %15, label %16, label %38, !dbg !5354

16:                                               ; preds = %13
  store i32 256, i32* %3, align 4, !dbg !5355
  %17 = load i32, i32* %4, align 4, !dbg !5357
  %18 = getelementptr [0 x %struct.k_pipe*], [0 x %struct.k_pipe*]* bitcast ([3 x %struct.k_pipe*]* @test_pipes to [0 x %struct.k_pipe*]*), i32 0, i32 %17, !dbg !5358
  %19 = load %struct.k_pipe*, %struct.k_pipe** %18, align 4, !dbg !5358
  %20 = load i32, i32* %1, align 4, !dbg !5359
  %21 = load i32, i32* %3, align 4, !dbg !5360
  %22 = call i32 @pipeget(%struct.k_pipe* %19, i8 zeroext 2, i32 %20, i32 %21, i32* %2) #3, !dbg !5361
  %23 = load i32, i32* %2, align 4, !dbg !5362
  %24 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %6, i32 0, i32 1, !dbg !5363
  store i32 %23, i32* %24, align 4, !dbg !5364
  %25 = load i32, i32* %1, align 4, !dbg !5365
  %26 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %6, i32 0, i32 2, !dbg !5366
  store i32 %25, i32* %26, align 4, !dbg !5367
  %27 = load i32, i32* %3, align 4, !dbg !5368
  %28 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %6, i32 0, i32 0, !dbg !5369
  store i32 %27, i32* %28, align 4, !dbg !5370
  %29 = bitcast %struct.getinfo* %6 to i8*, !dbg !5371
  %30 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !5372
  store i64 -1, i64* %30, align 8, !dbg !5372
  %31 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !5373
  %32 = bitcast i64* %31 to [1 x i64]*, !dbg !5373
  %33 = load [1 x i64], [1 x i64]* %32, align 8, !dbg !5373
  %34 = call i32 @k_msgq_put.178(%struct.k_msgq* @CH_COMM, i8* %29, [1 x i64] %33) #3, !dbg !5373
  br label %35, !dbg !5374

35:                                               ; preds = %16
  %36 = load i32, i32* %4, align 4, !dbg !5375
  %37 = add i32 %36, 1, !dbg !5375
  store i32 %37, i32* %4, align 4, !dbg !5375
  br label %13, !dbg !5376, !llvm.loop !5377

38:                                               ; preds = %13
  br label %39, !dbg !5379

39:                                               ; preds = %38
  %40 = load i32, i32* %1, align 4, !dbg !5380
  %41 = shl i32 %40, 1, !dbg !5380
  store i32 %41, i32* %1, align 4, !dbg !5380
  br label %9, !dbg !5381, !llvm.loop !5382

42:                                               ; preds = %9
  store i32 0, i32* %5, align 4, !dbg !5384
  br label %43, !dbg !5386

43:                                               ; preds = %83, %42
  %44 = load i32, i32* %5, align 4, !dbg !5387
  %45 = icmp slt i32 %44, 2, !dbg !5389
  br i1 %45, label %46, label %86, !dbg !5390

46:                                               ; preds = %43
  store i32 2048, i32* %1, align 4, !dbg !5391
  br label %47, !dbg !5394

47:                                               ; preds = %79, %46
  %48 = load i32, i32* %1, align 4, !dbg !5395
  %49 = icmp sge i32 %48, 8, !dbg !5397
  br i1 %49, label %50, label %82, !dbg !5398

50:                                               ; preds = %47
  %51 = load i32, i32* %1, align 4, !dbg !5399
  %52 = sdiv i32 2048, %51, !dbg !5401
  store i32 %52, i32* %3, align 4, !dbg !5402
  store i32 0, i32* %4, align 4, !dbg !5403
  br label %53, !dbg !5405

53:                                               ; preds = %75, %50
  %54 = load i32, i32* %4, align 4, !dbg !5406
  %55 = icmp slt i32 %54, 3, !dbg !5408
  br i1 %55, label %56, label %78, !dbg !5409

56:                                               ; preds = %53
  %57 = load i32, i32* %4, align 4, !dbg !5410
  %58 = getelementptr [0 x %struct.k_pipe*], [0 x %struct.k_pipe*]* bitcast ([3 x %struct.k_pipe*]* @test_pipes to [0 x %struct.k_pipe*]*), i32 0, i32 %57, !dbg !5412
  %59 = load %struct.k_pipe*, %struct.k_pipe** %58, align 4, !dbg !5412
  %60 = load i32, i32* %1, align 4, !dbg !5413
  %61 = load i32, i32* %3, align 4, !dbg !5414
  %62 = call i32 @pipeget(%struct.k_pipe* %59, i8 zeroext 1, i32 %60, i32 %61, i32* %2) #3, !dbg !5415
  %63 = load i32, i32* %2, align 4, !dbg !5416
  %64 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %6, i32 0, i32 1, !dbg !5417
  store i32 %63, i32* %64, align 4, !dbg !5418
  %65 = load i32, i32* %1, align 4, !dbg !5419
  %66 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %6, i32 0, i32 2, !dbg !5420
  store i32 %65, i32* %66, align 4, !dbg !5421
  %67 = load i32, i32* %3, align 4, !dbg !5422
  %68 = getelementptr inbounds %struct.getinfo, %struct.getinfo* %6, i32 0, i32 0, !dbg !5423
  store i32 %67, i32* %68, align 4, !dbg !5424
  %69 = bitcast %struct.getinfo* %6 to i8*, !dbg !5425
  %70 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %8, i32 0, i32 0, !dbg !5426
  store i64 -1, i64* %70, align 8, !dbg !5426
  %71 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %8, i32 0, i32 0, !dbg !5427
  %72 = bitcast i64* %71 to [1 x i64]*, !dbg !5427
  %73 = load [1 x i64], [1 x i64]* %72, align 8, !dbg !5427
  %74 = call i32 @k_msgq_put.178(%struct.k_msgq* @CH_COMM, i8* %69, [1 x i64] %73) #3, !dbg !5427
  br label %75, !dbg !5428

75:                                               ; preds = %56
  %76 = load i32, i32* %4, align 4, !dbg !5429
  %77 = add i32 %76, 1, !dbg !5429
  store i32 %77, i32* %4, align 4, !dbg !5429
  br label %53, !dbg !5430, !llvm.loop !5431

78:                                               ; preds = %53
  br label %79, !dbg !5433

79:                                               ; preds = %78
  %80 = load i32, i32* %1, align 4, !dbg !5434
  %81 = ashr i32 %80, 1, !dbg !5434
  store i32 %81, i32* %1, align 4, !dbg !5434
  br label %47, !dbg !5435, !llvm.loop !5436

82:                                               ; preds = %47
  br label %83, !dbg !5438

83:                                               ; preds = %82
  %84 = load i32, i32* %5, align 4, !dbg !5439
  %85 = add i32 %84, 1, !dbg !5439
  store i32 %85, i32* %5, align 4, !dbg !5439
  br label %43, !dbg !5440, !llvm.loop !5441

86:                                               ; preds = %43
  ret void, !dbg !5443
}

; Function Attrs: noinline nounwind optnone
define dso_local i32 @pipeget(%struct.k_pipe*, i8 zeroext, i32, i32, i32*) #0 !dbg !5444 {
  %6 = alloca i32, align 4
  %7 = alloca %struct.k_pipe*, align 4
  %8 = alloca i8, align 1
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca %struct.k_timeout_t, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca %struct.k_timeout_t, align 8
  store %struct.k_pipe* %0, %struct.k_pipe** %7, align 4
  call void @llvm.dbg.declare(metadata %struct.k_pipe** %7, metadata !5483, metadata !DIExpression()), !dbg !5484
  store i8 %1, i8* %8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5485, metadata !DIExpression()), !dbg !5486
  store i32 %2, i32* %9, align 4
  call void @llvm.dbg.declare(metadata i32* %9, metadata !5487, metadata !DIExpression()), !dbg !5488
  store i32 %3, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5489, metadata !DIExpression()), !dbg !5490
  store i32* %4, i32** %11, align 4
  call void @llvm.dbg.declare(metadata i32** %11, metadata !5491, metadata !DIExpression()), !dbg !5492
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5493, metadata !DIExpression()), !dbg !5494
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5495, metadata !DIExpression()), !dbg !5496
  call void @llvm.dbg.declare(metadata i32* %14, metadata !5497, metadata !DIExpression()), !dbg !5498
  store i32 0, i32* %14, align 4, !dbg !5498
  call void @llvm.dbg.declare(metadata i32* %15, metadata !5499, metadata !DIExpression()), !dbg !5500
  %21 = load i32, i32* %9, align 4, !dbg !5501
  %22 = load i32, i32* %10, align 4, !dbg !5502
  %23 = mul i32 %21, %22, !dbg !5503
  store i32 %23, i32* %15, align 4, !dbg !5500
  %24 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %16, i32 0, i32 0, !dbg !5504
  store i64 -1, i64* %24, align 8, !dbg !5504
  %25 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %16, i32 0, i32 0, !dbg !5505
  %26 = bitcast i64* %25 to [1 x i64]*, !dbg !5505
  %27 = load [1 x i64], [1 x i64]* %26, align 8, !dbg !5505
  %28 = call i32 @k_sem_take.179(%struct.k_sem* @SEM0, [1 x i64] %27) #3, !dbg !5505
  %29 = call i32 @BENCH_START.180() #3, !dbg !5506
  store i32 %29, i32* %13, align 4, !dbg !5507
  store i32 0, i32* %12, align 4, !dbg !5508
  br label %30, !dbg !5510

30:                                               ; preds = %89, %5
  %31 = load i8, i8* %8, align 1, !dbg !5511
  %32 = zext i8 %31 to i32, !dbg !5511
  %33 = icmp eq i32 %32, 1, !dbg !5513
  br i1 %33, label %38, label %34, !dbg !5514

34:                                               ; preds = %30
  %35 = load i32, i32* %12, align 4, !dbg !5515
  %36 = load i32, i32* %10, align 4, !dbg !5516
  %37 = icmp slt i32 %35, %36, !dbg !5517
  br label %38, !dbg !5514

38:                                               ; preds = %34, %30
  %39 = phi i1 [ true, %30 ], [ %37, %34 ]
  br i1 %39, label %40, label %92, !dbg !5518

40:                                               ; preds = %38
  call void @llvm.dbg.declare(metadata i32* %17, metadata !5519, metadata !DIExpression()), !dbg !5521
  store i32 0, i32* %17, align 4, !dbg !5521
  call void @llvm.dbg.declare(metadata i32* %18, metadata !5522, metadata !DIExpression()), !dbg !5523
  %41 = load i32, i32* %9, align 4, !dbg !5524
  %42 = load i32, i32* %15, align 4, !dbg !5524
  %43 = load i32, i32* %14, align 4, !dbg !5524
  %44 = sub i32 %42, %43, !dbg !5524
  %45 = icmp ult i32 %41, %44, !dbg !5524
  br i1 %45, label %46, label %48, !dbg !5524

46:                                               ; preds = %40
  %47 = load i32, i32* %9, align 4, !dbg !5524
  br label %52, !dbg !5524

48:                                               ; preds = %40
  %49 = load i32, i32* %15, align 4, !dbg !5524
  %50 = load i32, i32* %14, align 4, !dbg !5524
  %51 = sub i32 %49, %50, !dbg !5524
  br label %52, !dbg !5524

52:                                               ; preds = %48, %46
  %53 = phi i32 [ %47, %46 ], [ %51, %48 ], !dbg !5524
  store i32 %53, i32* %18, align 4, !dbg !5523
  call void @llvm.dbg.declare(metadata i32* %19, metadata !5525, metadata !DIExpression()), !dbg !5526
  %54 = load %struct.k_pipe*, %struct.k_pipe** %7, align 4, !dbg !5527
  %55 = load i32, i32* %18, align 4, !dbg !5528
  %56 = load i8, i8* %8, align 1, !dbg !5529
  %57 = zext i8 %56 to i32, !dbg !5529
  %58 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %20, i32 0, i32 0, !dbg !5530
  store i64 -1, i64* %58, align 8, !dbg !5530
  %59 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %20, i32 0, i32 0, !dbg !5531
  %60 = bitcast i64* %59 to [1 x i64]*, !dbg !5531
  %61 = load [1 x i64], [1 x i64]* %60, align 8, !dbg !5531
  %62 = call i32 @k_pipe_get(%struct.k_pipe* %54, i8* getelementptr inbounds ([4096 x i8], [4096 x i8]* @data_recv, i32 0, i32 0), i32 %55, i32* %17, i32 %57, [1 x i64] %61) #3, !dbg !5531
  store i32 %62, i32* %19, align 4, !dbg !5532
  %63 = load i32, i32* %19, align 4, !dbg !5533
  %64 = icmp ne i32 %63, 0, !dbg !5535
  br i1 %64, label %65, label %66, !dbg !5536

65:                                               ; preds = %52
  store i32 1, i32* %6, align 4, !dbg !5537
  br label %118, !dbg !5537

66:                                               ; preds = %52
  %67 = load i8, i8* %8, align 1, !dbg !5539
  %68 = zext i8 %67 to i32, !dbg !5539
  %69 = icmp eq i32 %68, 2, !dbg !5541
  br i1 %69, label %70, label %75, !dbg !5542

70:                                               ; preds = %66
  %71 = load i32, i32* %17, align 4, !dbg !5543
  %72 = load i32, i32* %18, align 4, !dbg !5544
  %73 = icmp ne i32 %71, %72, !dbg !5545
  br i1 %73, label %74, label %75, !dbg !5546

74:                                               ; preds = %70
  store i32 1, i32* %6, align 4, !dbg !5547
  br label %118, !dbg !5547

75:                                               ; preds = %70, %66
  %76 = load i32, i32* %17, align 4, !dbg !5549
  %77 = load i32, i32* %14, align 4, !dbg !5550
  %78 = add i32 %77, %76, !dbg !5550
  store i32 %78, i32* %14, align 4, !dbg !5550
  %79 = load i32, i32* %15, align 4, !dbg !5551
  %80 = load i32, i32* %14, align 4, !dbg !5553
  %81 = icmp eq i32 %79, %80, !dbg !5554
  br i1 %81, label %82, label %83, !dbg !5555

82:                                               ; preds = %75
  br label %92, !dbg !5556

83:                                               ; preds = %75
  %84 = load i32, i32* %15, align 4, !dbg !5558
  %85 = load i32, i32* %14, align 4, !dbg !5560
  %86 = icmp ult i32 %84, %85, !dbg !5561
  br i1 %86, label %87, label %88, !dbg !5562

87:                                               ; preds = %83
  store i32 1, i32* %6, align 4, !dbg !5563
  br label %118, !dbg !5563

88:                                               ; preds = %83
  br label %89, !dbg !5565

89:                                               ; preds = %88
  %90 = load i32, i32* %12, align 4, !dbg !5566
  %91 = add i32 %90, 1, !dbg !5566
  store i32 %91, i32* %12, align 4, !dbg !5566
  br label %30, !dbg !5567, !llvm.loop !5568

92:                                               ; preds = %82, %38
  %93 = load i32, i32* %13, align 4, !dbg !5570
  %94 = call i32 @TIME_STAMP_DELTA_GET.181(i32 %93) #3, !dbg !5571
  store i32 %94, i32* %13, align 4, !dbg !5572
  %95 = load i32, i32* %13, align 4, !dbg !5573
  %96 = zext i32 %95 to i64, !dbg !5573
  %97 = call i64 @k_cyc_to_ns_floor64.182(i64 %96) #3, !dbg !5573
  %98 = load i32, i32* %10, align 4, !dbg !5573
  %99 = sext i32 %98 to i64, !dbg !5573
  %100 = udiv i64 %97, %99, !dbg !5573
  %101 = trunc i64 %100 to i32, !dbg !5573
  %102 = load i32*, i32** %11, align 4, !dbg !5574
  store i32 %101, i32* %102, align 4, !dbg !5575
  %103 = call i32 @bench_test_end.183() #3, !dbg !5576
  %104 = icmp slt i32 %103, 0, !dbg !5578
  br i1 %104, label %105, label %117, !dbg !5579

105:                                              ; preds = %92
  %106 = call i32 @high_timer_overflow.184() #3, !dbg !5580
  %107 = icmp ne i32 %106, 0, !dbg !5580
  br i1 %107, label %108, label %111, !dbg !5583

108:                                              ; preds = %105
  %109 = load i32*, i32** @output_file, align 4, !dbg !5584
  %110 = call i32 @fputs(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.185, i32 0, i32 0), i32* %109) #3, !dbg !5584
  br label %114, !dbg !5586

111:                                              ; preds = %105
  %112 = load i32*, i32** @output_file, align 4, !dbg !5587
  %113 = call i32 @fputs(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.186, i32 0, i32 0), i32* %112) #3, !dbg !5587
  br label %114

114:                                              ; preds = %111, %108
  %115 = load i32*, i32** @output_file, align 4, !dbg !5589
  %116 = call i32 @fputs(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.187, i32 0, i32 0), i32* %115) #3, !dbg !5589
  br label %117, !dbg !5590

117:                                              ; preds = %114, %92
  store i32 0, i32* %6, align 4, !dbg !5591
  br label %118, !dbg !5591

118:                                              ; preds = %117, %87, %74, %65
  %119 = load i32, i32* %6, align 4, !dbg !5592
  ret i32 %119, !dbg !5592
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_msgq_put.178(%struct.k_msgq*, i8*, [1 x i64]) #0 !dbg !5593 {
  %4 = alloca %struct.k_timeout_t, align 8
  %5 = alloca %struct.k_msgq*, align 4
  %6 = alloca i8*, align 4
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0
  %8 = bitcast i64* %7 to [1 x i64]*
  store [1 x i64] %2, [1 x i64]* %8, align 8
  store %struct.k_msgq* %0, %struct.k_msgq** %5, align 4
  call void @llvm.dbg.declare(metadata %struct.k_msgq** %5, metadata !5613, metadata !DIExpression()), !dbg !5614
  store i8* %1, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !5615, metadata !DIExpression()), !dbg !5616
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %4, metadata !5617, metadata !DIExpression()), !dbg !5618
  br label %9, !dbg !5619

9:                                                ; preds = %3
  call void asm sideeffect "", "~{memory}"() #4, !dbg !5620, !srcloc !5622
  br label %10, !dbg !5620

10:                                               ; preds = %9
  %11 = load %struct.k_msgq*, %struct.k_msgq** %5, align 4, !dbg !5623
  %12 = load i8*, i8** %6, align 4, !dbg !5624
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %4, i32 0, i32 0, !dbg !5625
  %14 = bitcast i64* %13 to [1 x i64]*, !dbg !5625
  %15 = load [1 x i64], [1 x i64]* %14, align 8, !dbg !5625
  %16 = call i32 @z_impl_k_msgq_put(%struct.k_msgq* %11, i8* %12, [1 x i64] %15) #3, !dbg !5625
  ret i32 %16, !dbg !5626
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sem_take.179(%struct.k_sem*, [1 x i64]) #0 !dbg !5627 {
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_sem*, align 4
  %5 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_sem* %0, %struct.k_sem** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %4, metadata !5636, metadata !DIExpression()), !dbg !5637
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %3, metadata !5638, metadata !DIExpression()), !dbg !5639
  br label %7, !dbg !5640

7:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #4, !dbg !5641, !srcloc !5643
  br label %8, !dbg !5641

8:                                                ; preds = %7
  %9 = load %struct.k_sem*, %struct.k_sem** %4, align 4, !dbg !5644
  %10 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !5645
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !5645
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !5645
  %13 = call i32 @z_impl_k_sem_take(%struct.k_sem* %9, [1 x i64] %12) #3, !dbg !5645
  ret i32 %13, !dbg !5646
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.180() #0 !dbg !5647 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !5648, metadata !DIExpression()), !dbg !5649
  call void @bench_test_start.197() #3, !dbg !5650
  %2 = call i32 @TIME_STAMP_DELTA_GET.181(i32 0) #3, !dbg !5651
  store i32 %2, i32* %1, align 4, !dbg !5652
  %3 = load i32, i32* %1, align 4, !dbg !5653
  ret i32 %3, !dbg !5654
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_pipe_get(%struct.k_pipe*, i8*, i32, i32*, i32, [1 x i64]) #0 !dbg !5655 {
  %7 = alloca %struct.k_timeout_t, align 8
  %8 = alloca %struct.k_pipe*, align 4
  %9 = alloca i8*, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32*, align 4
  %12 = alloca i32, align 4
  %13 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0
  %14 = bitcast i64* %13 to [1 x i64]*
  store [1 x i64] %5, [1 x i64]* %14, align 8
  store %struct.k_pipe* %0, %struct.k_pipe** %8, align 4
  call void @llvm.dbg.declare(metadata %struct.k_pipe** %8, metadata !5658, metadata !DIExpression()), !dbg !5659
  store i8* %1, i8** %9, align 4
  call void @llvm.dbg.declare(metadata i8** %9, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i32 %2, i32* %10, align 4
  call void @llvm.dbg.declare(metadata i32* %10, metadata !5662, metadata !DIExpression()), !dbg !5663
  store i32* %3, i32** %11, align 4
  call void @llvm.dbg.declare(metadata i32** %11, metadata !5664, metadata !DIExpression()), !dbg !5665
  store i32 %4, i32* %12, align 4
  call void @llvm.dbg.declare(metadata i32* %12, metadata !5666, metadata !DIExpression()), !dbg !5667
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %7, metadata !5668, metadata !DIExpression()), !dbg !5669
  br label %15, !dbg !5670

15:                                               ; preds = %6
  call void asm sideeffect "", "~{memory}"() #4, !dbg !5671, !srcloc !5673
  br label %16, !dbg !5671

16:                                               ; preds = %15
  %17 = load %struct.k_pipe*, %struct.k_pipe** %8, align 4, !dbg !5674
  %18 = load i8*, i8** %9, align 4, !dbg !5675
  %19 = load i32, i32* %10, align 4, !dbg !5676
  %20 = load i32*, i32** %11, align 4, !dbg !5677
  %21 = load i32, i32* %12, align 4, !dbg !5678
  %22 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !5679
  %23 = bitcast i64* %22 to [1 x i64]*, !dbg !5679
  %24 = load [1 x i64], [1 x i64]* %23, align 8, !dbg !5679
  %25 = call i32 @z_impl_k_pipe_get(%struct.k_pipe* %17, i8* %18, i32 %19, i32* %20, i32 %21, [1 x i64] %24) #3, !dbg !5679
  ret i32 %25, !dbg !5680
}

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.181(i32) #0 !dbg !5681 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !5682, metadata !DIExpression()), !dbg !5683
  call void @llvm.dbg.declare(metadata i32* %3, metadata !5684, metadata !DIExpression()), !dbg !5685
  call void @timestamp_serialize.194() #3, !dbg !5686
  %5 = call i32 @k_cycle_get_32.195() #3, !dbg !5687
  store i32 %5, i32* %3, align 4, !dbg !5688
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5689, metadata !DIExpression()), !dbg !5690
  %6 = load i32, i32* %3, align 4, !dbg !5691
  %7 = load i32, i32* %2, align 4, !dbg !5692
  %8 = icmp uge i32 %6, %7, !dbg !5693
  br i1 %8, label %9, label %13, !dbg !5694

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !5695
  %11 = load i32, i32* %2, align 4, !dbg !5696
  %12 = sub i32 %10, %11, !dbg !5697
  br label %18, !dbg !5694

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !5698
  %15 = sub i32 -1, %14, !dbg !5699
  %16 = load i32, i32* %3, align 4, !dbg !5700
  %17 = add i32 %15, %16, !dbg !5701
  br label %18, !dbg !5694

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !5694
  store i32 %19, i32* %4, align 4, !dbg !5690
  %20 = load i32, i32* %2, align 4, !dbg !5702
  %21 = icmp ugt i32 %20, 0, !dbg !5704
  br i1 %21, label %22, label %26, !dbg !5705

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !5706
  %24 = load i32, i32* %4, align 4, !dbg !5708
  %25 = sub i32 %24, %23, !dbg !5708
  store i32 %25, i32* %4, align 4, !dbg !5708
  br label %26, !dbg !5709

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !5710
  ret i32 %27, !dbg !5711
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.182(i64) #0 !dbg !5712 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5713, metadata !DIExpression()), !dbg !5715
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5717, metadata !DIExpression()), !dbg !5718
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5719, metadata !DIExpression()), !dbg !5720
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5721, metadata !DIExpression()), !dbg !5722
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !5723, metadata !DIExpression()), !dbg !5724
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5725, metadata !DIExpression()), !dbg !5726
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5727, metadata !DIExpression()), !dbg !5728
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !5729, metadata !DIExpression()), !dbg !5730
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !5731, metadata !DIExpression()), !dbg !5732
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !5733, metadata !DIExpression()), !dbg !5734
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5735, metadata !DIExpression()), !dbg !5738
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5739, metadata !DIExpression()), !dbg !5740
  %15 = load i64, i64* %14, align 8, !dbg !5741
  %16 = call i32 @sys_clock_hw_cycles_per_sec.193() #3, !dbg !5742
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !5743
  %18 = trunc i8 %17 to i1, !dbg !5743
  br i1 %18, label %19, label %28, !dbg !5744

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !5745
  %21 = load i32, i32* %4, align 4, !dbg !5746
  %22 = icmp ugt i32 %20, %21, !dbg !5747
  br i1 %22, label %23, label %28, !dbg !5748

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !5749
  %25 = load i32, i32* %4, align 4, !dbg !5750
  %26 = urem i32 %24, %25, !dbg !5751
  %27 = icmp eq i32 %26, 0, !dbg !5752
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !5753
  %30 = zext i1 %29 to i8, !dbg !5730
  store i8 %30, i8* %10, align 1, !dbg !5730
  %31 = load i8, i8* %6, align 1, !dbg !5754
  %32 = trunc i8 %31 to i1, !dbg !5754
  br i1 %32, label %33, label %42, !dbg !5755

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !5756
  %35 = load i32, i32* %5, align 4, !dbg !5757
  %36 = icmp ugt i32 %34, %35, !dbg !5758
  br i1 %36, label %37, label %42, !dbg !5759

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !5760
  %39 = load i32, i32* %5, align 4, !dbg !5761
  %40 = urem i32 %38, %39, !dbg !5762
  %41 = icmp eq i32 %40, 0, !dbg !5763
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !5753
  %44 = zext i1 %43 to i8, !dbg !5732
  store i8 %44, i8* %11, align 1, !dbg !5732
  %45 = load i32, i32* %4, align 4, !dbg !5764
  %46 = load i32, i32* %5, align 4, !dbg !5766
  %47 = icmp eq i32 %45, %46, !dbg !5767
  br i1 %47, label %48, label %59, !dbg !5768

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !5769
  %50 = trunc i8 %49 to i1, !dbg !5769
  br i1 %50, label %51, label %55, !dbg !5769

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !5771
  %53 = trunc i64 %52 to i32, !dbg !5772
  %54 = zext i32 %53 to i64, !dbg !5773
  br label %57, !dbg !5769

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !5774
  br label %57, !dbg !5769

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !5769
  store i64 %58, i64* %2, align 8, !dbg !5775
  br label %161, !dbg !5775

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !5734
  %60 = load i8, i8* %10, align 1, !dbg !5776
  %61 = trunc i8 %60 to i1, !dbg !5776
  br i1 %61, label %88, label %62, !dbg !5777

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !5778
  %64 = trunc i8 %63 to i1, !dbg !5778
  br i1 %64, label %65, label %69, !dbg !5778

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !5779
  %67 = load i32, i32* %5, align 4, !dbg !5780
  %68 = udiv i32 %66, %67, !dbg !5781
  br label %71, !dbg !5778

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !5782
  br label %71, !dbg !5778

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !5778
  store i32 %72, i32* %13, align 4, !dbg !5738
  %73 = load i8, i8* %8, align 1, !dbg !5783
  %74 = trunc i8 %73 to i1, !dbg !5783
  br i1 %74, label %75, label %79, !dbg !5785

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !5786
  %77 = sub i32 %76, 1, !dbg !5788
  %78 = zext i32 %77 to i64, !dbg !5786
  store i64 %78, i64* %12, align 8, !dbg !5789
  br label %87, !dbg !5790

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !5791
  %81 = trunc i8 %80 to i1, !dbg !5791
  br i1 %81, label %82, label %86, !dbg !5793

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !5794
  %84 = udiv i32 %83, 2, !dbg !5796
  %85 = zext i32 %84 to i64, !dbg !5794
  store i64 %85, i64* %12, align 8, !dbg !5797
  br label %86, !dbg !5798

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !5799

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !5800
  %90 = trunc i8 %89 to i1, !dbg !5800
  br i1 %90, label %91, label %115, !dbg !5802

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !5803
  %93 = load i64, i64* %3, align 8, !dbg !5805
  %94 = add i64 %93, %92, !dbg !5805
  store i64 %94, i64* %3, align 8, !dbg !5805
  %95 = load i8, i8* %7, align 1, !dbg !5806
  %96 = trunc i8 %95 to i1, !dbg !5806
  br i1 %96, label %97, label %108, !dbg !5808

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !5809
  %99 = icmp ult i64 %98, 4294967296, !dbg !5810
  br i1 %99, label %100, label %108, !dbg !5811

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !5812
  %102 = trunc i64 %101 to i32, !dbg !5814
  %103 = load i32, i32* %4, align 4, !dbg !5815
  %104 = load i32, i32* %5, align 4, !dbg !5816
  %105 = udiv i32 %103, %104, !dbg !5817
  %106 = udiv i32 %102, %105, !dbg !5818
  %107 = zext i32 %106 to i64, !dbg !5819
  store i64 %107, i64* %2, align 8, !dbg !5820
  br label %161, !dbg !5820

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !5821
  %110 = load i32, i32* %4, align 4, !dbg !5823
  %111 = load i32, i32* %5, align 4, !dbg !5824
  %112 = udiv i32 %110, %111, !dbg !5825
  %113 = zext i32 %112 to i64, !dbg !5826
  %114 = udiv i64 %109, %113, !dbg !5827
  store i64 %114, i64* %2, align 8, !dbg !5828
  br label %161, !dbg !5828

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !5829
  %117 = trunc i8 %116 to i1, !dbg !5829
  br i1 %117, label %118, label %136, !dbg !5831

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !5832
  %120 = trunc i8 %119 to i1, !dbg !5832
  br i1 %120, label %121, label %129, !dbg !5835

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !5836
  %123 = trunc i64 %122 to i32, !dbg !5838
  %124 = load i32, i32* %5, align 4, !dbg !5839
  %125 = load i32, i32* %4, align 4, !dbg !5840
  %126 = udiv i32 %124, %125, !dbg !5841
  %127 = mul i32 %123, %126, !dbg !5842
  %128 = zext i32 %127 to i64, !dbg !5843
  store i64 %128, i64* %2, align 8, !dbg !5844
  br label %161, !dbg !5844

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !5845
  %131 = load i32, i32* %5, align 4, !dbg !5847
  %132 = load i32, i32* %4, align 4, !dbg !5848
  %133 = udiv i32 %131, %132, !dbg !5849
  %134 = zext i32 %133 to i64, !dbg !5850
  %135 = mul i64 %130, %134, !dbg !5851
  store i64 %135, i64* %2, align 8, !dbg !5852
  br label %161, !dbg !5852

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !5853
  %138 = trunc i8 %137 to i1, !dbg !5853
  br i1 %138, label %139, label %151, !dbg !5856

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !5857
  %141 = load i32, i32* %5, align 4, !dbg !5859
  %142 = zext i32 %141 to i64, !dbg !5859
  %143 = mul i64 %140, %142, !dbg !5860
  %144 = load i64, i64* %12, align 8, !dbg !5861
  %145 = add i64 %143, %144, !dbg !5862
  %146 = load i32, i32* %4, align 4, !dbg !5863
  %147 = zext i32 %146 to i64, !dbg !5863
  %148 = udiv i64 %145, %147, !dbg !5864
  %149 = trunc i64 %148 to i32, !dbg !5865
  %150 = zext i32 %149 to i64, !dbg !5865
  store i64 %150, i64* %2, align 8, !dbg !5866
  br label %161, !dbg !5866

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !5867
  %153 = load i32, i32* %5, align 4, !dbg !5869
  %154 = zext i32 %153 to i64, !dbg !5869
  %155 = mul i64 %152, %154, !dbg !5870
  %156 = load i64, i64* %12, align 8, !dbg !5871
  %157 = add i64 %155, %156, !dbg !5872
  %158 = load i32, i32* %4, align 4, !dbg !5873
  %159 = zext i32 %158 to i64, !dbg !5873
  %160 = udiv i64 %157, %159, !dbg !5874
  store i64 %160, i64* %2, align 8, !dbg !5875
  br label %161, !dbg !5875

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !5876
  ret i64 %162, !dbg !5877
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.183() #0 !dbg !5878 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.189(i64* @timestamp_check.188) #3, !dbg !5879
  store i64 %2, i64* @timestamp_check.188, align 8, !dbg !5880
  %3 = load i64, i64* @timestamp_check.188, align 8, !dbg !5881
  %4 = icmp sge i64 %3, 1000, !dbg !5883
  br i1 %4, label %5, label %6, !dbg !5884

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !5885
  br label %7, !dbg !5885

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !5887
  br label %7, !dbg !5887

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !5888
  ret i32 %8, !dbg !5888
}

; Function Attrs: noinline nounwind optnone
define internal i32 @high_timer_overflow.184() #0 !dbg !5889 {
  %1 = alloca i32, align 4
  %2 = load i64, i64* @timestamp_check.188, align 8, !dbg !5890
  %3 = call i64 @k_cyc_to_ns_floor64.182(i64 4294967295) #3, !dbg !5892
  %4 = udiv i64 %3, 1000000, !dbg !5893
  %5 = icmp uge i64 %2, %4, !dbg !5894
  br i1 %5, label %6, label %7, !dbg !5895

6:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !5896
  br label %8, !dbg !5896

7:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !5898
  br label %8, !dbg !5898

8:                                                ; preds = %7, %6
  %9 = load i32, i32* %1, align 4, !dbg !5899
  ret i32 %9, !dbg !5899
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.189(i64*) #0 !dbg !5900 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !5901, metadata !DIExpression()), !dbg !5902
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5903, metadata !DIExpression()), !dbg !5904
  call void @llvm.dbg.declare(metadata i64* %4, metadata !5905, metadata !DIExpression()), !dbg !5906
  %5 = call i64 @k_uptime_get.190() #3, !dbg !5907
  store i64 %5, i64* %3, align 8, !dbg !5908
  %6 = load i64, i64* %3, align 8, !dbg !5909
  %7 = load i64*, i64** %2, align 4, !dbg !5910
  %8 = load i64, i64* %7, align 8, !dbg !5911
  %9 = sub i64 %6, %8, !dbg !5912
  store i64 %9, i64* %4, align 8, !dbg !5913
  %10 = load i64, i64* %3, align 8, !dbg !5914
  %11 = load i64*, i64** %2, align 4, !dbg !5915
  store i64 %10, i64* %11, align 8, !dbg !5916
  %12 = load i64, i64* %4, align 8, !dbg !5917
  ret i64 %12, !dbg !5918
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.190() #0 !dbg !5919 {
  %1 = call i64 @k_uptime_ticks.191() #3, !dbg !5920
  %2 = call i64 @k_ticks_to_ms_floor64.192(i64 %1) #3, !dbg !5921
  ret i64 %2, !dbg !5922
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.191() #0 !dbg !5923 {
  br label %1, !dbg !5924

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !5925, !srcloc !5927
  br label %2, !dbg !5925

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !5928
  ret i64 %3, !dbg !5929
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.192(i64) #0 !dbg !5930 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !5713, metadata !DIExpression()), !dbg !5931
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !5717, metadata !DIExpression()), !dbg !5933
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !5719, metadata !DIExpression()), !dbg !5934
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !5721, metadata !DIExpression()), !dbg !5935
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !5723, metadata !DIExpression()), !dbg !5936
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !5725, metadata !DIExpression()), !dbg !5937
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !5727, metadata !DIExpression()), !dbg !5938
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !5729, metadata !DIExpression()), !dbg !5939
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !5731, metadata !DIExpression()), !dbg !5940
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !5733, metadata !DIExpression()), !dbg !5941
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !5735, metadata !DIExpression()), !dbg !5942
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !5943, metadata !DIExpression()), !dbg !5944
  %15 = load i64, i64* %14, align 8, !dbg !5945
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !5946
  %17 = trunc i8 %16 to i1, !dbg !5946
  br i1 %17, label %18, label %27, !dbg !5947

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !5948
  %20 = load i32, i32* %4, align 4, !dbg !5949
  %21 = icmp ugt i32 %19, %20, !dbg !5950
  br i1 %21, label %22, label %27, !dbg !5951

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !5952
  %24 = load i32, i32* %4, align 4, !dbg !5953
  %25 = urem i32 %23, %24, !dbg !5954
  %26 = icmp eq i32 %25, 0, !dbg !5955
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !5956
  %29 = zext i1 %28 to i8, !dbg !5939
  store i8 %29, i8* %10, align 1, !dbg !5939
  %30 = load i8, i8* %6, align 1, !dbg !5957
  %31 = trunc i8 %30 to i1, !dbg !5957
  br i1 %31, label %32, label %41, !dbg !5958

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !5959
  %34 = load i32, i32* %5, align 4, !dbg !5960
  %35 = icmp ugt i32 %33, %34, !dbg !5961
  br i1 %35, label %36, label %41, !dbg !5962

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !5963
  %38 = load i32, i32* %5, align 4, !dbg !5964
  %39 = urem i32 %37, %38, !dbg !5965
  %40 = icmp eq i32 %39, 0, !dbg !5966
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !5956
  %43 = zext i1 %42 to i8, !dbg !5940
  store i8 %43, i8* %11, align 1, !dbg !5940
  %44 = load i32, i32* %4, align 4, !dbg !5967
  %45 = load i32, i32* %5, align 4, !dbg !5968
  %46 = icmp eq i32 %44, %45, !dbg !5969
  br i1 %46, label %47, label %58, !dbg !5970

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !5971
  %49 = trunc i8 %48 to i1, !dbg !5971
  br i1 %49, label %50, label %54, !dbg !5971

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !5972
  %52 = trunc i64 %51 to i32, !dbg !5973
  %53 = zext i32 %52 to i64, !dbg !5974
  br label %56, !dbg !5971

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !5975
  br label %56, !dbg !5971

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !5971
  store i64 %57, i64* %2, align 8, !dbg !5976
  br label %160, !dbg !5976

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !5941
  %59 = load i8, i8* %10, align 1, !dbg !5977
  %60 = trunc i8 %59 to i1, !dbg !5977
  br i1 %60, label %87, label %61, !dbg !5978

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !5979
  %63 = trunc i8 %62 to i1, !dbg !5979
  br i1 %63, label %64, label %68, !dbg !5979

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !5980
  %66 = load i32, i32* %5, align 4, !dbg !5981
  %67 = udiv i32 %65, %66, !dbg !5982
  br label %70, !dbg !5979

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !5983
  br label %70, !dbg !5979

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !5979
  store i32 %71, i32* %13, align 4, !dbg !5942
  %72 = load i8, i8* %8, align 1, !dbg !5984
  %73 = trunc i8 %72 to i1, !dbg !5984
  br i1 %73, label %74, label %78, !dbg !5985

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !5986
  %76 = sub i32 %75, 1, !dbg !5987
  %77 = zext i32 %76 to i64, !dbg !5986
  store i64 %77, i64* %12, align 8, !dbg !5988
  br label %86, !dbg !5989

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !5990
  %80 = trunc i8 %79 to i1, !dbg !5990
  br i1 %80, label %81, label %85, !dbg !5991

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !5992
  %83 = udiv i32 %82, 2, !dbg !5993
  %84 = zext i32 %83 to i64, !dbg !5992
  store i64 %84, i64* %12, align 8, !dbg !5994
  br label %85, !dbg !5995

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !5996

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !5997
  %89 = trunc i8 %88 to i1, !dbg !5997
  br i1 %89, label %90, label %114, !dbg !5998

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !5999
  %92 = load i64, i64* %3, align 8, !dbg !6000
  %93 = add i64 %92, %91, !dbg !6000
  store i64 %93, i64* %3, align 8, !dbg !6000
  %94 = load i8, i8* %7, align 1, !dbg !6001
  %95 = trunc i8 %94 to i1, !dbg !6001
  br i1 %95, label %96, label %107, !dbg !6002

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !6003
  %98 = icmp ult i64 %97, 4294967296, !dbg !6004
  br i1 %98, label %99, label %107, !dbg !6005

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !6006
  %101 = trunc i64 %100 to i32, !dbg !6007
  %102 = load i32, i32* %4, align 4, !dbg !6008
  %103 = load i32, i32* %5, align 4, !dbg !6009
  %104 = udiv i32 %102, %103, !dbg !6010
  %105 = udiv i32 %101, %104, !dbg !6011
  %106 = zext i32 %105 to i64, !dbg !6012
  store i64 %106, i64* %2, align 8, !dbg !6013
  br label %160, !dbg !6013

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !6014
  %109 = load i32, i32* %4, align 4, !dbg !6015
  %110 = load i32, i32* %5, align 4, !dbg !6016
  %111 = udiv i32 %109, %110, !dbg !6017
  %112 = zext i32 %111 to i64, !dbg !6018
  %113 = udiv i64 %108, %112, !dbg !6019
  store i64 %113, i64* %2, align 8, !dbg !6020
  br label %160, !dbg !6020

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !6021
  %116 = trunc i8 %115 to i1, !dbg !6021
  br i1 %116, label %117, label %135, !dbg !6022

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !6023
  %119 = trunc i8 %118 to i1, !dbg !6023
  br i1 %119, label %120, label %128, !dbg !6024

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !6025
  %122 = trunc i64 %121 to i32, !dbg !6026
  %123 = load i32, i32* %5, align 4, !dbg !6027
  %124 = load i32, i32* %4, align 4, !dbg !6028
  %125 = udiv i32 %123, %124, !dbg !6029
  %126 = mul i32 %122, %125, !dbg !6030
  %127 = zext i32 %126 to i64, !dbg !6031
  store i64 %127, i64* %2, align 8, !dbg !6032
  br label %160, !dbg !6032

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !6033
  %130 = load i32, i32* %5, align 4, !dbg !6034
  %131 = load i32, i32* %4, align 4, !dbg !6035
  %132 = udiv i32 %130, %131, !dbg !6036
  %133 = zext i32 %132 to i64, !dbg !6037
  %134 = mul i64 %129, %133, !dbg !6038
  store i64 %134, i64* %2, align 8, !dbg !6039
  br label %160, !dbg !6039

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !6040
  %137 = trunc i8 %136 to i1, !dbg !6040
  br i1 %137, label %138, label %150, !dbg !6041

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !6042
  %140 = load i32, i32* %5, align 4, !dbg !6043
  %141 = zext i32 %140 to i64, !dbg !6043
  %142 = mul i64 %139, %141, !dbg !6044
  %143 = load i64, i64* %12, align 8, !dbg !6045
  %144 = add i64 %142, %143, !dbg !6046
  %145 = load i32, i32* %4, align 4, !dbg !6047
  %146 = zext i32 %145 to i64, !dbg !6047
  %147 = udiv i64 %144, %146, !dbg !6048
  %148 = trunc i64 %147 to i32, !dbg !6049
  %149 = zext i32 %148 to i64, !dbg !6049
  store i64 %149, i64* %2, align 8, !dbg !6050
  br label %160, !dbg !6050

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !6051
  %152 = load i32, i32* %5, align 4, !dbg !6052
  %153 = zext i32 %152 to i64, !dbg !6052
  %154 = mul i64 %151, %153, !dbg !6053
  %155 = load i64, i64* %12, align 8, !dbg !6054
  %156 = add i64 %154, %155, !dbg !6055
  %157 = load i32, i32* %4, align 4, !dbg !6056
  %158 = zext i32 %157 to i64, !dbg !6056
  %159 = udiv i64 %156, %158, !dbg !6057
  store i64 %159, i64* %2, align 8, !dbg !6058
  br label %160, !dbg !6058

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !6059
  ret i64 %161, !dbg !6060
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.193() #0 !dbg !6061 {
  ret i32 72000000, !dbg !6062
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.194() #0 !dbg !6063 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !6064, !srcloc !6067
  ret void, !dbg !6068
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.195() #0 !dbg !6069 {
  %1 = call i32 @arch_k_cycle_get_32.196() #3, !dbg !6070
  ret i32 %1, !dbg !6071
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.196() #0 !dbg !6072 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !6073
  ret i32 %1, !dbg !6074
}

declare dso_local i32 @z_impl_k_pipe_get(%struct.k_pipe*, i8*, i32, i32*, i32, [1 x i64]) #2

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.197() #0 !dbg !6075 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.188, align 8, !dbg !6076
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !6077
  store i64 1, i64* %2, align 8, !dbg !6077
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !6077
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !6077
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !6077
  %6 = call i32 @k_sleep.198([1 x i64] %5) #3, !dbg !6077
  %7 = call i64 @k_uptime_delta.189(i64* @timestamp_check.188) #3, !dbg !6078
  store i64 %7, i64* @timestamp_check.188, align 8, !dbg !6079
  ret void, !dbg !6080
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.198([1 x i64]) #0 !dbg !6081 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !6084, metadata !DIExpression()), !dbg !6085
  br label %5, !dbg !6086

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6087, !srcloc !6089
  br label %6, !dbg !6087

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !6090
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !6090
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !6090
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !6090
  ret i32 %10, !dbg !6091
}

; Function Attrs: noinline nounwind optnone
define dso_local void @recvtask(i8*, i8*, i8*) #0 !dbg !6092 {
  %4 = alloca i8*, align 4
  %5 = alloca i8*, align 4
  %6 = alloca i8*, align 4
  %7 = alloca %struct.k_timeout_t, align 8
  %8 = alloca %struct.k_timeout_t, align 8
  %9 = alloca %struct.k_timeout_t, align 8
  %10 = alloca %struct.k_timeout_t, align 8
  store i8* %0, i8** %4, align 4
  call void @llvm.dbg.declare(metadata i8** %4, metadata !6093, metadata !DIExpression()), !dbg !6094
  store i8* %1, i8** %5, align 4
  call void @llvm.dbg.declare(metadata i8** %5, metadata !6095, metadata !DIExpression()), !dbg !6096
  store i8* %2, i8** %6, align 4
  call void @llvm.dbg.declare(metadata i8** %6, metadata !6097, metadata !DIExpression()), !dbg !6098
  %11 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !6099
  store i64 -1, i64* %11, align 8, !dbg !6099
  %12 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %7, i32 0, i32 0, !dbg !6100
  %13 = bitcast i64* %12 to [1 x i64]*, !dbg !6100
  %14 = load [1 x i64], [1 x i64]* %13, align 8, !dbg !6100
  %15 = call i32 @k_sem_take.203(%struct.k_sem* @STARTRCV, [1 x i64] %14) #3, !dbg !6100
  call void @dequtask() #3, !dbg !6101
  %16 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %8, i32 0, i32 0, !dbg !6102
  store i64 -1, i64* %16, align 8, !dbg !6102
  %17 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %8, i32 0, i32 0, !dbg !6103
  %18 = bitcast i64* %17 to [1 x i64]*, !dbg !6103
  %19 = load [1 x i64], [1 x i64]* %18, align 8, !dbg !6103
  %20 = call i32 @k_sem_take.203(%struct.k_sem* @STARTRCV, [1 x i64] %19) #3, !dbg !6103
  call void @waittask() #3, !dbg !6104
  %21 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %9, i32 0, i32 0, !dbg !6105
  store i64 -1, i64* %21, align 8, !dbg !6105
  %22 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %9, i32 0, i32 0, !dbg !6106
  %23 = bitcast i64* %22 to [1 x i64]*, !dbg !6106
  %24 = load [1 x i64], [1 x i64]* %23, align 8, !dbg !6106
  %25 = call i32 @k_sem_take.203(%struct.k_sem* @STARTRCV, [1 x i64] %24) #3, !dbg !6106
  call void @mailrecvtask() #3, !dbg !6107
  %26 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %10, i32 0, i32 0, !dbg !6108
  store i64 -1, i64* %26, align 8, !dbg !6108
  %27 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %10, i32 0, i32 0, !dbg !6109
  %28 = bitcast i64* %27 to [1 x i64]*, !dbg !6109
  %29 = load [1 x i64], [1 x i64]* %28, align 8, !dbg !6109
  %30 = call i32 @k_sem_take.203(%struct.k_sem* @STARTRCV, [1 x i64] %29) #3, !dbg !6109
  call void @piperecvtask() #3, !dbg !6110
  ret void, !dbg !6111
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sem_take.203(%struct.k_sem*, [1 x i64]) #0 !dbg !6112 {
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_sem*, align 4
  %5 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_sem* %0, %struct.k_sem** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %4, metadata !6143, metadata !DIExpression()), !dbg !6144
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %3, metadata !6145, metadata !DIExpression()), !dbg !6146
  br label %7, !dbg !6147

7:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6148, !srcloc !6150
  br label %8, !dbg !6148

8:                                                ; preds = %7
  %9 = load %struct.k_sem*, %struct.k_sem** %4, align 4, !dbg !6151
  %10 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !6152
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !6152
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !6152
  %13 = call i32 @z_impl_k_sem_take(%struct.k_sem* %9, [1 x i64] %12) #3, !dbg !6152
  ret i32 %13, !dbg !6153
}

; Function Attrs: noinline nounwind optnone
define dso_local void @sema_test() #0 !dbg !6154 {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6156, metadata !DIExpression()), !dbg !6157
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6158, metadata !DIExpression()), !dbg !6159
  %3 = load i32*, i32** @output_file, align 4, !dbg !6160
  %4 = call i32 @fputs(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.206, i32 0, i32 0), i32* %3) #3, !dbg !6160
  %5 = call i32 @BENCH_START.207() #3, !dbg !6161
  store i32 %5, i32* %1, align 4, !dbg !6162
  store i32 0, i32* %2, align 4, !dbg !6163
  br label %6, !dbg !6165

6:                                                ; preds = %10, %0
  %7 = load i32, i32* %2, align 4, !dbg !6166
  %8 = icmp slt i32 %7, 500, !dbg !6168
  br i1 %8, label %9, label %13, !dbg !6169

9:                                                ; preds = %6
  call void @k_sem_give.208(%struct.k_sem* @SEM0) #3, !dbg !6170
  br label %10, !dbg !6172

10:                                               ; preds = %9
  %11 = load i32, i32* %2, align 4, !dbg !6173
  %12 = add i32 %11, 1, !dbg !6173
  store i32 %12, i32* %2, align 4, !dbg !6173
  br label %6, !dbg !6174, !llvm.loop !6175

13:                                               ; preds = %6
  %14 = load i32, i32* %1, align 4, !dbg !6177
  %15 = call i32 @TIME_STAMP_DELTA_GET.209(i32 %14) #3, !dbg !6178
  store i32 %15, i32* %1, align 4, !dbg !6179
  call void @check_result.210() #3, !dbg !6180
  %16 = load i32, i32* %1, align 4, !dbg !6181
  %17 = zext i32 %16 to i64, !dbg !6181
  %18 = call i64 @k_cyc_to_ns_floor64.211(i64 %17) #3, !dbg !6181
  %19 = udiv i64 %18, 500, !dbg !6181
  %20 = trunc i64 %19 to i32, !dbg !6181
  %21 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.2.213, i32 0, i32 0), i32 %20) #3, !dbg !6181
  %22 = load i32*, i32** @output_file, align 4, !dbg !6181
  %23 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %22) #3, !dbg !6181
  call void @k_sem_reset.214(%struct.k_sem* @SEM1) #3, !dbg !6183
  call void @k_sem_give.208(%struct.k_sem* @STARTRCV) #3, !dbg !6184
  %24 = call i32 @BENCH_START.207() #3, !dbg !6185
  store i32 %24, i32* %1, align 4, !dbg !6186
  store i32 0, i32* %2, align 4, !dbg !6187
  br label %25, !dbg !6189

25:                                               ; preds = %29, %13
  %26 = load i32, i32* %2, align 4, !dbg !6190
  %27 = icmp slt i32 %26, 500, !dbg !6192
  br i1 %27, label %28, label %32, !dbg !6193

28:                                               ; preds = %25
  call void @k_sem_give.208(%struct.k_sem* @SEM1) #3, !dbg !6194
  br label %29, !dbg !6196

29:                                               ; preds = %28
  %30 = load i32, i32* %2, align 4, !dbg !6197
  %31 = add i32 %30, 1, !dbg !6197
  store i32 %31, i32* %2, align 4, !dbg !6197
  br label %25, !dbg !6198, !llvm.loop !6199

32:                                               ; preds = %25
  %33 = load i32, i32* %1, align 4, !dbg !6201
  %34 = call i32 @TIME_STAMP_DELTA_GET.209(i32 %33) #3, !dbg !6202
  store i32 %34, i32* %1, align 4, !dbg !6203
  call void @check_result.210() #3, !dbg !6204
  %35 = load i32, i32* %1, align 4, !dbg !6205
  %36 = zext i32 %35 to i64, !dbg !6205
  %37 = call i64 @k_cyc_to_ns_floor64.211(i64 %36) #3, !dbg !6205
  %38 = udiv i64 %37, 500, !dbg !6205
  %39 = trunc i64 %38 to i32, !dbg !6205
  %40 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.3.215, i32 0, i32 0), i32 %39) #3, !dbg !6205
  %41 = load i32*, i32** @output_file, align 4, !dbg !6205
  %42 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %41) #3, !dbg !6205
  %43 = call i32 @BENCH_START.207() #3, !dbg !6207
  store i32 %43, i32* %1, align 4, !dbg !6208
  store i32 0, i32* %2, align 4, !dbg !6209
  br label %44, !dbg !6211

44:                                               ; preds = %48, %32
  %45 = load i32, i32* %2, align 4, !dbg !6212
  %46 = icmp slt i32 %45, 500, !dbg !6214
  br i1 %46, label %47, label %51, !dbg !6215

47:                                               ; preds = %44
  call void @k_sem_give.208(%struct.k_sem* @SEM1) #3, !dbg !6216
  br label %48, !dbg !6218

48:                                               ; preds = %47
  %49 = load i32, i32* %2, align 4, !dbg !6219
  %50 = add i32 %49, 1, !dbg !6219
  store i32 %50, i32* %2, align 4, !dbg !6219
  br label %44, !dbg !6220, !llvm.loop !6221

51:                                               ; preds = %44
  %52 = load i32, i32* %1, align 4, !dbg !6223
  %53 = call i32 @TIME_STAMP_DELTA_GET.209(i32 %52) #3, !dbg !6224
  store i32 %53, i32* %1, align 4, !dbg !6225
  call void @check_result.210() #3, !dbg !6226
  %54 = load i32, i32* %1, align 4, !dbg !6227
  %55 = zext i32 %54 to i64, !dbg !6227
  %56 = call i64 @k_cyc_to_ns_floor64.211(i64 %55) #3, !dbg !6227
  %57 = udiv i64 %56, 500, !dbg !6227
  %58 = trunc i64 %57 to i32, !dbg !6227
  %59 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1.212, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.216, i32 0, i32 0), i32 %58) #3, !dbg !6227
  %60 = load i32*, i32** @output_file, align 4, !dbg !6227
  %61 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %60) #3, !dbg !6227
  ret void, !dbg !6229
}

; Function Attrs: noinline nounwind optnone
define internal i32 @BENCH_START.207() #0 !dbg !6230 {
  %1 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6231, metadata !DIExpression()), !dbg !6232
  call void @bench_test_start.229() #3, !dbg !6233
  %2 = call i32 @TIME_STAMP_DELTA_GET.209(i32 0) #3, !dbg !6234
  store i32 %2, i32* %1, align 4, !dbg !6235
  %3 = load i32, i32* %1, align 4, !dbg !6236
  ret i32 %3, !dbg !6237
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_give.208(%struct.k_sem*) #0 !dbg !6238 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !6265, metadata !DIExpression()), !dbg !6266
  br label %3, !dbg !6267

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6268, !srcloc !6270
  br label %4, !dbg !6268

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !6271
  call void @z_impl_k_sem_give(%struct.k_sem* %5) #3, !dbg !6272
  ret void, !dbg !6273
}

; Function Attrs: noinline nounwind optnone
define internal i32 @TIME_STAMP_DELTA_GET.209(i32) #0 !dbg !6274 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %0, i32* %2, align 4
  call void @llvm.dbg.declare(metadata i32* %2, metadata !6275, metadata !DIExpression()), !dbg !6276
  call void @llvm.dbg.declare(metadata i32* %3, metadata !6277, metadata !DIExpression()), !dbg !6278
  call void @timestamp_serialize.226() #3, !dbg !6279
  %5 = call i32 @k_cycle_get_32.227() #3, !dbg !6280
  store i32 %5, i32* %3, align 4, !dbg !6281
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6282, metadata !DIExpression()), !dbg !6283
  %6 = load i32, i32* %3, align 4, !dbg !6284
  %7 = load i32, i32* %2, align 4, !dbg !6285
  %8 = icmp uge i32 %6, %7, !dbg !6286
  br i1 %8, label %9, label %13, !dbg !6287

9:                                                ; preds = %1
  %10 = load i32, i32* %3, align 4, !dbg !6288
  %11 = load i32, i32* %2, align 4, !dbg !6289
  %12 = sub i32 %10, %11, !dbg !6290
  br label %18, !dbg !6287

13:                                               ; preds = %1
  %14 = load i32, i32* %2, align 4, !dbg !6291
  %15 = sub i32 -1, %14, !dbg !6292
  %16 = load i32, i32* %3, align 4, !dbg !6293
  %17 = add i32 %15, %16, !dbg !6294
  br label %18, !dbg !6287

18:                                               ; preds = %13, %9
  %19 = phi i32 [ %12, %9 ], [ %17, %13 ], !dbg !6287
  store i32 %19, i32* %4, align 4, !dbg !6283
  %20 = load i32, i32* %2, align 4, !dbg !6295
  %21 = icmp ugt i32 %20, 0, !dbg !6297
  br i1 %21, label %22, label %26, !dbg !6298

22:                                               ; preds = %18
  %23 = load i32, i32* @tm_off, align 4, !dbg !6299
  %24 = load i32, i32* %4, align 4, !dbg !6301
  %25 = sub i32 %24, %23, !dbg !6301
  store i32 %25, i32* %4, align 4, !dbg !6301
  br label %26, !dbg !6302

26:                                               ; preds = %22, %18
  %27 = load i32, i32* %4, align 4, !dbg !6303
  ret i32 %27, !dbg !6304
}

; Function Attrs: noinline nounwind optnone
define internal void @check_result.210() #0 !dbg !6305 {
  %1 = call i32 @bench_test_end.219() #3, !dbg !6306
  %2 = icmp slt i32 %1, 0, !dbg !6308
  br i1 %2, label %3, label %7, !dbg !6309

3:                                                ; preds = %0
  %4 = call i32 (i8*, i32, i8*, ...) @snprintf(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32 256, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.5.220, i32 0, i32 0), i32 187) #3, !dbg !6310
  %5 = load i32*, i32** @output_file, align 4, !dbg !6310
  %6 = call i32 @fputs(i8* getelementptr inbounds ([257 x i8], [257 x i8]* @sline, i32 0, i32 0), i32* %5) #3, !dbg !6310
  br label %7, !dbg !6313

7:                                                ; preds = %3, %0
  ret void, !dbg !6314
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_cyc_to_ns_floor64.211(i64) #0 !dbg !6315 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6316, metadata !DIExpression()), !dbg !6318
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6320, metadata !DIExpression()), !dbg !6321
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6322, metadata !DIExpression()), !dbg !6323
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6324, metadata !DIExpression()), !dbg !6325
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6326, metadata !DIExpression()), !dbg !6327
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !6328, metadata !DIExpression()), !dbg !6329
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6330, metadata !DIExpression()), !dbg !6331
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !6332, metadata !DIExpression()), !dbg !6333
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !6334, metadata !DIExpression()), !dbg !6335
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !6336, metadata !DIExpression()), !dbg !6337
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6338, metadata !DIExpression()), !dbg !6341
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6342, metadata !DIExpression()), !dbg !6343
  %15 = load i64, i64* %14, align 8, !dbg !6344
  %16 = call i32 @sys_clock_hw_cycles_per_sec.218() #3, !dbg !6345
  store i64 %15, i64* %3, align 8
  store i32 %16, i32* %4, align 4
  store i32 1000000000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %17 = load i8, i8* %6, align 1, !dbg !6346
  %18 = trunc i8 %17 to i1, !dbg !6346
  br i1 %18, label %19, label %28, !dbg !6347

19:                                               ; preds = %1
  %20 = load i32, i32* %5, align 4, !dbg !6348
  %21 = load i32, i32* %4, align 4, !dbg !6349
  %22 = icmp ugt i32 %20, %21, !dbg !6350
  br i1 %22, label %23, label %28, !dbg !6351

23:                                               ; preds = %19
  %24 = load i32, i32* %5, align 4, !dbg !6352
  %25 = load i32, i32* %4, align 4, !dbg !6353
  %26 = urem i32 %24, %25, !dbg !6354
  %27 = icmp eq i32 %26, 0, !dbg !6355
  br label %28

28:                                               ; preds = %23, %19, %1
  %29 = phi i1 [ false, %19 ], [ false, %1 ], [ %27, %23 ], !dbg !6356
  %30 = zext i1 %29 to i8, !dbg !6333
  store i8 %30, i8* %10, align 1, !dbg !6333
  %31 = load i8, i8* %6, align 1, !dbg !6357
  %32 = trunc i8 %31 to i1, !dbg !6357
  br i1 %32, label %33, label %42, !dbg !6358

33:                                               ; preds = %28
  %34 = load i32, i32* %4, align 4, !dbg !6359
  %35 = load i32, i32* %5, align 4, !dbg !6360
  %36 = icmp ugt i32 %34, %35, !dbg !6361
  br i1 %36, label %37, label %42, !dbg !6362

37:                                               ; preds = %33
  %38 = load i32, i32* %4, align 4, !dbg !6363
  %39 = load i32, i32* %5, align 4, !dbg !6364
  %40 = urem i32 %38, %39, !dbg !6365
  %41 = icmp eq i32 %40, 0, !dbg !6366
  br label %42

42:                                               ; preds = %37, %33, %28
  %43 = phi i1 [ false, %33 ], [ false, %28 ], [ %41, %37 ], !dbg !6356
  %44 = zext i1 %43 to i8, !dbg !6335
  store i8 %44, i8* %11, align 1, !dbg !6335
  %45 = load i32, i32* %4, align 4, !dbg !6367
  %46 = load i32, i32* %5, align 4, !dbg !6369
  %47 = icmp eq i32 %45, %46, !dbg !6370
  br i1 %47, label %48, label %59, !dbg !6371

48:                                               ; preds = %42
  %49 = load i8, i8* %7, align 1, !dbg !6372
  %50 = trunc i8 %49 to i1, !dbg !6372
  br i1 %50, label %51, label %55, !dbg !6372

51:                                               ; preds = %48
  %52 = load i64, i64* %3, align 8, !dbg !6374
  %53 = trunc i64 %52 to i32, !dbg !6375
  %54 = zext i32 %53 to i64, !dbg !6376
  br label %57, !dbg !6372

55:                                               ; preds = %48
  %56 = load i64, i64* %3, align 8, !dbg !6377
  br label %57, !dbg !6372

57:                                               ; preds = %55, %51
  %58 = phi i64 [ %54, %51 ], [ %56, %55 ], !dbg !6372
  store i64 %58, i64* %2, align 8, !dbg !6378
  br label %161, !dbg !6378

59:                                               ; preds = %42
  store i64 0, i64* %12, align 8, !dbg !6337
  %60 = load i8, i8* %10, align 1, !dbg !6379
  %61 = trunc i8 %60 to i1, !dbg !6379
  br i1 %61, label %88, label %62, !dbg !6380

62:                                               ; preds = %59
  %63 = load i8, i8* %11, align 1, !dbg !6381
  %64 = trunc i8 %63 to i1, !dbg !6381
  br i1 %64, label %65, label %69, !dbg !6381

65:                                               ; preds = %62
  %66 = load i32, i32* %4, align 4, !dbg !6382
  %67 = load i32, i32* %5, align 4, !dbg !6383
  %68 = udiv i32 %66, %67, !dbg !6384
  br label %71, !dbg !6381

69:                                               ; preds = %62
  %70 = load i32, i32* %4, align 4, !dbg !6385
  br label %71, !dbg !6381

71:                                               ; preds = %69, %65
  %72 = phi i32 [ %68, %65 ], [ %70, %69 ], !dbg !6381
  store i32 %72, i32* %13, align 4, !dbg !6341
  %73 = load i8, i8* %8, align 1, !dbg !6386
  %74 = trunc i8 %73 to i1, !dbg !6386
  br i1 %74, label %75, label %79, !dbg !6388

75:                                               ; preds = %71
  %76 = load i32, i32* %13, align 4, !dbg !6389
  %77 = sub i32 %76, 1, !dbg !6391
  %78 = zext i32 %77 to i64, !dbg !6389
  store i64 %78, i64* %12, align 8, !dbg !6392
  br label %87, !dbg !6393

79:                                               ; preds = %71
  %80 = load i8, i8* %9, align 1, !dbg !6394
  %81 = trunc i8 %80 to i1, !dbg !6394
  br i1 %81, label %82, label %86, !dbg !6396

82:                                               ; preds = %79
  %83 = load i32, i32* %13, align 4, !dbg !6397
  %84 = udiv i32 %83, 2, !dbg !6399
  %85 = zext i32 %84 to i64, !dbg !6397
  store i64 %85, i64* %12, align 8, !dbg !6400
  br label %86, !dbg !6401

86:                                               ; preds = %82, %79
  br label %87

87:                                               ; preds = %86, %75
  br label %88, !dbg !6402

88:                                               ; preds = %87, %59
  %89 = load i8, i8* %11, align 1, !dbg !6403
  %90 = trunc i8 %89 to i1, !dbg !6403
  br i1 %90, label %91, label %115, !dbg !6405

91:                                               ; preds = %88
  %92 = load i64, i64* %12, align 8, !dbg !6406
  %93 = load i64, i64* %3, align 8, !dbg !6408
  %94 = add i64 %93, %92, !dbg !6408
  store i64 %94, i64* %3, align 8, !dbg !6408
  %95 = load i8, i8* %7, align 1, !dbg !6409
  %96 = trunc i8 %95 to i1, !dbg !6409
  br i1 %96, label %97, label %108, !dbg !6411

97:                                               ; preds = %91
  %98 = load i64, i64* %3, align 8, !dbg !6412
  %99 = icmp ult i64 %98, 4294967296, !dbg !6413
  br i1 %99, label %100, label %108, !dbg !6414

100:                                              ; preds = %97
  %101 = load i64, i64* %3, align 8, !dbg !6415
  %102 = trunc i64 %101 to i32, !dbg !6417
  %103 = load i32, i32* %4, align 4, !dbg !6418
  %104 = load i32, i32* %5, align 4, !dbg !6419
  %105 = udiv i32 %103, %104, !dbg !6420
  %106 = udiv i32 %102, %105, !dbg !6421
  %107 = zext i32 %106 to i64, !dbg !6422
  store i64 %107, i64* %2, align 8, !dbg !6423
  br label %161, !dbg !6423

108:                                              ; preds = %97, %91
  %109 = load i64, i64* %3, align 8, !dbg !6424
  %110 = load i32, i32* %4, align 4, !dbg !6426
  %111 = load i32, i32* %5, align 4, !dbg !6427
  %112 = udiv i32 %110, %111, !dbg !6428
  %113 = zext i32 %112 to i64, !dbg !6429
  %114 = udiv i64 %109, %113, !dbg !6430
  store i64 %114, i64* %2, align 8, !dbg !6431
  br label %161, !dbg !6431

115:                                              ; preds = %88
  %116 = load i8, i8* %10, align 1, !dbg !6432
  %117 = trunc i8 %116 to i1, !dbg !6432
  br i1 %117, label %118, label %136, !dbg !6434

118:                                              ; preds = %115
  %119 = load i8, i8* %7, align 1, !dbg !6435
  %120 = trunc i8 %119 to i1, !dbg !6435
  br i1 %120, label %121, label %129, !dbg !6438

121:                                              ; preds = %118
  %122 = load i64, i64* %3, align 8, !dbg !6439
  %123 = trunc i64 %122 to i32, !dbg !6441
  %124 = load i32, i32* %5, align 4, !dbg !6442
  %125 = load i32, i32* %4, align 4, !dbg !6443
  %126 = udiv i32 %124, %125, !dbg !6444
  %127 = mul i32 %123, %126, !dbg !6445
  %128 = zext i32 %127 to i64, !dbg !6446
  store i64 %128, i64* %2, align 8, !dbg !6447
  br label %161, !dbg !6447

129:                                              ; preds = %118
  %130 = load i64, i64* %3, align 8, !dbg !6448
  %131 = load i32, i32* %5, align 4, !dbg !6450
  %132 = load i32, i32* %4, align 4, !dbg !6451
  %133 = udiv i32 %131, %132, !dbg !6452
  %134 = zext i32 %133 to i64, !dbg !6453
  %135 = mul i64 %130, %134, !dbg !6454
  store i64 %135, i64* %2, align 8, !dbg !6455
  br label %161, !dbg !6455

136:                                              ; preds = %115
  %137 = load i8, i8* %7, align 1, !dbg !6456
  %138 = trunc i8 %137 to i1, !dbg !6456
  br i1 %138, label %139, label %151, !dbg !6459

139:                                              ; preds = %136
  %140 = load i64, i64* %3, align 8, !dbg !6460
  %141 = load i32, i32* %5, align 4, !dbg !6462
  %142 = zext i32 %141 to i64, !dbg !6462
  %143 = mul i64 %140, %142, !dbg !6463
  %144 = load i64, i64* %12, align 8, !dbg !6464
  %145 = add i64 %143, %144, !dbg !6465
  %146 = load i32, i32* %4, align 4, !dbg !6466
  %147 = zext i32 %146 to i64, !dbg !6466
  %148 = udiv i64 %145, %147, !dbg !6467
  %149 = trunc i64 %148 to i32, !dbg !6468
  %150 = zext i32 %149 to i64, !dbg !6468
  store i64 %150, i64* %2, align 8, !dbg !6469
  br label %161, !dbg !6469

151:                                              ; preds = %136
  %152 = load i64, i64* %3, align 8, !dbg !6470
  %153 = load i32, i32* %5, align 4, !dbg !6472
  %154 = zext i32 %153 to i64, !dbg !6472
  %155 = mul i64 %152, %154, !dbg !6473
  %156 = load i64, i64* %12, align 8, !dbg !6474
  %157 = add i64 %155, %156, !dbg !6475
  %158 = load i32, i32* %4, align 4, !dbg !6476
  %159 = zext i32 %158 to i64, !dbg !6476
  %160 = udiv i64 %157, %159, !dbg !6477
  store i64 %160, i64* %2, align 8, !dbg !6478
  br label %161, !dbg !6478

161:                                              ; preds = %151, %139, %129, %121, %108, %100, %57
  %162 = load i64, i64* %2, align 8, !dbg !6479
  ret i64 %162, !dbg !6480
}

; Function Attrs: noinline nounwind optnone
define internal void @k_sem_reset.214(%struct.k_sem*) #0 !dbg !6481 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !6482, metadata !DIExpression()), !dbg !6483
  br label %3, !dbg !6484

3:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6485, !srcloc !6487
  br label %4, !dbg !6485

4:                                                ; preds = %3
  %5 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !6488
  call void @z_impl_k_sem_reset.217(%struct.k_sem* %5) #3, !dbg !6489
  ret void, !dbg !6490
}

; Function Attrs: noinline nounwind optnone
define internal void @z_impl_k_sem_reset.217(%struct.k_sem*) #0 !dbg !6491 {
  %2 = alloca %struct.k_sem*, align 4
  store %struct.k_sem* %0, %struct.k_sem** %2, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %2, metadata !6492, metadata !DIExpression()), !dbg !6493
  %3 = load %struct.k_sem*, %struct.k_sem** %2, align 4, !dbg !6494
  %4 = getelementptr inbounds %struct.k_sem, %struct.k_sem* %3, i32 0, i32 1, !dbg !6495
  store i32 0, i32* %4, align 4, !dbg !6496
  ret void, !dbg !6497
}

; Function Attrs: noinline nounwind optnone
define internal i32 @sys_clock_hw_cycles_per_sec.218() #0 !dbg !6498 {
  ret i32 72000000, !dbg !6499
}

; Function Attrs: noinline nounwind optnone
define internal i32 @bench_test_end.219() #0 !dbg !6500 {
  %1 = alloca i32, align 4
  %2 = call i64 @k_uptime_delta.222(i64* @timestamp_check.221) #3, !dbg !6501
  store i64 %2, i64* @timestamp_check.221, align 8, !dbg !6502
  %3 = load i64, i64* @timestamp_check.221, align 8, !dbg !6503
  %4 = icmp sge i64 %3, 1000, !dbg !6505
  br i1 %4, label %5, label %6, !dbg !6506

5:                                                ; preds = %0
  store i32 -1, i32* %1, align 4, !dbg !6507
  br label %7, !dbg !6507

6:                                                ; preds = %0
  store i32 0, i32* %1, align 4, !dbg !6509
  br label %7, !dbg !6509

7:                                                ; preds = %6, %5
  %8 = load i32, i32* %1, align 4, !dbg !6510
  ret i32 %8, !dbg !6510
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_delta.222(i64*) #0 !dbg !6511 {
  %2 = alloca i64*, align 4
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  store i64* %0, i64** %2, align 4
  call void @llvm.dbg.declare(metadata i64** %2, metadata !6512, metadata !DIExpression()), !dbg !6513
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6514, metadata !DIExpression()), !dbg !6515
  call void @llvm.dbg.declare(metadata i64* %4, metadata !6516, metadata !DIExpression()), !dbg !6517
  %5 = call i64 @k_uptime_get.223() #3, !dbg !6518
  store i64 %5, i64* %3, align 8, !dbg !6519
  %6 = load i64, i64* %3, align 8, !dbg !6520
  %7 = load i64*, i64** %2, align 4, !dbg !6521
  %8 = load i64, i64* %7, align 8, !dbg !6522
  %9 = sub i64 %6, %8, !dbg !6523
  store i64 %9, i64* %4, align 8, !dbg !6524
  %10 = load i64, i64* %3, align 8, !dbg !6525
  %11 = load i64*, i64** %2, align 4, !dbg !6526
  store i64 %10, i64* %11, align 8, !dbg !6527
  %12 = load i64, i64* %4, align 8, !dbg !6528
  ret i64 %12, !dbg !6529
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_get.223() #0 !dbg !6530 {
  %1 = call i64 @k_uptime_ticks.224() #3, !dbg !6531
  %2 = call i64 @k_ticks_to_ms_floor64.225(i64 %1) #3, !dbg !6532
  ret i64 %2, !dbg !6533
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_uptime_ticks.224() #0 !dbg !6534 {
  br label %1, !dbg !6535

1:                                                ; preds = %0
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6536, !srcloc !6538
  br label %2, !dbg !6536

2:                                                ; preds = %1
  %3 = call i64 bitcast (i64 (...)* @z_impl_k_uptime_ticks to i64 ()*)() #3, !dbg !6539
  ret i64 %3, !dbg !6540
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ticks_to_ms_floor64.225(i64) #0 !dbg !6541 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6316, metadata !DIExpression()), !dbg !6542
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6320, metadata !DIExpression()), !dbg !6544
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6322, metadata !DIExpression()), !dbg !6545
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6324, metadata !DIExpression()), !dbg !6546
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6326, metadata !DIExpression()), !dbg !6547
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !6328, metadata !DIExpression()), !dbg !6548
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6330, metadata !DIExpression()), !dbg !6549
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !6332, metadata !DIExpression()), !dbg !6550
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !6334, metadata !DIExpression()), !dbg !6551
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !6336, metadata !DIExpression()), !dbg !6552
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6338, metadata !DIExpression()), !dbg !6553
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6554, metadata !DIExpression()), !dbg !6555
  %15 = load i64, i64* %14, align 8, !dbg !6556
  store i64 %15, i64* %3, align 8
  store i32 2, i32* %4, align 4
  store i32 1000, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 0, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !6557
  %17 = trunc i8 %16 to i1, !dbg !6557
  br i1 %17, label %18, label %27, !dbg !6558

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !6559
  %20 = load i32, i32* %4, align 4, !dbg !6560
  %21 = icmp ugt i32 %19, %20, !dbg !6561
  br i1 %21, label %22, label %27, !dbg !6562

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !6563
  %24 = load i32, i32* %4, align 4, !dbg !6564
  %25 = urem i32 %23, %24, !dbg !6565
  %26 = icmp eq i32 %25, 0, !dbg !6566
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !6567
  %29 = zext i1 %28 to i8, !dbg !6550
  store i8 %29, i8* %10, align 1, !dbg !6550
  %30 = load i8, i8* %6, align 1, !dbg !6568
  %31 = trunc i8 %30 to i1, !dbg !6568
  br i1 %31, label %32, label %41, !dbg !6569

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !6570
  %34 = load i32, i32* %5, align 4, !dbg !6571
  %35 = icmp ugt i32 %33, %34, !dbg !6572
  br i1 %35, label %36, label %41, !dbg !6573

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !6574
  %38 = load i32, i32* %5, align 4, !dbg !6575
  %39 = urem i32 %37, %38, !dbg !6576
  %40 = icmp eq i32 %39, 0, !dbg !6577
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !6567
  %43 = zext i1 %42 to i8, !dbg !6551
  store i8 %43, i8* %11, align 1, !dbg !6551
  %44 = load i32, i32* %4, align 4, !dbg !6578
  %45 = load i32, i32* %5, align 4, !dbg !6579
  %46 = icmp eq i32 %44, %45, !dbg !6580
  br i1 %46, label %47, label %58, !dbg !6581

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !6582
  %49 = trunc i8 %48 to i1, !dbg !6582
  br i1 %49, label %50, label %54, !dbg !6582

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !6583
  %52 = trunc i64 %51 to i32, !dbg !6584
  %53 = zext i32 %52 to i64, !dbg !6585
  br label %56, !dbg !6582

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !6586
  br label %56, !dbg !6582

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !6582
  store i64 %57, i64* %2, align 8, !dbg !6587
  br label %160, !dbg !6587

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !6552
  %59 = load i8, i8* %10, align 1, !dbg !6588
  %60 = trunc i8 %59 to i1, !dbg !6588
  br i1 %60, label %87, label %61, !dbg !6589

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !6590
  %63 = trunc i8 %62 to i1, !dbg !6590
  br i1 %63, label %64, label %68, !dbg !6590

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !6591
  %66 = load i32, i32* %5, align 4, !dbg !6592
  %67 = udiv i32 %65, %66, !dbg !6593
  br label %70, !dbg !6590

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !6594
  br label %70, !dbg !6590

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !6590
  store i32 %71, i32* %13, align 4, !dbg !6553
  %72 = load i8, i8* %8, align 1, !dbg !6595
  %73 = trunc i8 %72 to i1, !dbg !6595
  br i1 %73, label %74, label %78, !dbg !6596

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !6597
  %76 = sub i32 %75, 1, !dbg !6598
  %77 = zext i32 %76 to i64, !dbg !6597
  store i64 %77, i64* %12, align 8, !dbg !6599
  br label %86, !dbg !6600

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !6601
  %80 = trunc i8 %79 to i1, !dbg !6601
  br i1 %80, label %81, label %85, !dbg !6602

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !6603
  %83 = udiv i32 %82, 2, !dbg !6604
  %84 = zext i32 %83 to i64, !dbg !6603
  store i64 %84, i64* %12, align 8, !dbg !6605
  br label %85, !dbg !6606

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !6607

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !6608
  %89 = trunc i8 %88 to i1, !dbg !6608
  br i1 %89, label %90, label %114, !dbg !6609

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !6610
  %92 = load i64, i64* %3, align 8, !dbg !6611
  %93 = add i64 %92, %91, !dbg !6611
  store i64 %93, i64* %3, align 8, !dbg !6611
  %94 = load i8, i8* %7, align 1, !dbg !6612
  %95 = trunc i8 %94 to i1, !dbg !6612
  br i1 %95, label %96, label %107, !dbg !6613

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !6614
  %98 = icmp ult i64 %97, 4294967296, !dbg !6615
  br i1 %98, label %99, label %107, !dbg !6616

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !6617
  %101 = trunc i64 %100 to i32, !dbg !6618
  %102 = load i32, i32* %4, align 4, !dbg !6619
  %103 = load i32, i32* %5, align 4, !dbg !6620
  %104 = udiv i32 %102, %103, !dbg !6621
  %105 = udiv i32 %101, %104, !dbg !6622
  %106 = zext i32 %105 to i64, !dbg !6623
  store i64 %106, i64* %2, align 8, !dbg !6624
  br label %160, !dbg !6624

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !6625
  %109 = load i32, i32* %4, align 4, !dbg !6626
  %110 = load i32, i32* %5, align 4, !dbg !6627
  %111 = udiv i32 %109, %110, !dbg !6628
  %112 = zext i32 %111 to i64, !dbg !6629
  %113 = udiv i64 %108, %112, !dbg !6630
  store i64 %113, i64* %2, align 8, !dbg !6631
  br label %160, !dbg !6631

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !6632
  %116 = trunc i8 %115 to i1, !dbg !6632
  br i1 %116, label %117, label %135, !dbg !6633

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !6634
  %119 = trunc i8 %118 to i1, !dbg !6634
  br i1 %119, label %120, label %128, !dbg !6635

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !6636
  %122 = trunc i64 %121 to i32, !dbg !6637
  %123 = load i32, i32* %5, align 4, !dbg !6638
  %124 = load i32, i32* %4, align 4, !dbg !6639
  %125 = udiv i32 %123, %124, !dbg !6640
  %126 = mul i32 %122, %125, !dbg !6641
  %127 = zext i32 %126 to i64, !dbg !6642
  store i64 %127, i64* %2, align 8, !dbg !6643
  br label %160, !dbg !6643

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !6644
  %130 = load i32, i32* %5, align 4, !dbg !6645
  %131 = load i32, i32* %4, align 4, !dbg !6646
  %132 = udiv i32 %130, %131, !dbg !6647
  %133 = zext i32 %132 to i64, !dbg !6648
  %134 = mul i64 %129, %133, !dbg !6649
  store i64 %134, i64* %2, align 8, !dbg !6650
  br label %160, !dbg !6650

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !6651
  %137 = trunc i8 %136 to i1, !dbg !6651
  br i1 %137, label %138, label %150, !dbg !6652

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !6653
  %140 = load i32, i32* %5, align 4, !dbg !6654
  %141 = zext i32 %140 to i64, !dbg !6654
  %142 = mul i64 %139, %141, !dbg !6655
  %143 = load i64, i64* %12, align 8, !dbg !6656
  %144 = add i64 %142, %143, !dbg !6657
  %145 = load i32, i32* %4, align 4, !dbg !6658
  %146 = zext i32 %145 to i64, !dbg !6658
  %147 = udiv i64 %144, %146, !dbg !6659
  %148 = trunc i64 %147 to i32, !dbg !6660
  %149 = zext i32 %148 to i64, !dbg !6660
  store i64 %149, i64* %2, align 8, !dbg !6661
  br label %160, !dbg !6661

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !6662
  %152 = load i32, i32* %5, align 4, !dbg !6663
  %153 = zext i32 %152 to i64, !dbg !6663
  %154 = mul i64 %151, %153, !dbg !6664
  %155 = load i64, i64* %12, align 8, !dbg !6665
  %156 = add i64 %154, %155, !dbg !6666
  %157 = load i32, i32* %4, align 4, !dbg !6667
  %158 = zext i32 %157 to i64, !dbg !6667
  %159 = udiv i64 %156, %158, !dbg !6668
  store i64 %159, i64* %2, align 8, !dbg !6669
  br label %160, !dbg !6669

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !6670
  ret i64 %161, !dbg !6671
}

; Function Attrs: noinline nounwind optnone
define internal void @timestamp_serialize.226() #0 !dbg !6672 {
  call void asm sideeffect "isb 0xF", "~{memory}"() #4, !dbg !6673, !srcloc !6676
  ret void, !dbg !6677
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_cycle_get_32.227() #0 !dbg !6678 {
  %1 = call i32 @arch_k_cycle_get_32.228() #3, !dbg !6679
  ret i32 %1, !dbg !6680
}

; Function Attrs: noinline nounwind optnone
define internal i32 @arch_k_cycle_get_32.228() #0 !dbg !6681 {
  %1 = call i32 @z_timer_cycle_get_32() #3, !dbg !6682
  ret i32 %1, !dbg !6683
}

; Function Attrs: noinline nounwind optnone
define internal void @bench_test_start.229() #0 !dbg !6684 {
  %1 = alloca %struct.k_timeout_t, align 8
  store i64 0, i64* @timestamp_check.221, align 8, !dbg !6685
  %2 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !6686
  store i64 1, i64* %2, align 8, !dbg !6686
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %1, i32 0, i32 0, !dbg !6686
  %4 = bitcast i64* %3 to [1 x i64]*, !dbg !6686
  %5 = load [1 x i64], [1 x i64]* %4, align 8, !dbg !6686
  %6 = call i32 @k_sleep.230([1 x i64] %5) #3, !dbg !6686
  %7 = call i64 @k_uptime_delta.222(i64* @timestamp_check.221) #3, !dbg !6687
  store i64 %7, i64* @timestamp_check.221, align 8, !dbg !6688
  ret void, !dbg !6689
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sleep.230([1 x i64]) #0 !dbg !6690 {
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0
  %4 = bitcast i64* %3 to [1 x i64]*
  store [1 x i64] %0, [1 x i64]* %4, align 8
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %2, metadata !6697, metadata !DIExpression()), !dbg !6698
  br label %5, !dbg !6699

5:                                                ; preds = %1
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6700, !srcloc !6702
  br label %6, !dbg !6700

6:                                                ; preds = %5
  %7 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !6703
  %8 = bitcast i64* %7 to [1 x i64]*, !dbg !6703
  %9 = load [1 x i64], [1 x i64]* %8, align 8, !dbg !6703
  %10 = call i32 @z_impl_k_sleep([1 x i64] %9) #3, !dbg !6703
  ret i32 %10, !dbg !6704
}

; Function Attrs: noinline nounwind optnone
define dso_local void @waittask() #0 !dbg !6705 {
  %1 = alloca i32, align 4
  %2 = alloca %struct.k_timeout_t, align 8
  %3 = alloca %struct.k_timeout_t, align 8
  call void @llvm.dbg.declare(metadata i32* %1, metadata !6707, metadata !DIExpression()), !dbg !6708
  store i32 0, i32* %1, align 4, !dbg !6709
  br label %4, !dbg !6711

4:                                                ; preds = %13, %0
  %5 = load i32, i32* %1, align 4, !dbg !6712
  %6 = icmp slt i32 %5, 500, !dbg !6714
  br i1 %6, label %7, label %16, !dbg !6715

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !6716
  store i64 -1, i64* %8, align 8, !dbg !6716
  %9 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %2, i32 0, i32 0, !dbg !6718
  %10 = bitcast i64* %9 to [1 x i64]*, !dbg !6718
  %11 = load [1 x i64], [1 x i64]* %10, align 8, !dbg !6718
  %12 = call i32 @k_sem_take.233(%struct.k_sem* @SEM1, [1 x i64] %11) #3, !dbg !6718
  br label %13, !dbg !6719

13:                                               ; preds = %7
  %14 = load i32, i32* %1, align 4, !dbg !6720
  %15 = add i32 %14, 1, !dbg !6720
  store i32 %15, i32* %1, align 4, !dbg !6720
  br label %4, !dbg !6721, !llvm.loop !6722

16:                                               ; preds = %4
  store i32 0, i32* %1, align 4, !dbg !6724
  br label %17, !dbg !6726

17:                                               ; preds = %27, %16
  %18 = load i32, i32* %1, align 4, !dbg !6727
  %19 = icmp slt i32 %18, 500, !dbg !6729
  br i1 %19, label %20, label %30, !dbg !6730

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !6731
  %22 = call i64 @k_ms_to_ticks_ceil64(i64 5000) #3, !dbg !6731
  store i64 %22, i64* %21, align 8, !dbg !6731
  %23 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !6733
  %24 = bitcast i64* %23 to [1 x i64]*, !dbg !6733
  %25 = load [1 x i64], [1 x i64]* %24, align 8, !dbg !6733
  %26 = call i32 @k_sem_take.233(%struct.k_sem* @SEM1, [1 x i64] %25) #3, !dbg !6733
  br label %27, !dbg !6734

27:                                               ; preds = %20
  %28 = load i32, i32* %1, align 4, !dbg !6735
  %29 = add i32 %28, 1, !dbg !6735
  store i32 %29, i32* %1, align 4, !dbg !6735
  br label %17, !dbg !6736, !llvm.loop !6737

30:                                               ; preds = %17
  ret void, !dbg !6739
}

; Function Attrs: noinline nounwind optnone
define internal i32 @k_sem_take.233(%struct.k_sem*, [1 x i64]) #0 !dbg !6740 {
  %3 = alloca %struct.k_timeout_t, align 8
  %4 = alloca %struct.k_sem*, align 4
  %5 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0
  %6 = bitcast i64* %5 to [1 x i64]*
  store [1 x i64] %1, [1 x i64]* %6, align 8
  store %struct.k_sem* %0, %struct.k_sem** %4, align 4
  call void @llvm.dbg.declare(metadata %struct.k_sem** %4, metadata !6771, metadata !DIExpression()), !dbg !6772
  call void @llvm.dbg.declare(metadata %struct.k_timeout_t* %3, metadata !6773, metadata !DIExpression()), !dbg !6774
  br label %7, !dbg !6775

7:                                                ; preds = %2
  call void asm sideeffect "", "~{memory}"() #4, !dbg !6776, !srcloc !6778
  br label %8, !dbg !6776

8:                                                ; preds = %7
  %9 = load %struct.k_sem*, %struct.k_sem** %4, align 4, !dbg !6779
  %10 = getelementptr inbounds %struct.k_timeout_t, %struct.k_timeout_t* %3, i32 0, i32 0, !dbg !6780
  %11 = bitcast i64* %10 to [1 x i64]*, !dbg !6780
  %12 = load [1 x i64], [1 x i64]* %11, align 8, !dbg !6780
  %13 = call i32 @z_impl_k_sem_take(%struct.k_sem* %9, [1 x i64] %12) #3, !dbg !6780
  ret i32 %13, !dbg !6781
}

; Function Attrs: noinline nounwind optnone
define internal i64 @k_ms_to_ticks_ceil64(i64) #0 !dbg !6782 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %3, metadata !6783, metadata !DIExpression()), !dbg !6785
  %4 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %4, metadata !6787, metadata !DIExpression()), !dbg !6788
  %5 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %5, metadata !6789, metadata !DIExpression()), !dbg !6790
  %6 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %6, metadata !6791, metadata !DIExpression()), !dbg !6792
  %7 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %7, metadata !6793, metadata !DIExpression()), !dbg !6794
  %8 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %8, metadata !6795, metadata !DIExpression()), !dbg !6796
  %9 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %9, metadata !6797, metadata !DIExpression()), !dbg !6798
  %10 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %10, metadata !6799, metadata !DIExpression()), !dbg !6800
  %11 = alloca i8, align 1
  call void @llvm.dbg.declare(metadata i8* %11, metadata !6801, metadata !DIExpression()), !dbg !6802
  %12 = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %12, metadata !6803, metadata !DIExpression()), !dbg !6804
  %13 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata i32* %13, metadata !6805, metadata !DIExpression()), !dbg !6808
  %14 = alloca i64, align 8
  store i64 %0, i64* %14, align 8
  call void @llvm.dbg.declare(metadata i64* %14, metadata !6809, metadata !DIExpression()), !dbg !6810
  %15 = load i64, i64* %14, align 8, !dbg !6811
  store i64 %15, i64* %3, align 8
  store i32 1000, i32* %4, align 4
  store i32 2, i32* %5, align 4
  store i8 1, i8* %6, align 1
  store i8 0, i8* %7, align 1
  store i8 1, i8* %8, align 1
  store i8 0, i8* %9, align 1
  %16 = load i8, i8* %6, align 1, !dbg !6812
  %17 = trunc i8 %16 to i1, !dbg !6812
  br i1 %17, label %18, label %27, !dbg !6813

18:                                               ; preds = %1
  %19 = load i32, i32* %5, align 4, !dbg !6814
  %20 = load i32, i32* %4, align 4, !dbg !6815
  %21 = icmp ugt i32 %19, %20, !dbg !6816
  br i1 %21, label %22, label %27, !dbg !6817

22:                                               ; preds = %18
  %23 = load i32, i32* %5, align 4, !dbg !6818
  %24 = load i32, i32* %4, align 4, !dbg !6819
  %25 = urem i32 %23, %24, !dbg !6820
  %26 = icmp eq i32 %25, 0, !dbg !6821
  br label %27

27:                                               ; preds = %22, %18, %1
  %28 = phi i1 [ false, %18 ], [ false, %1 ], [ %26, %22 ], !dbg !6822
  %29 = zext i1 %28 to i8, !dbg !6800
  store i8 %29, i8* %10, align 1, !dbg !6800
  %30 = load i8, i8* %6, align 1, !dbg !6823
  %31 = trunc i8 %30 to i1, !dbg !6823
  br i1 %31, label %32, label %41, !dbg !6824

32:                                               ; preds = %27
  %33 = load i32, i32* %4, align 4, !dbg !6825
  %34 = load i32, i32* %5, align 4, !dbg !6826
  %35 = icmp ugt i32 %33, %34, !dbg !6827
  br i1 %35, label %36, label %41, !dbg !6828

36:                                               ; preds = %32
  %37 = load i32, i32* %4, align 4, !dbg !6829
  %38 = load i32, i32* %5, align 4, !dbg !6830
  %39 = urem i32 %37, %38, !dbg !6831
  %40 = icmp eq i32 %39, 0, !dbg !6832
  br label %41

41:                                               ; preds = %36, %32, %27
  %42 = phi i1 [ false, %32 ], [ false, %27 ], [ %40, %36 ], !dbg !6822
  %43 = zext i1 %42 to i8, !dbg !6802
  store i8 %43, i8* %11, align 1, !dbg !6802
  %44 = load i32, i32* %4, align 4, !dbg !6833
  %45 = load i32, i32* %5, align 4, !dbg !6835
  %46 = icmp eq i32 %44, %45, !dbg !6836
  br i1 %46, label %47, label %58, !dbg !6837

47:                                               ; preds = %41
  %48 = load i8, i8* %7, align 1, !dbg !6838
  %49 = trunc i8 %48 to i1, !dbg !6838
  br i1 %49, label %50, label %54, !dbg !6838

50:                                               ; preds = %47
  %51 = load i64, i64* %3, align 8, !dbg !6840
  %52 = trunc i64 %51 to i32, !dbg !6841
  %53 = zext i32 %52 to i64, !dbg !6842
  br label %56, !dbg !6838

54:                                               ; preds = %47
  %55 = load i64, i64* %3, align 8, !dbg !6843
  br label %56, !dbg !6838

56:                                               ; preds = %54, %50
  %57 = phi i64 [ %53, %50 ], [ %55, %54 ], !dbg !6838
  store i64 %57, i64* %2, align 8, !dbg !6844
  br label %160, !dbg !6844

58:                                               ; preds = %41
  store i64 0, i64* %12, align 8, !dbg !6804
  %59 = load i8, i8* %10, align 1, !dbg !6845
  %60 = trunc i8 %59 to i1, !dbg !6845
  br i1 %60, label %87, label %61, !dbg !6846

61:                                               ; preds = %58
  %62 = load i8, i8* %11, align 1, !dbg !6847
  %63 = trunc i8 %62 to i1, !dbg !6847
  br i1 %63, label %64, label %68, !dbg !6847

64:                                               ; preds = %61
  %65 = load i32, i32* %4, align 4, !dbg !6848
  %66 = load i32, i32* %5, align 4, !dbg !6849
  %67 = udiv i32 %65, %66, !dbg !6850
  br label %70, !dbg !6847

68:                                               ; preds = %61
  %69 = load i32, i32* %4, align 4, !dbg !6851
  br label %70, !dbg !6847

70:                                               ; preds = %68, %64
  %71 = phi i32 [ %67, %64 ], [ %69, %68 ], !dbg !6847
  store i32 %71, i32* %13, align 4, !dbg !6808
  %72 = load i8, i8* %8, align 1, !dbg !6852
  %73 = trunc i8 %72 to i1, !dbg !6852
  br i1 %73, label %74, label %78, !dbg !6854

74:                                               ; preds = %70
  %75 = load i32, i32* %13, align 4, !dbg !6855
  %76 = sub i32 %75, 1, !dbg !6857
  %77 = zext i32 %76 to i64, !dbg !6855
  store i64 %77, i64* %12, align 8, !dbg !6858
  br label %86, !dbg !6859

78:                                               ; preds = %70
  %79 = load i8, i8* %9, align 1, !dbg !6860
  %80 = trunc i8 %79 to i1, !dbg !6860
  br i1 %80, label %81, label %85, !dbg !6862

81:                                               ; preds = %78
  %82 = load i32, i32* %13, align 4, !dbg !6863
  %83 = udiv i32 %82, 2, !dbg !6865
  %84 = zext i32 %83 to i64, !dbg !6863
  store i64 %84, i64* %12, align 8, !dbg !6866
  br label %85, !dbg !6867

85:                                               ; preds = %81, %78
  br label %86

86:                                               ; preds = %85, %74
  br label %87, !dbg !6868

87:                                               ; preds = %86, %58
  %88 = load i8, i8* %11, align 1, !dbg !6869
  %89 = trunc i8 %88 to i1, !dbg !6869
  br i1 %89, label %90, label %114, !dbg !6871

90:                                               ; preds = %87
  %91 = load i64, i64* %12, align 8, !dbg !6872
  %92 = load i64, i64* %3, align 8, !dbg !6874
  %93 = add i64 %92, %91, !dbg !6874
  store i64 %93, i64* %3, align 8, !dbg !6874
  %94 = load i8, i8* %7, align 1, !dbg !6875
  %95 = trunc i8 %94 to i1, !dbg !6875
  br i1 %95, label %96, label %107, !dbg !6877

96:                                               ; preds = %90
  %97 = load i64, i64* %3, align 8, !dbg !6878
  %98 = icmp ult i64 %97, 4294967296, !dbg !6879
  br i1 %98, label %99, label %107, !dbg !6880

99:                                               ; preds = %96
  %100 = load i64, i64* %3, align 8, !dbg !6881
  %101 = trunc i64 %100 to i32, !dbg !6883
  %102 = load i32, i32* %4, align 4, !dbg !6884
  %103 = load i32, i32* %5, align 4, !dbg !6885
  %104 = udiv i32 %102, %103, !dbg !6886
  %105 = udiv i32 %101, %104, !dbg !6887
  %106 = zext i32 %105 to i64, !dbg !6888
  store i64 %106, i64* %2, align 8, !dbg !6889
  br label %160, !dbg !6889

107:                                              ; preds = %96, %90
  %108 = load i64, i64* %3, align 8, !dbg !6890
  %109 = load i32, i32* %4, align 4, !dbg !6892
  %110 = load i32, i32* %5, align 4, !dbg !6893
  %111 = udiv i32 %109, %110, !dbg !6894
  %112 = zext i32 %111 to i64, !dbg !6895
  %113 = udiv i64 %108, %112, !dbg !6896
  store i64 %113, i64* %2, align 8, !dbg !6897
  br label %160, !dbg !6897

114:                                              ; preds = %87
  %115 = load i8, i8* %10, align 1, !dbg !6898
  %116 = trunc i8 %115 to i1, !dbg !6898
  br i1 %116, label %117, label %135, !dbg !6900

117:                                              ; preds = %114
  %118 = load i8, i8* %7, align 1, !dbg !6901
  %119 = trunc i8 %118 to i1, !dbg !6901
  br i1 %119, label %120, label %128, !dbg !6904

120:                                              ; preds = %117
  %121 = load i64, i64* %3, align 8, !dbg !6905
  %122 = trunc i64 %121 to i32, !dbg !6907
  %123 = load i32, i32* %5, align 4, !dbg !6908
  %124 = load i32, i32* %4, align 4, !dbg !6909
  %125 = udiv i32 %123, %124, !dbg !6910
  %126 = mul i32 %122, %125, !dbg !6911
  %127 = zext i32 %126 to i64, !dbg !6912
  store i64 %127, i64* %2, align 8, !dbg !6913
  br label %160, !dbg !6913

128:                                              ; preds = %117
  %129 = load i64, i64* %3, align 8, !dbg !6914
  %130 = load i32, i32* %5, align 4, !dbg !6916
  %131 = load i32, i32* %4, align 4, !dbg !6917
  %132 = udiv i32 %130, %131, !dbg !6918
  %133 = zext i32 %132 to i64, !dbg !6919
  %134 = mul i64 %129, %133, !dbg !6920
  store i64 %134, i64* %2, align 8, !dbg !6921
  br label %160, !dbg !6921

135:                                              ; preds = %114
  %136 = load i8, i8* %7, align 1, !dbg !6922
  %137 = trunc i8 %136 to i1, !dbg !6922
  br i1 %137, label %138, label %150, !dbg !6925

138:                                              ; preds = %135
  %139 = load i64, i64* %3, align 8, !dbg !6926
  %140 = load i32, i32* %5, align 4, !dbg !6928
  %141 = zext i32 %140 to i64, !dbg !6928
  %142 = mul i64 %139, %141, !dbg !6929
  %143 = load i64, i64* %12, align 8, !dbg !6930
  %144 = add i64 %142, %143, !dbg !6931
  %145 = load i32, i32* %4, align 4, !dbg !6932
  %146 = zext i32 %145 to i64, !dbg !6932
  %147 = udiv i64 %144, %146, !dbg !6933
  %148 = trunc i64 %147 to i32, !dbg !6934
  %149 = zext i32 %148 to i64, !dbg !6934
  store i64 %149, i64* %2, align 8, !dbg !6935
  br label %160, !dbg !6935

150:                                              ; preds = %135
  %151 = load i64, i64* %3, align 8, !dbg !6936
  %152 = load i32, i32* %5, align 4, !dbg !6938
  %153 = zext i32 %152 to i64, !dbg !6938
  %154 = mul i64 %151, %153, !dbg !6939
  %155 = load i64, i64* %12, align 8, !dbg !6940
  %156 = add i64 %154, %155, !dbg !6941
  %157 = load i32, i32* %4, align 4, !dbg !6942
  %158 = zext i32 %157 to i64, !dbg !6942
  %159 = udiv i64 %156, %158, !dbg !6943
  store i64 %159, i64* %2, align 8, !dbg !6944
  br label %160, !dbg !6944

160:                                              ; preds = %150, %138, %128, %120, %107, %99, %56
  %161 = load i64, i64* %2, align 8, !dbg !6945
  ret i64 %161, !dbg !6946
}

attributes #0 = { noinline nounwind optnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp2d16,-vfp2d16sp,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="true" }
attributes #1 = { nounwind readnone speculatable }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="cortex-m4" "target-features"="+armv7e-m,+dsp,+hwdiv,+soft-float,+strict-align,+thumb-mode,-aes,-crc,-crypto,-d32,-dotprod,-fp-armv8,-fp-armv8d16,-fp-armv8d16sp,-fp-armv8sp,-fp16,-fp16fml,-fp64,-fpregs,-fullfp16,-hwdiv-arm,-lob,-mve,-mve.fp,-neon,-ras,-sb,-sha2,-vfp2,-vfp2d16,-vfp2d16sp,-vfp2sp,-vfp3,-vfp3d16,-vfp3d16sp,-vfp3sp,-vfp4,-vfp4d16,-vfp4d16sp,-vfp4sp" "unsafe-fp-math"="false" "use-soft-float"="true" }
attributes #3 = { nobuiltin }
attributes #4 = { nounwind }

!llvm.dbg.cu = !{!2, !597, !66, !241, !246, !554, !559, !564, !569, !581, !586, !593, !599}
!llvm.ident = !{!602, !602, !602, !602, !602, !602, !602, !602, !602, !602, !602, !602, !602}
!llvm.module.flags = !{!603, !604, !605, !606}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !2, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !52, globals: !62, nameTableKind: None)
!3 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/fifo_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!4 = !{!5}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "k_objects", file: !6, line: 121, baseType: !7, size: 8, elements: !8)
!6 = !DIFile(filename: "zephyrproject/zephyr/include/kernel.h", directory: "/home/kenny")
!7 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51}
!9 = !DIEnumerator(name: "K_OBJ_ANY", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "K_OBJ_MEM_SLAB", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "K_OBJ_MSGQ", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "K_OBJ_MUTEX", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "K_OBJ_PIPE", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "K_OBJ_QUEUE", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "K_OBJ_POLL_SIGNAL", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "K_OBJ_SEM", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "K_OBJ_STACK", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "K_OBJ_THREAD", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "K_OBJ_TIMER", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "K_OBJ_THREAD_STACK_ELEMENT", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "K_OBJ_NET_SOCKET", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "K_OBJ_NET_IF", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "K_OBJ_SYS_MUTEX", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "K_OBJ_FUTEX", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "K_OBJ_DRIVER_PTP_CLOCK", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "K_OBJ_DRIVER_CRYPTO", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "K_OBJ_DRIVER_ADC", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "K_OBJ_DRIVER_CAN", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "K_OBJ_DRIVER_COUNTER", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "K_OBJ_DRIVER_DAC", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "K_OBJ_DRIVER_DMA", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "K_OBJ_DRIVER_EC_HOST_CMD_PERIPH_API", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "K_OBJ_DRIVER_EEPROM", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "K_OBJ_DRIVER_ENTROPY", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "K_OBJ_DRIVER_ESPI", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "K_OBJ_DRIVER_FLASH", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "K_OBJ_DRIVER_GPIO", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "K_OBJ_DRIVER_I2C", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "K_OBJ_DRIVER_I2S", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "K_OBJ_DRIVER_IPM", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "K_OBJ_DRIVER_KSCAN", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "K_OBJ_DRIVER_LED", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "K_OBJ_DRIVER_PINMUX", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "K_OBJ_DRIVER_PS2", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "K_OBJ_DRIVER_PWM", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "K_OBJ_DRIVER_SENSOR", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "K_OBJ_DRIVER_SPI", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "K_OBJ_DRIVER_UART", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "K_OBJ_DRIVER_WDT", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "K_OBJ_DRIVER_UART_MUX", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "K_OBJ_LAST", value: 42, isUnsigned: true)
!52 = !{!53, !58, !60, !61}
!53 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_ticks_t", file: !54, line: 46, baseType: !55)
!54 = !DIFile(filename: "zephyrproject/zephyr/include/sys_clock.h", directory: "/home/kenny")
!55 = !DIDerivedType(tag: DW_TAG_typedef, name: "int64_t", file: !56, line: 43, baseType: !57)
!56 = !DIFile(filename: "zephyrproject/zephyr/lib/libc/minimal/include/stdint.h", directory: "/home/kenny")
!57 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!58 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint32_t", file: !56, line: 57, baseType: !59)
!59 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!60 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 32)
!61 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!62 = !{!0}
!63 = !DIFile(filename: "zephyrproject/zephyr/subsys/testsuite/include/timestamp.h", directory: "/home/kenny")
!64 = !DIGlobalVariableExpression(var: !65, expr: !DIExpression())
!65 = distinct !DIGlobalVariable(name: "message", scope: !66, file: !74, line: 13, type: !75, isLocal: true, isDefinition: true)
!66 = distinct !DICompileUnit(language: DW_LANG_C99, file: !67, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !68, globals: !71, nameTableKind: None)
!67 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/mailbox_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!68 = !{!53, !58, !69, !60, !61}
!69 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !56, line: 58, baseType: !70)
!70 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!71 = !{!64, !72}
!72 = !DIGlobalVariableExpression(var: !73, expr: !DIExpression())
!73 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !66, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!74 = !DIFile(filename: "appl/Zephyr/app_kernel/src/mailbox_b.c", directory: "/home/kenny/ara")
!75 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mbox_msg", file: !6, line: 4124, size: 352, elements: !76)
!76 = !{!77, !78, !81, !82, !83, !84, !136, !230, !231, !232}
!77 = !DIDerivedType(tag: DW_TAG_member, name: "_mailbox", scope: !75, file: !6, line: 4126, baseType: !58, size: 32)
!78 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !75, file: !6, line: 4128, baseType: !79, size: 32, offset: 32)
!79 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !80, line: 46, baseType: !59)
!80 = !DIFile(filename: "/usr/lib/llvm-9/lib/clang/9.0.1/include/stddef.h", directory: "")
!81 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !75, file: !6, line: 4130, baseType: !58, size: 32, offset: 64)
!82 = !DIDerivedType(tag: DW_TAG_member, name: "tx_data", scope: !75, file: !6, line: 4132, baseType: !60, size: 32, offset: 96)
!83 = !DIDerivedType(tag: DW_TAG_member, name: "_rx_data", scope: !75, file: !6, line: 4134, baseType: !60, size: 32, offset: 128)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "tx_block", scope: !75, file: !6, line: 4136, baseType: !85, size: 64, offset: 160)
!85 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_block", file: !86, line: 23, size: 64, elements: !87)
!86 = !DIFile(filename: "zephyrproject/zephyr/include/mempool_heap.h", directory: "/home/kenny")
!87 = !{!88}
!88 = !DIDerivedType(tag: DW_TAG_member, scope: !85, file: !86, line: 24, baseType: !89, size: 64)
!89 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !85, file: !86, line: 24, size: 64, elements: !90)
!90 = !{!91, !92}
!91 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !89, file: !86, line: 25, baseType: !60, size: 32)
!92 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !89, file: !86, line: 26, baseType: !93, size: 64)
!93 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_block_id", file: !86, line: 15, size: 64, elements: !94)
!94 = !{!95, !96}
!95 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !93, file: !86, line: 16, baseType: !60, size: 32)
!96 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !93, file: !86, line: 17, baseType: !97, size: 32, offset: 32)
!97 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !98, size: 32)
!98 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !99, line: 267, size: 192, elements: !100)
!99 = !DIFile(filename: "zephyrproject/zephyr/include/kernel_structs.h", directory: "/home/kenny")
!100 = !{!101, !110, !130}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !98, file: !99, line: 268, baseType: !102, size: 96)
!102 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !103, line: 51, size: 96, elements: !104)
!103 = !DIFile(filename: "zephyrproject/zephyr/include/sys/sys_heap.h", directory: "/home/kenny")
!104 = !{!105, !108, !109}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !102, file: !103, line: 52, baseType: !106, size: 32)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !107, size: 32)
!107 = !DICompositeType(tag: DW_TAG_structure_type, name: "z_heap", file: !103, line: 52, flags: DIFlagFwdDecl)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !102, file: !103, line: 53, baseType: !60, size: 32, offset: 32)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !102, file: !103, line: 54, baseType: !79, size: 32, offset: 64)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !98, file: !99, line: 269, baseType: !111, size: 64, offset: 96)
!111 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !112)
!112 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !113)
!113 = !{!114}
!114 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !112, file: !99, line: 209, baseType: !115, size: 64)
!115 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !117)
!116 = !DIFile(filename: "zephyrproject/zephyr/include/sys/dlist.h", directory: "/home/kenny")
!117 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !118)
!118 = !{!119, !125}
!119 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !116, line: 32, baseType: !120, size: 32)
!120 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !116, line: 32, size: 32, elements: !121)
!121 = !{!122, !124}
!122 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !120, file: !116, line: 33, baseType: !123, size: 32)
!123 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !117, size: 32)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !120, file: !116, line: 34, baseType: !123, size: 32)
!125 = !DIDerivedType(tag: DW_TAG_member, scope: !117, file: !116, line: 36, baseType: !126, size: 32, offset: 32)
!126 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !117, file: !116, line: 36, size: 32, elements: !127)
!127 = !{!128, !129}
!128 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !126, file: !116, line: 37, baseType: !123, size: 32)
!129 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !126, file: !116, line: 38, baseType: !123, size: 32)
!130 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !98, file: !99, line: 270, baseType: !131, size: 32, offset: 160)
!131 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !132)
!132 = !{!133}
!133 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !131, file: !99, line: 243, baseType: !134, size: 32)
!134 = !DIDerivedType(tag: DW_TAG_typedef, name: "uintptr_t", file: !56, line: 71, baseType: !135)
!135 = !DIBasicType(name: "long unsigned int", size: 32, encoding: DW_ATE_unsigned)
!136 = !DIDerivedType(tag: DW_TAG_member, name: "rx_source_thread", scope: !75, file: !6, line: 4138, baseType: !137, size: 32, offset: 224)
!137 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !6, line: 648, baseType: !138)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 32)
!139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !6, line: 570, size: 1280, elements: !140)
!140 = !{!141, !190, !203, !204, !208, !213, !214, !220, !225}
!141 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !139, file: !6, line: 572, baseType: !142, size: 448)
!142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !6, line: 441, size: 448, elements: !143)
!143 = !{!144, !158, !160, !162, !163, !176, !177, !178, !189}
!144 = !DIDerivedType(tag: DW_TAG_member, scope: !142, file: !6, line: 444, baseType: !145, size: 64)
!145 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !142, file: !6, line: 444, size: 64, elements: !146)
!146 = !{!147, !149}
!147 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !145, file: !6, line: 445, baseType: !148, size: 64)
!148 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !116, line: 43, baseType: !117)
!149 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !145, file: !6, line: 446, baseType: !150, size: 64)
!150 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !151, line: 48, size: 64, elements: !152)
!151 = !DIFile(filename: "zephyrproject/zephyr/include/sys/rb.h", directory: "/home/kenny")
!152 = !{!153}
!153 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !150, file: !151, line: 49, baseType: !154, size: 64)
!154 = !DICompositeType(tag: DW_TAG_array_type, baseType: !155, size: 64, elements: !156)
!155 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !150, size: 32)
!156 = !{!157}
!157 = !DISubrange(count: 2)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !142, file: !6, line: 452, baseType: !159, size: 32, offset: 64)
!159 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !111, size: 32)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !142, file: !6, line: 455, baseType: !161, size: 8, offset: 96)
!161 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint8_t", file: !56, line: 55, baseType: !7)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !142, file: !6, line: 458, baseType: !161, size: 8, offset: 104)
!163 = !DIDerivedType(tag: DW_TAG_member, scope: !142, file: !6, line: 474, baseType: !164, size: 16, offset: 112)
!164 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !142, file: !6, line: 474, size: 16, elements: !165)
!165 = !{!166, !173}
!166 = !DIDerivedType(tag: DW_TAG_member, scope: !164, file: !6, line: 475, baseType: !167, size: 16)
!167 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !164, file: !6, line: 475, size: 16, elements: !168)
!168 = !{!169, !172}
!169 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !167, file: !6, line: 480, baseType: !170, size: 8)
!170 = !DIDerivedType(tag: DW_TAG_typedef, name: "int8_t", file: !56, line: 40, baseType: !171)
!171 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !167, file: !6, line: 481, baseType: !161, size: 8, offset: 8)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !164, file: !6, line: 484, baseType: !174, size: 16)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint16_t", file: !56, line: 56, baseType: !175)
!175 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !142, file: !6, line: 491, baseType: !58, size: 32, offset: 128)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !142, file: !6, line: 511, baseType: !60, size: 32, offset: 160)
!178 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !142, file: !6, line: 515, baseType: !179, size: 192, offset: 192)
!179 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !99, line: 221, size: 192, elements: !180)
!180 = !{!181, !182, !188}
!181 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !179, file: !99, line: 222, baseType: !148, size: 64)
!182 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !179, file: !99, line: 223, baseType: !183, size: 32, offset: 64)
!183 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !99, line: 219, baseType: !184)
!184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !185, size: 32)
!185 = !DISubroutineType(types: !186)
!186 = !{null, !187}
!187 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !179, size: 32)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !179, file: !99, line: 226, baseType: !55, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "join_waiters", scope: !142, file: !6, line: 518, baseType: !111, size: 64, offset: 384)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !139, file: !6, line: 575, baseType: !191, size: 288, offset: 448)
!191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !192, line: 25, size: 288, elements: !193)
!192 = !DIFile(filename: "zephyrproject/zephyr/include/arch/arm/aarch32/thread.h", directory: "/home/kenny")
!193 = !{!194, !195, !196, !197, !198, !199, !200, !201, !202}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !191, file: !192, line: 26, baseType: !58, size: 32)
!195 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !191, file: !192, line: 27, baseType: !58, size: 32, offset: 32)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !191, file: !192, line: 28, baseType: !58, size: 32, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !191, file: !192, line: 29, baseType: !58, size: 32, offset: 96)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !191, file: !192, line: 30, baseType: !58, size: 32, offset: 128)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !191, file: !192, line: 31, baseType: !58, size: 32, offset: 160)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !191, file: !192, line: 32, baseType: !58, size: 32, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !191, file: !192, line: 33, baseType: !58, size: 32, offset: 224)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !191, file: !192, line: 34, baseType: !58, size: 32, offset: 256)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !139, file: !6, line: 578, baseType: !60, size: 32, offset: 736)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "fn_abort", scope: !139, file: !6, line: 583, baseType: !205, size: 32, offset: 768)
!205 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !206, size: 32)
!206 = !DISubroutineType(types: !207)
!207 = !{null}
!208 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !139, file: !6, line: 595, baseType: !209, size: 256, offset: 800)
!209 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 256, elements: !211)
!210 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!211 = !{!212}
!212 = !DISubrange(count: 32)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !139, file: !6, line: 610, baseType: !61, size: 32, offset: 1056)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !139, file: !6, line: 616, baseType: !215, size: 96, offset: 1088)
!215 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !6, line: 525, size: 96, elements: !216)
!216 = !{!217, !218, !219}
!217 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !215, file: !6, line: 529, baseType: !134, size: 32)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !215, file: !6, line: 538, baseType: !79, size: 32, offset: 32)
!219 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !215, file: !6, line: 544, baseType: !79, size: 32, offset: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !139, file: !6, line: 641, baseType: !221, size: 32, offset: 1184)
!221 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !222, size: 32)
!222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_pool", file: !86, line: 30, size: 32, elements: !223)
!223 = !{!224}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !222, file: !86, line: 31, baseType: !97, size: 32)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !139, file: !6, line: 644, baseType: !226, size: 64, offset: 1216)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !192, line: 60, size: 64, elements: !227)
!227 = !{!228, !229}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !226, file: !192, line: 63, baseType: !58, size: 32)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !226, file: !192, line: 66, baseType: !58, size: 32, offset: 32)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "tx_target_thread", scope: !75, file: !6, line: 4140, baseType: !137, size: 32, offset: 256)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "_syncing_thread", scope: !75, file: !6, line: 4142, baseType: !137, size: 32, offset: 288)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "_async_sem", scope: !75, file: !6, line: 4145, baseType: !233, size: 32, offset: 320)
!233 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !234, size: 32)
!234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !235)
!235 = !{!236, !237, !238}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !234, file: !6, line: 3705, baseType: !111, size: 64)
!237 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !234, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!238 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !234, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!239 = !DIGlobalVariableExpression(var: !240, expr: !DIExpression())
!240 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !241, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!241 = distinct !DICompileUnit(language: DW_LANG_C99, file: !242, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !52, globals: !243, nameTableKind: None)
!242 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/mailbox_r.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!243 = !{!239}
!244 = !DIGlobalVariableExpression(var: !245, expr: !DIExpression())
!245 = distinct !DIGlobalVariable(name: "PIPE_NOBUFF", scope: !246, file: !255, line: 60, type: !258, isLocal: false, isDefinition: true, align: 32)
!246 = distinct !DICompileUnit(language: DW_LANG_C99, file: !247, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !248, globals: !252, nameTableKind: None)
!247 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/master.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!248 = !{!249, !60, !61}
!249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !250, size: 32)
!250 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !251, line: 23, baseType: !61)
!251 = !DIFile(filename: "zephyrproject/zephyr/lib/libc/minimal/include/stdio.h", directory: "/home/kenny")
!252 = !{!253, !296, !300, !416, !420, !435, !437, !439, !441, !451, !458, !460, !462, !464, !466, !468, !475, !244, !483, !485, !487, !489, !491, !496, !501, !506, !508, !510, !515, !517, !522, !527, !532, !534, !536, !541, !544, !547}
!253 = !DIGlobalVariableExpression(var: !254, expr: !DIExpression())
!254 = distinct !DIGlobalVariable(name: "test_pipes", scope: !246, file: !255, line: 24, type: !256, isLocal: false, isDefinition: true)
!255 = !DIFile(filename: "appl/Zephyr/app_kernel/src/master.c", directory: "/home/kenny/ara")
!256 = !DICompositeType(tag: DW_TAG_array_type, baseType: !257, size: 96, elements: !294)
!257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !258, size: 32)
!258 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_pipe", file: !6, line: 4324, size: 352, elements: !259)
!259 = !{!260, !262, !263, !264, !265, !266, !270, !293}
!260 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !258, file: !6, line: 4325, baseType: !261, size: 32)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 32)
!262 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !258, file: !6, line: 4326, baseType: !79, size: 32, offset: 32)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_used", scope: !258, file: !6, line: 4327, baseType: !79, size: 32, offset: 64)
!264 = !DIDerivedType(tag: DW_TAG_member, name: "read_index", scope: !258, file: !6, line: 4328, baseType: !79, size: 32, offset: 96)
!265 = !DIDerivedType(tag: DW_TAG_member, name: "write_index", scope: !258, file: !6, line: 4329, baseType: !79, size: 32, offset: 128)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !258, file: !6, line: 4330, baseType: !267, size: 32, offset: 160)
!267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !268)
!268 = !{!269}
!269 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !267, file: !99, line: 243, baseType: !134, size: 32)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !258, file: !6, line: 4335, baseType: !271, size: 128, offset: 192)
!271 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !258, file: !6, line: 4332, size: 128, elements: !272)
!272 = !{!273, !292}
!273 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !271, file: !6, line: 4333, baseType: !274, size: 64)
!274 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !275)
!275 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !276)
!276 = !{!277}
!277 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !275, file: !99, line: 209, baseType: !278, size: 64)
!278 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !279)
!279 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !280)
!280 = !{!281, !287}
!281 = !DIDerivedType(tag: DW_TAG_member, scope: !279, file: !116, line: 32, baseType: !282, size: 32)
!282 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !279, file: !116, line: 32, size: 32, elements: !283)
!283 = !{!284, !286}
!284 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !282, file: !116, line: 33, baseType: !285, size: 32)
!285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !279, size: 32)
!286 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !282, file: !116, line: 34, baseType: !285, size: 32)
!287 = !DIDerivedType(tag: DW_TAG_member, scope: !279, file: !116, line: 36, baseType: !288, size: 32, offset: 32)
!288 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !279, file: !116, line: 36, size: 32, elements: !289)
!289 = !{!290, !291}
!290 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !288, file: !116, line: 37, baseType: !285, size: 32)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !288, file: !116, line: 38, baseType: !285, size: 32)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !271, file: !6, line: 4334, baseType: !274, size: 64, offset: 64)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !258, file: !6, line: 4339, baseType: !161, size: 8, offset: 320)
!294 = !{!295}
!295 = !DISubrange(count: 3)
!296 = !DIGlobalVariableExpression(var: !297, expr: !DIExpression())
!297 = distinct !DIGlobalVariable(name: "newline", scope: !246, file: !255, line: 27, type: !298, isLocal: false, isDefinition: true)
!298 = !DICompositeType(tag: DW_TAG_array_type, baseType: !299, size: 16, elements: !156)
!299 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !210)
!300 = !DIGlobalVariableExpression(var: !301, expr: !DIExpression())
!301 = distinct !DIGlobalVariable(name: "_k_thread_data_RECVTASK", scope: !246, file: !255, line: 40, type: !302, isLocal: false, isDefinition: true, align: 32)
!302 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_static_thread_data", file: !6, line: 1099, size: 384, elements: !303)
!303 = !{!304, !392, !400, !401, !406, !407, !408, !409, !410, !411, !413, !414}
!304 = !DIDerivedType(tag: DW_TAG_member, name: "init_thread", scope: !302, file: !6, line: 1100, baseType: !305, size: 32)
!305 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !306, size: 32)
!306 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !6, line: 570, size: 1280, elements: !307)
!307 = !{!308, !349, !361, !362, !363, !364, !365, !371, !387}
!308 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !306, file: !6, line: 572, baseType: !309, size: 448)
!309 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !6, line: 441, size: 448, elements: !310)
!310 = !{!311, !322, !324, !325, !326, !335, !336, !337, !348}
!311 = !DIDerivedType(tag: DW_TAG_member, scope: !309, file: !6, line: 444, baseType: !312, size: 64)
!312 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !309, file: !6, line: 444, size: 64, elements: !313)
!313 = !{!314, !316}
!314 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !312, file: !6, line: 445, baseType: !315, size: 64)
!315 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !116, line: 43, baseType: !279)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !312, file: !6, line: 446, baseType: !317, size: 64)
!317 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !151, line: 48, size: 64, elements: !318)
!318 = !{!319}
!319 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !317, file: !151, line: 49, baseType: !320, size: 64)
!320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !321, size: 64, elements: !156)
!321 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 32)
!322 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !309, file: !6, line: 452, baseType: !323, size: 32, offset: 64)
!323 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !274, size: 32)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !309, file: !6, line: 455, baseType: !161, size: 8, offset: 96)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !309, file: !6, line: 458, baseType: !161, size: 8, offset: 104)
!326 = !DIDerivedType(tag: DW_TAG_member, scope: !309, file: !6, line: 474, baseType: !327, size: 16, offset: 112)
!327 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !309, file: !6, line: 474, size: 16, elements: !328)
!328 = !{!329, !334}
!329 = !DIDerivedType(tag: DW_TAG_member, scope: !327, file: !6, line: 475, baseType: !330, size: 16)
!330 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !327, file: !6, line: 475, size: 16, elements: !331)
!331 = !{!332, !333}
!332 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !330, file: !6, line: 480, baseType: !170, size: 8)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !330, file: !6, line: 481, baseType: !161, size: 8, offset: 8)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !327, file: !6, line: 484, baseType: !174, size: 16)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !309, file: !6, line: 491, baseType: !58, size: 32, offset: 128)
!336 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !309, file: !6, line: 511, baseType: !60, size: 32, offset: 160)
!337 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !309, file: !6, line: 515, baseType: !338, size: 192, offset: 192)
!338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !99, line: 221, size: 192, elements: !339)
!339 = !{!340, !341, !347}
!340 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !338, file: !99, line: 222, baseType: !315, size: 64)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !338, file: !99, line: 223, baseType: !342, size: 32, offset: 64)
!342 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !99, line: 219, baseType: !343)
!343 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !344, size: 32)
!344 = !DISubroutineType(types: !345)
!345 = !{null, !346}
!346 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !338, size: 32)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !338, file: !99, line: 226, baseType: !55, size: 64, offset: 128)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "join_waiters", scope: !309, file: !6, line: 518, baseType: !274, size: 64, offset: 384)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !306, file: !6, line: 575, baseType: !350, size: 288, offset: 448)
!350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !192, line: 25, size: 288, elements: !351)
!351 = !{!352, !353, !354, !355, !356, !357, !358, !359, !360}
!352 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !350, file: !192, line: 26, baseType: !58, size: 32)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !350, file: !192, line: 27, baseType: !58, size: 32, offset: 32)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !350, file: !192, line: 28, baseType: !58, size: 32, offset: 64)
!355 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !350, file: !192, line: 29, baseType: !58, size: 32, offset: 96)
!356 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !350, file: !192, line: 30, baseType: !58, size: 32, offset: 128)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !350, file: !192, line: 31, baseType: !58, size: 32, offset: 160)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !350, file: !192, line: 32, baseType: !58, size: 32, offset: 192)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !350, file: !192, line: 33, baseType: !58, size: 32, offset: 224)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !350, file: !192, line: 34, baseType: !58, size: 32, offset: 256)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !306, file: !6, line: 578, baseType: !60, size: 32, offset: 736)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "fn_abort", scope: !306, file: !6, line: 583, baseType: !205, size: 32, offset: 768)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !306, file: !6, line: 595, baseType: !209, size: 256, offset: 800)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !306, file: !6, line: 610, baseType: !61, size: 32, offset: 1056)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !306, file: !6, line: 616, baseType: !366, size: 96, offset: 1088)
!366 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !6, line: 525, size: 96, elements: !367)
!367 = !{!368, !369, !370}
!368 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !366, file: !6, line: 529, baseType: !134, size: 32)
!369 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !366, file: !6, line: 538, baseType: !79, size: 32, offset: 32)
!370 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !366, file: !6, line: 544, baseType: !79, size: 32, offset: 64)
!371 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !306, file: !6, line: 641, baseType: !372, size: 32, offset: 1184)
!372 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !373, size: 32)
!373 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_pool", file: !86, line: 30, size: 32, elements: !374)
!374 = !{!375}
!375 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !373, file: !86, line: 31, baseType: !376, size: 32)
!376 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !377, size: 32)
!377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !99, line: 267, size: 192, elements: !378)
!378 = !{!379, !385, !386}
!379 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !377, file: !99, line: 268, baseType: !380, size: 96)
!380 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !103, line: 51, size: 96, elements: !381)
!381 = !{!382, !383, !384}
!382 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !380, file: !103, line: 52, baseType: !106, size: 32)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !380, file: !103, line: 53, baseType: !60, size: 32, offset: 32)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !380, file: !103, line: 54, baseType: !79, size: 32, offset: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !377, file: !99, line: 269, baseType: !274, size: 64, offset: 96)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !377, file: !99, line: 270, baseType: !267, size: 32, offset: 160)
!387 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !306, file: !6, line: 644, baseType: !388, size: 64, offset: 1216)
!388 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !192, line: 60, size: 64, elements: !389)
!389 = !{!390, !391}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !388, file: !192, line: 63, baseType: !58, size: 32)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !388, file: !192, line: 66, baseType: !58, size: 32, offset: 32)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack", scope: !302, file: !6, line: 1101, baseType: !393, size: 32, offset: 32)
!393 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !394, size: 32)
!394 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_stack_t", file: !395, line: 44, baseType: !396)
!395 = !DIFile(filename: "zephyrproject/zephyr/include/sys/arch_interface.h", directory: "/home/kenny")
!396 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "z_thread_stack_element", file: !397, line: 35, size: 8, elements: !398)
!397 = !DIFile(filename: "zephyrproject/zephyr/include/sys/thread_stack.h", directory: "/home/kenny")
!398 = !{!399}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !396, file: !397, line: 36, baseType: !210, size: 8)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "init_stack_size", scope: !302, file: !6, line: 1102, baseType: !59, size: 32, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_member, name: "init_entry", scope: !302, file: !6, line: 1103, baseType: !402, size: 32, offset: 96)
!402 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_thread_entry_t", file: !395, line: 46, baseType: !403)
!403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !404, size: 32)
!404 = !DISubroutineType(types: !405)
!405 = !{null, !60, !60, !60}
!406 = !DIDerivedType(tag: DW_TAG_member, name: "init_p1", scope: !302, file: !6, line: 1104, baseType: !60, size: 32, offset: 128)
!407 = !DIDerivedType(tag: DW_TAG_member, name: "init_p2", scope: !302, file: !6, line: 1105, baseType: !60, size: 32, offset: 160)
!408 = !DIDerivedType(tag: DW_TAG_member, name: "init_p3", scope: !302, file: !6, line: 1106, baseType: !60, size: 32, offset: 192)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "init_prio", scope: !302, file: !6, line: 1107, baseType: !61, size: 32, offset: 224)
!410 = !DIDerivedType(tag: DW_TAG_member, name: "init_options", scope: !302, file: !6, line: 1108, baseType: !58, size: 32, offset: 256)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "init_delay", scope: !302, file: !6, line: 1109, baseType: !412, size: 32, offset: 288)
!412 = !DIDerivedType(tag: DW_TAG_typedef, name: "int32_t", file: !56, line: 42, baseType: !61)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "init_abort", scope: !302, file: !6, line: 1110, baseType: !205, size: 32, offset: 320)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "init_name", scope: !302, file: !6, line: 1111, baseType: !415, size: 32, offset: 352)
!415 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !299, size: 32)
!416 = !DIGlobalVariableExpression(var: !417, expr: !DIExpression())
!417 = distinct !DIGlobalVariable(name: "RECVTASK", scope: !246, file: !255, line: 40, type: !418, isLocal: false, isDefinition: true)
!418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !419)
!419 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !6, line: 648, baseType: !305)
!420 = !DIGlobalVariableExpression(var: !421, expr: !DIExpression())
!421 = distinct !DIGlobalVariable(name: "DEMOQX1", scope: !246, file: !255, line: 42, type: !422, isLocal: false, isDefinition: true, align: 32)
!422 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !423)
!423 = !{!424, !425, !426, !427, !428, !430, !431, !432, !433, !434}
!424 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !422, file: !6, line: 3850, baseType: !274, size: 64)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !422, file: !6, line: 3852, baseType: !267, size: 32, offset: 64)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !422, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !422, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !422, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !210, size: 32)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !422, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !422, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !422, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !422, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !422, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!435 = !DIGlobalVariableExpression(var: !436, expr: !DIExpression())
!436 = distinct !DIGlobalVariable(name: "DEMOQX4", scope: !246, file: !255, line: 43, type: !422, isLocal: false, isDefinition: true, align: 32)
!437 = !DIGlobalVariableExpression(var: !438, expr: !DIExpression())
!438 = distinct !DIGlobalVariable(name: "MB_COMM", scope: !246, file: !255, line: 44, type: !422, isLocal: false, isDefinition: true, align: 32)
!439 = !DIGlobalVariableExpression(var: !440, expr: !DIExpression())
!440 = distinct !DIGlobalVariable(name: "CH_COMM", scope: !246, file: !255, line: 45, type: !422, isLocal: false, isDefinition: true, align: 32)
!441 = !DIGlobalVariableExpression(var: !442, expr: !DIExpression())
!442 = distinct !DIGlobalVariable(name: "MAP1", scope: !246, file: !255, line: 47, type: !443, isLocal: false, isDefinition: true, align: 32)
!443 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_slab", file: !6, line: 4521, size: 224, elements: !444)
!444 = !{!445, !446, !447, !448, !449, !450}
!445 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !443, file: !6, line: 4522, baseType: !274, size: 64)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "num_blocks", scope: !443, file: !6, line: 4523, baseType: !58, size: 32, offset: 64)
!447 = !DIDerivedType(tag: DW_TAG_member, name: "block_size", scope: !443, file: !6, line: 4524, baseType: !79, size: 32, offset: 96)
!448 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !443, file: !6, line: 4525, baseType: !429, size: 32, offset: 128)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "free_list", scope: !443, file: !6, line: 4526, baseType: !429, size: 32, offset: 160)
!450 = !DIDerivedType(tag: DW_TAG_member, name: "num_used", scope: !443, file: !6, line: 4527, baseType: !58, size: 32, offset: 192)
!451 = !DIGlobalVariableExpression(var: !452, expr: !DIExpression())
!452 = distinct !DIGlobalVariable(name: "SEM0", scope: !246, file: !255, line: 49, type: !453, isLocal: false, isDefinition: true, align: 32)
!453 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !454)
!454 = !{!455, !456, !457}
!455 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !453, file: !6, line: 3705, baseType: !274, size: 64)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !453, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !453, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!458 = !DIGlobalVariableExpression(var: !459, expr: !DIExpression())
!459 = distinct !DIGlobalVariable(name: "SEM1", scope: !246, file: !255, line: 50, type: !453, isLocal: false, isDefinition: true, align: 32)
!460 = !DIGlobalVariableExpression(var: !461, expr: !DIExpression())
!461 = distinct !DIGlobalVariable(name: "SEM2", scope: !246, file: !255, line: 51, type: !453, isLocal: false, isDefinition: true, align: 32)
!462 = !DIGlobalVariableExpression(var: !463, expr: !DIExpression())
!463 = distinct !DIGlobalVariable(name: "SEM3", scope: !246, file: !255, line: 52, type: !453, isLocal: false, isDefinition: true, align: 32)
!464 = !DIGlobalVariableExpression(var: !465, expr: !DIExpression())
!465 = distinct !DIGlobalVariable(name: "SEM4", scope: !246, file: !255, line: 53, type: !453, isLocal: false, isDefinition: true, align: 32)
!466 = !DIGlobalVariableExpression(var: !467, expr: !DIExpression())
!467 = distinct !DIGlobalVariable(name: "STARTRCV", scope: !246, file: !255, line: 54, type: !453, isLocal: false, isDefinition: true, align: 32)
!468 = !DIGlobalVariableExpression(var: !469, expr: !DIExpression())
!469 = distinct !DIGlobalVariable(name: "MAILB1", scope: !246, file: !255, line: 56, type: !470, isLocal: false, isDefinition: true, align: 32)
!470 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mbox", file: !6, line: 4152, size: 160, elements: !471)
!471 = !{!472, !473, !474}
!472 = !DIDerivedType(tag: DW_TAG_member, name: "tx_msg_queue", scope: !470, file: !6, line: 4154, baseType: !274, size: 64)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "rx_msg_queue", scope: !470, file: !6, line: 4156, baseType: !274, size: 64, offset: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !470, file: !6, line: 4157, baseType: !267, size: 32, offset: 128)
!475 = !DIGlobalVariableExpression(var: !476, expr: !DIExpression())
!476 = distinct !DIGlobalVariable(name: "DEMO_MUTEX", scope: !246, file: !255, line: 58, type: !477, isLocal: false, isDefinition: true, align: 32)
!477 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !6, line: 3589, size: 160, elements: !478)
!478 = !{!479, !480, !481, !482}
!479 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !477, file: !6, line: 3591, baseType: !274, size: 64)
!480 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !477, file: !6, line: 3593, baseType: !305, size: 32, offset: 64)
!481 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !477, file: !6, line: 3596, baseType: !58, size: 32, offset: 96)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !477, file: !6, line: 3599, baseType: !61, size: 32, offset: 128)
!483 = !DIGlobalVariableExpression(var: !484, expr: !DIExpression())
!484 = distinct !DIGlobalVariable(name: "PIPE_SMALLBUFF", scope: !246, file: !255, line: 61, type: !258, isLocal: false, isDefinition: true, align: 32)
!485 = !DIGlobalVariableExpression(var: !486, expr: !DIExpression())
!486 = distinct !DIGlobalVariable(name: "PIPE_BIGBUFF", scope: !246, file: !255, line: 62, type: !258, isLocal: false, isDefinition: true, align: 32)
!487 = !DIGlobalVariableExpression(var: !488, expr: !DIExpression())
!488 = distinct !DIGlobalVariable(name: "poolheap_DEMOPOOL", scope: !246, file: !255, line: 64, type: !377, isLocal: false, isDefinition: true, align: 32)
!489 = !DIGlobalVariableExpression(var: !490, expr: !DIExpression())
!490 = distinct !DIGlobalVariable(name: "DEMOPOOL", scope: !246, file: !255, line: 64, type: !373, isLocal: false, isDefinition: true)
!491 = !DIGlobalVariableExpression(var: !492, expr: !DIExpression())
!492 = distinct !DIGlobalVariable(name: "msg", scope: !246, file: !255, line: 20, type: !493, isLocal: false, isDefinition: true)
!493 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 2048, elements: !494)
!494 = !{!495}
!495 = !DISubrange(count: 256)
!496 = !DIGlobalVariableExpression(var: !497, expr: !DIExpression())
!497 = distinct !DIGlobalVariable(name: "data_bench", scope: !246, file: !255, line: 21, type: !498, isLocal: false, isDefinition: true)
!498 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 32768, elements: !499)
!499 = !{!500}
!500 = !DISubrange(count: 4096)
!501 = !DIGlobalVariableExpression(var: !502, expr: !DIExpression())
!502 = distinct !DIGlobalVariable(name: "sline", scope: !246, file: !255, line: 26, type: !503, isLocal: false, isDefinition: true)
!503 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 2056, elements: !504)
!504 = !{!505}
!505 = !DISubrange(count: 257)
!506 = !DIGlobalVariableExpression(var: !507, expr: !DIExpression())
!507 = distinct !DIGlobalVariable(name: "output_file", scope: !246, file: !255, line: 29, type: !249, isLocal: false, isDefinition: true)
!508 = !DIGlobalVariableExpression(var: !509, expr: !DIExpression())
!509 = distinct !DIGlobalVariable(name: "tm_off", scope: !246, file: !255, line: 35, type: !58, isLocal: false, isDefinition: true)
!510 = !DIGlobalVariableExpression(var: !511, expr: !DIExpression())
!511 = distinct !DIGlobalVariable(name: "_k_thread_stack_RECVTASK", scope: !246, file: !255, line: 40, type: !512, isLocal: false, isDefinition: true, align: 64)
!512 = !DICompositeType(tag: DW_TAG_array_type, baseType: !396, size: 8192, elements: !513)
!513 = !{!514}
!514 = !DISubrange(count: 1024)
!515 = !DIGlobalVariableExpression(var: !516, expr: !DIExpression())
!516 = distinct !DIGlobalVariable(name: "_k_thread_obj_RECVTASK", scope: !246, file: !255, line: 40, type: !306, isLocal: false, isDefinition: true)
!517 = !DIGlobalVariableExpression(var: !518, expr: !DIExpression())
!518 = distinct !DIGlobalVariable(name: "_k_fifo_buf_DEMOQX1", scope: !246, file: !255, line: 42, type: !519, isLocal: true, isDefinition: true, align: 32)
!519 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 4000, elements: !520)
!520 = !{!521}
!521 = !DISubrange(count: 500)
!522 = !DIGlobalVariableExpression(var: !523, expr: !DIExpression())
!523 = distinct !DIGlobalVariable(name: "_k_fifo_buf_DEMOQX4", scope: !246, file: !255, line: 43, type: !524, isLocal: true, isDefinition: true, align: 32)
!524 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 16000, elements: !525)
!525 = !{!526}
!526 = !DISubrange(count: 2000)
!527 = !DIGlobalVariableExpression(var: !528, expr: !DIExpression())
!528 = distinct !DIGlobalVariable(name: "_k_fifo_buf_MB_COMM", scope: !246, file: !255, line: 44, type: !529, isLocal: true, isDefinition: true, align: 32)
!529 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 96, elements: !530)
!530 = !{!531}
!531 = !DISubrange(count: 12)
!532 = !DIGlobalVariableExpression(var: !533, expr: !DIExpression())
!533 = distinct !DIGlobalVariable(name: "_k_fifo_buf_CH_COMM", scope: !246, file: !255, line: 45, type: !529, isLocal: true, isDefinition: true, align: 32)
!534 = !DIGlobalVariableExpression(var: !535, expr: !DIExpression())
!535 = distinct !DIGlobalVariable(name: "_k_mem_slab_buf_MAP1", scope: !246, file: !255, line: 47, type: !209, isLocal: false, isDefinition: true, align: 32)
!536 = !DIGlobalVariableExpression(var: !537, expr: !DIExpression())
!537 = distinct !DIGlobalVariable(name: "_k_pipe_buf_PIPE_NOBUFF", scope: !246, file: !255, line: 60, type: !538, isLocal: true, isDefinition: true, align: 32)
!538 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, elements: !539)
!539 = !{!540}
!540 = !DISubrange(count: 0)
!541 = !DIGlobalVariableExpression(var: !542, expr: !DIExpression())
!542 = distinct !DIGlobalVariable(name: "_k_pipe_buf_PIPE_SMALLBUFF", scope: !246, file: !255, line: 61, type: !543, isLocal: true, isDefinition: true, align: 32)
!543 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 2048, elements: !494)
!544 = !DIGlobalVariableExpression(var: !545, expr: !DIExpression())
!545 = distinct !DIGlobalVariable(name: "_k_pipe_buf_PIPE_BIGBUFF", scope: !246, file: !255, line: 62, type: !546, isLocal: true, isDefinition: true, align: 32)
!546 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 32768, elements: !499)
!547 = !DIGlobalVariableExpression(var: !548, expr: !DIExpression())
!548 = distinct !DIGlobalVariable(name: "kheap_poolheap_DEMOPOOL", scope: !246, file: !255, line: 64, type: !549, isLocal: false, isDefinition: true, align: 32)
!549 = !DICompositeType(tag: DW_TAG_array_type, baseType: !210, size: 672, elements: !550)
!550 = !{!551}
!551 = !DISubrange(count: 84)
!552 = !DIGlobalVariableExpression(var: !553, expr: !DIExpression())
!553 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !554, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!554 = distinct !DICompileUnit(language: DW_LANG_C99, file: !555, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !52, globals: !556, nameTableKind: None)
!555 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/memmap_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!556 = !{!552}
!557 = !DIGlobalVariableExpression(var: !558, expr: !DIExpression())
!558 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !559, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!559 = distinct !DICompileUnit(language: DW_LANG_C99, file: !560, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !52, globals: !561, nameTableKind: None)
!560 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/mempool_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!561 = !{!557}
!562 = !DIGlobalVariableExpression(var: !563, expr: !DIExpression())
!563 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !564, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!564 = distinct !DICompileUnit(language: DW_LANG_C99, file: !565, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !52, globals: !566, nameTableKind: None)
!565 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/mutex_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!566 = !{!562}
!567 = !DIGlobalVariableExpression(var: !568, expr: !DIExpression())
!568 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !569, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!569 = distinct !DICompileUnit(language: DW_LANG_C99, file: !570, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !571, retainedTypes: !68, globals: !578, nameTableKind: None)
!570 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/pipe_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!571 = !{!572, !5}
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "pipe_options", file: !573, line: 68, baseType: !7, size: 8, elements: !574)
!573 = !DIFile(filename: "appl/Zephyr/app_kernel/src/master.h", directory: "/home/kenny/ara")
!574 = !{!575, !576, !577}
!575 = !DIEnumerator(name: "_0_TO_N", value: 0, isUnsigned: true)
!576 = !DIEnumerator(name: "_1_TO_N", value: 1, isUnsigned: true)
!577 = !DIEnumerator(name: "_ALL_N", value: 2, isUnsigned: true)
!578 = !{!567}
!579 = !DIGlobalVariableExpression(var: !580, expr: !DIExpression())
!580 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !581, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!581 = distinct !DICompileUnit(language: DW_LANG_C99, file: !582, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !571, retainedTypes: !52, globals: !583, nameTableKind: None)
!582 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/pipe_r.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!583 = !{!579}
!584 = !DIGlobalVariableExpression(var: !585, expr: !DIExpression())
!585 = distinct !DIGlobalVariable(name: "data_recv", scope: !586, file: !590, line: 20, type: !498, isLocal: false, isDefinition: true)
!586 = distinct !DICompileUnit(language: DW_LANG_C99, file: !587, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !588, globals: !589, nameTableKind: None)
!587 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/receiver.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!588 = !{!53, !60, !61}
!589 = !{!584}
!590 = !DIFile(filename: "appl/Zephyr/app_kernel/src/receiver.c", directory: "/home/kenny/ara")
!591 = !DIGlobalVariableExpression(var: !592, expr: !DIExpression())
!592 = distinct !DIGlobalVariable(name: "timestamp_check", scope: !593, file: !63, line: 62, type: !55, isLocal: true, isDefinition: true)
!593 = distinct !DICompileUnit(language: DW_LANG_C99, file: !594, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !595, globals: !596, nameTableKind: None)
!594 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/sema_b.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!595 = !{!58, !60, !61}
!596 = !{!591}
!597 = distinct !DICompileUnit(language: DW_LANG_C99, file: !598, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !588, nameTableKind: None)
!598 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/fifo_r.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!599 = distinct !DICompileUnit(language: DW_LANG_C99, file: !600, producer: "clang version 9.0.1-12 ", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !601, nameTableKind: None)
!600 = !DIFile(filename: "/home/kenny/ara/appl/Zephyr/app_kernel/src/sema_r.c", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!601 = !{!53, !60, !61, !58}
!602 = !{!"clang version 9.0.1-12 "}
!603 = !{i32 2, !"Dwarf Version", i32 4}
!604 = !{i32 2, !"Debug Info Version", i32 3}
!605 = !{i32 1, !"wchar_size", i32 4}
!606 = !{i32 1, !"min_enum_size", i32 1}
!607 = distinct !DISubprogram(name: "queue_test", scope: !608, file: !608, line: 19, type: !206, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !609)
!608 = !DIFile(filename: "appl/Zephyr/app_kernel/src/fifo_b.c", directory: "/home/kenny/ara")
!609 = !{}
!610 = !DILocalVariable(name: "et", scope: !607, file: !608, line: 21, type: !58)
!611 = !DILocation(line: 21, column: 11, scope: !607)
!612 = !DILocalVariable(name: "i", scope: !607, file: !608, line: 22, type: !61)
!613 = !DILocation(line: 22, column: 6, scope: !607)
!614 = !DILocation(line: 24, column: 2, scope: !607)
!615 = !DILocation(line: 25, column: 7, scope: !607)
!616 = !DILocation(line: 25, column: 5, scope: !607)
!617 = !DILocation(line: 26, column: 9, scope: !618)
!618 = distinct !DILexicalBlock(scope: !607, file: !608, line: 26, column: 2)
!619 = !DILocation(line: 26, column: 7, scope: !618)
!620 = !DILocation(line: 26, column: 14, scope: !621)
!621 = distinct !DILexicalBlock(scope: !618, file: !608, line: 26, column: 2)
!622 = !DILocation(line: 26, column: 16, scope: !621)
!623 = !DILocation(line: 26, column: 2, scope: !618)
!624 = !DILocation(line: 27, column: 36, scope: !625)
!625 = distinct !DILexicalBlock(scope: !621, file: !608, line: 26, column: 40)
!626 = !DILocation(line: 27, column: 3, scope: !625)
!627 = !DILocation(line: 28, column: 2, scope: !625)
!628 = !DILocation(line: 26, column: 36, scope: !621)
!629 = !DILocation(line: 26, column: 2, scope: !621)
!630 = distinct !{!630, !623, !631}
!631 = !DILocation(line: 28, column: 2, scope: !618)
!632 = !DILocation(line: 29, column: 28, scope: !607)
!633 = !DILocation(line: 29, column: 7, scope: !607)
!634 = !DILocation(line: 29, column: 5, scope: !607)
!635 = !DILocation(line: 31, column: 2, scope: !636)
!636 = distinct !DILexicalBlock(scope: !607, file: !608, line: 31, column: 2)
!637 = !DILocation(line: 34, column: 7, scope: !607)
!638 = !DILocation(line: 34, column: 5, scope: !607)
!639 = !DILocation(line: 35, column: 9, scope: !640)
!640 = distinct !DILexicalBlock(scope: !607, file: !608, line: 35, column: 2)
!641 = !DILocation(line: 35, column: 7, scope: !640)
!642 = !DILocation(line: 35, column: 14, scope: !643)
!643 = distinct !DILexicalBlock(scope: !640, file: !608, line: 35, column: 2)
!644 = !DILocation(line: 35, column: 16, scope: !643)
!645 = !DILocation(line: 35, column: 2, scope: !640)
!646 = !DILocation(line: 36, column: 36, scope: !647)
!647 = distinct !DILexicalBlock(scope: !643, file: !608, line: 35, column: 40)
!648 = !DILocation(line: 36, column: 3, scope: !647)
!649 = !DILocation(line: 37, column: 2, scope: !647)
!650 = !DILocation(line: 35, column: 36, scope: !643)
!651 = !DILocation(line: 35, column: 2, scope: !643)
!652 = distinct !{!652, !645, !653}
!653 = !DILocation(line: 37, column: 2, scope: !640)
!654 = !DILocation(line: 38, column: 28, scope: !607)
!655 = !DILocation(line: 38, column: 7, scope: !607)
!656 = !DILocation(line: 38, column: 5, scope: !607)
!657 = !DILocation(line: 39, column: 2, scope: !607)
!658 = !DILocation(line: 41, column: 2, scope: !659)
!659 = distinct !DILexicalBlock(scope: !607, file: !608, line: 41, column: 2)
!660 = !DILocation(line: 44, column: 7, scope: !607)
!661 = !DILocation(line: 44, column: 5, scope: !607)
!662 = !DILocation(line: 45, column: 9, scope: !663)
!663 = distinct !DILexicalBlock(scope: !607, file: !608, line: 45, column: 2)
!664 = !DILocation(line: 45, column: 7, scope: !663)
!665 = !DILocation(line: 45, column: 14, scope: !666)
!666 = distinct !DILexicalBlock(scope: !663, file: !608, line: 45, column: 2)
!667 = !DILocation(line: 45, column: 16, scope: !666)
!668 = !DILocation(line: 45, column: 2, scope: !663)
!669 = !DILocation(line: 46, column: 36, scope: !670)
!670 = distinct !DILexicalBlock(scope: !666, file: !608, line: 45, column: 40)
!671 = !DILocation(line: 46, column: 3, scope: !670)
!672 = !DILocation(line: 47, column: 2, scope: !670)
!673 = !DILocation(line: 45, column: 36, scope: !666)
!674 = !DILocation(line: 45, column: 2, scope: !666)
!675 = distinct !{!675, !668, !676}
!676 = !DILocation(line: 47, column: 2, scope: !663)
!677 = !DILocation(line: 48, column: 28, scope: !607)
!678 = !DILocation(line: 48, column: 7, scope: !607)
!679 = !DILocation(line: 48, column: 5, scope: !607)
!680 = !DILocation(line: 49, column: 2, scope: !607)
!681 = !DILocation(line: 51, column: 2, scope: !682)
!682 = distinct !DILexicalBlock(scope: !607, file: !608, line: 51, column: 2)
!683 = !DILocation(line: 54, column: 7, scope: !607)
!684 = !DILocation(line: 54, column: 5, scope: !607)
!685 = !DILocation(line: 55, column: 9, scope: !686)
!686 = distinct !DILexicalBlock(scope: !607, file: !608, line: 55, column: 2)
!687 = !DILocation(line: 55, column: 7, scope: !686)
!688 = !DILocation(line: 55, column: 14, scope: !689)
!689 = distinct !DILexicalBlock(scope: !686, file: !608, line: 55, column: 2)
!690 = !DILocation(line: 55, column: 16, scope: !689)
!691 = !DILocation(line: 55, column: 2, scope: !686)
!692 = !DILocation(line: 56, column: 36, scope: !693)
!693 = distinct !DILexicalBlock(scope: !689, file: !608, line: 55, column: 40)
!694 = !DILocation(line: 56, column: 3, scope: !693)
!695 = !DILocation(line: 57, column: 2, scope: !693)
!696 = !DILocation(line: 55, column: 36, scope: !689)
!697 = !DILocation(line: 55, column: 2, scope: !689)
!698 = distinct !{!698, !691, !699}
!699 = !DILocation(line: 57, column: 2, scope: !686)
!700 = !DILocation(line: 58, column: 28, scope: !607)
!701 = !DILocation(line: 58, column: 7, scope: !607)
!702 = !DILocation(line: 58, column: 5, scope: !607)
!703 = !DILocation(line: 59, column: 2, scope: !607)
!704 = !DILocation(line: 61, column: 2, scope: !705)
!705 = distinct !DILexicalBlock(scope: !607, file: !608, line: 61, column: 2)
!706 = !DILocation(line: 64, column: 2, scope: !607)
!707 = !DILocation(line: 66, column: 7, scope: !607)
!708 = !DILocation(line: 66, column: 5, scope: !607)
!709 = !DILocation(line: 67, column: 9, scope: !710)
!710 = distinct !DILexicalBlock(scope: !607, file: !608, line: 67, column: 2)
!711 = !DILocation(line: 67, column: 7, scope: !710)
!712 = !DILocation(line: 67, column: 14, scope: !713)
!713 = distinct !DILexicalBlock(scope: !710, file: !608, line: 67, column: 2)
!714 = !DILocation(line: 67, column: 16, scope: !713)
!715 = !DILocation(line: 67, column: 2, scope: !710)
!716 = !DILocation(line: 68, column: 36, scope: !717)
!717 = distinct !DILexicalBlock(scope: !713, file: !608, line: 67, column: 40)
!718 = !DILocation(line: 68, column: 3, scope: !717)
!719 = !DILocation(line: 69, column: 2, scope: !717)
!720 = !DILocation(line: 67, column: 36, scope: !713)
!721 = !DILocation(line: 67, column: 2, scope: !713)
!722 = distinct !{!722, !715, !723}
!723 = !DILocation(line: 69, column: 2, scope: !710)
!724 = !DILocation(line: 70, column: 28, scope: !607)
!725 = !DILocation(line: 70, column: 7, scope: !607)
!726 = !DILocation(line: 70, column: 5, scope: !607)
!727 = !DILocation(line: 71, column: 2, scope: !607)
!728 = !DILocation(line: 73, column: 2, scope: !729)
!729 = distinct !DILexicalBlock(scope: !607, file: !608, line: 73, column: 2)
!730 = !DILocation(line: 77, column: 7, scope: !607)
!731 = !DILocation(line: 77, column: 5, scope: !607)
!732 = !DILocation(line: 78, column: 9, scope: !733)
!733 = distinct !DILexicalBlock(scope: !607, file: !608, line: 78, column: 2)
!734 = !DILocation(line: 78, column: 7, scope: !733)
!735 = !DILocation(line: 78, column: 14, scope: !736)
!736 = distinct !DILexicalBlock(scope: !733, file: !608, line: 78, column: 2)
!737 = !DILocation(line: 78, column: 16, scope: !736)
!738 = !DILocation(line: 78, column: 2, scope: !733)
!739 = !DILocation(line: 79, column: 36, scope: !740)
!740 = distinct !DILexicalBlock(scope: !736, file: !608, line: 78, column: 40)
!741 = !DILocation(line: 79, column: 3, scope: !740)
!742 = !DILocation(line: 80, column: 2, scope: !740)
!743 = !DILocation(line: 78, column: 36, scope: !736)
!744 = !DILocation(line: 78, column: 2, scope: !736)
!745 = distinct !{!745, !738, !746}
!746 = !DILocation(line: 80, column: 2, scope: !733)
!747 = !DILocation(line: 81, column: 28, scope: !607)
!748 = !DILocation(line: 81, column: 7, scope: !607)
!749 = !DILocation(line: 81, column: 5, scope: !607)
!750 = !DILocation(line: 82, column: 2, scope: !607)
!751 = !DILocation(line: 84, column: 2, scope: !752)
!752 = distinct !DILexicalBlock(scope: !607, file: !608, line: 84, column: 2)
!753 = !DILocation(line: 87, column: 1, scope: !607)
!754 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!755 = !DISubroutineType(types: !756)
!756 = !{!58}
!757 = !DILocalVariable(name: "et", scope: !754, file: !573, line: 177, type: !58)
!758 = !DILocation(line: 177, column: 11, scope: !754)
!759 = !DILocation(line: 179, column: 2, scope: !754)
!760 = !DILocation(line: 180, column: 7, scope: !754)
!761 = !DILocation(line: 180, column: 5, scope: !754)
!762 = !DILocation(line: 181, column: 9, scope: !754)
!763 = !DILocation(line: 181, column: 2, scope: !754)
!764 = distinct !DISubprogram(name: "k_msgq_put", scope: !765, file: !765, line: 815, type: !766, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!765 = !DIFile(filename: "zephyr/include/generated/syscalls/kernel.h", directory: "/home/kenny/ara/build/appl/Zephyr/app_kernel")
!766 = !DISubroutineType(types: !767)
!767 = !{!61, !768, !802, !804}
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 32)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !770)
!770 = !{!771, !790, !794, !795, !796, !797, !798, !799, !800, !801}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !769, file: !6, line: 3850, baseType: !772, size: 64)
!772 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !773)
!773 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !774)
!774 = !{!775}
!775 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !773, file: !99, line: 209, baseType: !776, size: 64)
!776 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !777)
!777 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !778)
!778 = !{!779, !785}
!779 = !DIDerivedType(tag: DW_TAG_member, scope: !777, file: !116, line: 32, baseType: !780, size: 32)
!780 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !777, file: !116, line: 32, size: 32, elements: !781)
!781 = !{!782, !784}
!782 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !780, file: !116, line: 33, baseType: !783, size: 32)
!783 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !777, size: 32)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !780, file: !116, line: 34, baseType: !783, size: 32)
!785 = !DIDerivedType(tag: DW_TAG_member, scope: !777, file: !116, line: 36, baseType: !786, size: 32, offset: 32)
!786 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !777, file: !116, line: 36, size: 32, elements: !787)
!787 = !{!788, !789}
!788 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !786, file: !116, line: 37, baseType: !783, size: 32)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !786, file: !116, line: 38, baseType: !783, size: 32)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !769, file: !6, line: 3852, baseType: !791, size: 32, offset: 64)
!791 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !792)
!792 = !{!793}
!793 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !791, file: !99, line: 243, baseType: !134, size: 32)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !769, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !769, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !769, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !769, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !769, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !769, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !769, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !769, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!802 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 32)
!803 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!804 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !805)
!805 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !806)
!806 = !{!807}
!807 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !805, file: !54, line: 68, baseType: !53, size: 64)
!808 = !DILocalVariable(name: "msgq", arg: 1, scope: !764, file: !765, line: 815, type: !768)
!809 = !DILocation(line: 815, column: 64, scope: !764)
!810 = !DILocalVariable(name: "data", arg: 2, scope: !764, file: !765, line: 815, type: !802)
!811 = !DILocation(line: 815, column: 83, scope: !764)
!812 = !DILocalVariable(name: "timeout", arg: 3, scope: !764, file: !765, line: 815, type: !804)
!813 = !DILocation(line: 815, column: 101, scope: !764)
!814 = !DILocation(line: 824, column: 2, scope: !764)
!815 = !DILocation(line: 824, column: 2, scope: !816)
!816 = distinct !DILexicalBlock(scope: !764, file: !765, line: 824, column: 2)
!817 = !{i32 -2141848207}
!818 = !DILocation(line: 825, column: 27, scope: !764)
!819 = !DILocation(line: 825, column: 33, scope: !764)
!820 = !DILocation(line: 825, column: 9, scope: !764)
!821 = !DILocation(line: 825, column: 2, scope: !764)
!822 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!823 = !DISubroutineType(types: !824)
!824 = !{!58, !58}
!825 = !DILocalVariable(name: "ts", arg: 1, scope: !822, file: !63, line: 33, type: !58)
!826 = !DILocation(line: 33, column: 54, scope: !822)
!827 = !DILocalVariable(name: "t", scope: !822, file: !63, line: 35, type: !58)
!828 = !DILocation(line: 35, column: 11, scope: !822)
!829 = !DILocation(line: 38, column: 2, scope: !822)
!830 = !DILocation(line: 40, column: 6, scope: !822)
!831 = !DILocation(line: 40, column: 4, scope: !822)
!832 = !DILocalVariable(name: "res", scope: !822, file: !63, line: 41, type: !58)
!833 = !DILocation(line: 41, column: 11, scope: !822)
!834 = !DILocation(line: 41, column: 18, scope: !822)
!835 = !DILocation(line: 41, column: 23, scope: !822)
!836 = !DILocation(line: 41, column: 20, scope: !822)
!837 = !DILocation(line: 41, column: 17, scope: !822)
!838 = !DILocation(line: 41, column: 30, scope: !822)
!839 = !DILocation(line: 41, column: 34, scope: !822)
!840 = !DILocation(line: 41, column: 32, scope: !822)
!841 = !DILocation(line: 41, column: 53, scope: !822)
!842 = !DILocation(line: 41, column: 51, scope: !822)
!843 = !DILocation(line: 41, column: 58, scope: !822)
!844 = !DILocation(line: 41, column: 56, scope: !822)
!845 = !DILocation(line: 43, column: 6, scope: !846)
!846 = distinct !DILexicalBlock(scope: !822, file: !63, line: 43, column: 6)
!847 = !DILocation(line: 43, column: 9, scope: !846)
!848 = !DILocation(line: 43, column: 6, scope: !822)
!849 = !DILocation(line: 44, column: 10, scope: !850)
!850 = distinct !DILexicalBlock(scope: !846, file: !63, line: 43, column: 14)
!851 = !DILocation(line: 44, column: 7, scope: !850)
!852 = !DILocation(line: 45, column: 2, scope: !850)
!853 = !DILocation(line: 46, column: 9, scope: !822)
!854 = !DILocation(line: 46, column: 2, scope: !822)
!855 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!856 = !DIFile(filename: "zephyrproject/zephyr/include/sys/time_units.h", directory: "/home/kenny")
!857 = !DISubroutineType(types: !858)
!858 = !{!69, !69}
!859 = !DILocalVariable(name: "t", arg: 1, scope: !860, file: !856, line: 78, type: !69)
!860 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!861 = !DISubroutineType(types: !862)
!862 = !{!69, !69, !58, !58, !863, !863, !863, !863}
!863 = !DIBasicType(name: "_Bool", size: 8, encoding: DW_ATE_boolean)
!864 = !DILocation(line: 78, column: 63, scope: !860, inlinedAt: !865)
!865 = distinct !DILocation(line: 904, column: 9, scope: !855)
!866 = !DILocalVariable(name: "from_hz", arg: 2, scope: !860, file: !856, line: 78, type: !58)
!867 = !DILocation(line: 78, column: 75, scope: !860, inlinedAt: !865)
!868 = !DILocalVariable(name: "to_hz", arg: 3, scope: !860, file: !856, line: 79, type: !58)
!869 = !DILocation(line: 79, column: 18, scope: !860, inlinedAt: !865)
!870 = !DILocalVariable(name: "const_hz", arg: 4, scope: !860, file: !856, line: 79, type: !863)
!871 = !DILocation(line: 79, column: 30, scope: !860, inlinedAt: !865)
!872 = !DILocalVariable(name: "result32", arg: 5, scope: !860, file: !856, line: 80, type: !863)
!873 = !DILocation(line: 80, column: 14, scope: !860, inlinedAt: !865)
!874 = !DILocalVariable(name: "round_up", arg: 6, scope: !860, file: !856, line: 80, type: !863)
!875 = !DILocation(line: 80, column: 29, scope: !860, inlinedAt: !865)
!876 = !DILocalVariable(name: "round_off", arg: 7, scope: !860, file: !856, line: 81, type: !863)
!877 = !DILocation(line: 81, column: 14, scope: !860, inlinedAt: !865)
!878 = !DILocalVariable(name: "mul_ratio", scope: !860, file: !856, line: 84, type: !863)
!879 = !DILocation(line: 84, column: 7, scope: !860, inlinedAt: !865)
!880 = !DILocalVariable(name: "div_ratio", scope: !860, file: !856, line: 86, type: !863)
!881 = !DILocation(line: 86, column: 7, scope: !860, inlinedAt: !865)
!882 = !DILocalVariable(name: "off", scope: !860, file: !856, line: 93, type: !69)
!883 = !DILocation(line: 93, column: 11, scope: !860, inlinedAt: !865)
!884 = !DILocalVariable(name: "rdivisor", scope: !885, file: !856, line: 96, type: !58)
!885 = distinct !DILexicalBlock(scope: !886, file: !856, line: 95, column: 18)
!886 = distinct !DILexicalBlock(scope: !860, file: !856, line: 95, column: 6)
!887 = !DILocation(line: 96, column: 12, scope: !885, inlinedAt: !865)
!888 = !DILocalVariable(name: "t", arg: 1, scope: !855, file: !856, line: 901, type: !69)
!889 = !DILocation(line: 901, column: 68, scope: !855)
!890 = !DILocation(line: 904, column: 17, scope: !855)
!891 = !DILocation(line: 904, column: 20, scope: !855)
!892 = !DILocation(line: 84, column: 19, scope: !860, inlinedAt: !865)
!893 = !DILocation(line: 84, column: 28, scope: !860, inlinedAt: !865)
!894 = !DILocation(line: 85, column: 4, scope: !860, inlinedAt: !865)
!895 = !DILocation(line: 85, column: 12, scope: !860, inlinedAt: !865)
!896 = !DILocation(line: 85, column: 10, scope: !860, inlinedAt: !865)
!897 = !DILocation(line: 85, column: 21, scope: !860, inlinedAt: !865)
!898 = !DILocation(line: 85, column: 26, scope: !860, inlinedAt: !865)
!899 = !DILocation(line: 85, column: 34, scope: !860, inlinedAt: !865)
!900 = !DILocation(line: 85, column: 32, scope: !860, inlinedAt: !865)
!901 = !DILocation(line: 85, column: 43, scope: !860, inlinedAt: !865)
!902 = !DILocation(line: 0, scope: !860, inlinedAt: !865)
!903 = !DILocation(line: 86, column: 19, scope: !860, inlinedAt: !865)
!904 = !DILocation(line: 86, column: 28, scope: !860, inlinedAt: !865)
!905 = !DILocation(line: 87, column: 4, scope: !860, inlinedAt: !865)
!906 = !DILocation(line: 87, column: 14, scope: !860, inlinedAt: !865)
!907 = !DILocation(line: 87, column: 12, scope: !860, inlinedAt: !865)
!908 = !DILocation(line: 87, column: 21, scope: !860, inlinedAt: !865)
!909 = !DILocation(line: 87, column: 26, scope: !860, inlinedAt: !865)
!910 = !DILocation(line: 87, column: 36, scope: !860, inlinedAt: !865)
!911 = !DILocation(line: 87, column: 34, scope: !860, inlinedAt: !865)
!912 = !DILocation(line: 87, column: 43, scope: !860, inlinedAt: !865)
!913 = !DILocation(line: 89, column: 6, scope: !914, inlinedAt: !865)
!914 = distinct !DILexicalBlock(scope: !860, file: !856, line: 89, column: 6)
!915 = !DILocation(line: 89, column: 17, scope: !914, inlinedAt: !865)
!916 = !DILocation(line: 89, column: 14, scope: !914, inlinedAt: !865)
!917 = !DILocation(line: 89, column: 6, scope: !860, inlinedAt: !865)
!918 = !DILocation(line: 90, column: 10, scope: !919, inlinedAt: !865)
!919 = distinct !DILexicalBlock(scope: !914, file: !856, line: 89, column: 24)
!920 = !DILocation(line: 90, column: 32, scope: !919, inlinedAt: !865)
!921 = !DILocation(line: 90, column: 22, scope: !919, inlinedAt: !865)
!922 = !DILocation(line: 90, column: 21, scope: !919, inlinedAt: !865)
!923 = !DILocation(line: 90, column: 37, scope: !919, inlinedAt: !865)
!924 = !DILocation(line: 90, column: 3, scope: !919, inlinedAt: !865)
!925 = !DILocation(line: 95, column: 7, scope: !886, inlinedAt: !865)
!926 = !DILocation(line: 95, column: 6, scope: !860, inlinedAt: !865)
!927 = !DILocation(line: 96, column: 23, scope: !885, inlinedAt: !865)
!928 = !DILocation(line: 96, column: 36, scope: !885, inlinedAt: !865)
!929 = !DILocation(line: 96, column: 46, scope: !885, inlinedAt: !865)
!930 = !DILocation(line: 96, column: 44, scope: !885, inlinedAt: !865)
!931 = !DILocation(line: 96, column: 55, scope: !885, inlinedAt: !865)
!932 = !DILocation(line: 98, column: 7, scope: !933, inlinedAt: !865)
!933 = distinct !DILexicalBlock(scope: !885, file: !856, line: 98, column: 7)
!934 = !DILocation(line: 98, column: 7, scope: !885, inlinedAt: !865)
!935 = !DILocation(line: 99, column: 10, scope: !936, inlinedAt: !865)
!936 = distinct !DILexicalBlock(scope: !933, file: !856, line: 98, column: 17)
!937 = !DILocation(line: 99, column: 19, scope: !936, inlinedAt: !865)
!938 = !DILocation(line: 99, column: 8, scope: !936, inlinedAt: !865)
!939 = !DILocation(line: 100, column: 3, scope: !936, inlinedAt: !865)
!940 = !DILocation(line: 100, column: 14, scope: !941, inlinedAt: !865)
!941 = distinct !DILexicalBlock(scope: !933, file: !856, line: 100, column: 14)
!942 = !DILocation(line: 100, column: 14, scope: !933, inlinedAt: !865)
!943 = !DILocation(line: 101, column: 10, scope: !944, inlinedAt: !865)
!944 = distinct !DILexicalBlock(scope: !941, file: !856, line: 100, column: 25)
!945 = !DILocation(line: 101, column: 19, scope: !944, inlinedAt: !865)
!946 = !DILocation(line: 101, column: 8, scope: !944, inlinedAt: !865)
!947 = !DILocation(line: 102, column: 3, scope: !944, inlinedAt: !865)
!948 = !DILocation(line: 103, column: 2, scope: !885, inlinedAt: !865)
!949 = !DILocation(line: 110, column: 6, scope: !950, inlinedAt: !865)
!950 = distinct !DILexicalBlock(scope: !860, file: !856, line: 110, column: 6)
!951 = !DILocation(line: 110, column: 6, scope: !860, inlinedAt: !865)
!952 = !DILocation(line: 111, column: 8, scope: !953, inlinedAt: !865)
!953 = distinct !DILexicalBlock(scope: !950, file: !856, line: 110, column: 17)
!954 = !DILocation(line: 111, column: 5, scope: !953, inlinedAt: !865)
!955 = !DILocation(line: 112, column: 7, scope: !956, inlinedAt: !865)
!956 = distinct !DILexicalBlock(scope: !953, file: !856, line: 112, column: 7)
!957 = !DILocation(line: 112, column: 16, scope: !956, inlinedAt: !865)
!958 = !DILocation(line: 112, column: 20, scope: !956, inlinedAt: !865)
!959 = !DILocation(line: 112, column: 22, scope: !956, inlinedAt: !865)
!960 = !DILocation(line: 112, column: 7, scope: !953, inlinedAt: !865)
!961 = !DILocation(line: 113, column: 22, scope: !962, inlinedAt: !865)
!962 = distinct !DILexicalBlock(scope: !956, file: !856, line: 112, column: 36)
!963 = !DILocation(line: 113, column: 12, scope: !962, inlinedAt: !865)
!964 = !DILocation(line: 113, column: 28, scope: !962, inlinedAt: !865)
!965 = !DILocation(line: 113, column: 38, scope: !962, inlinedAt: !865)
!966 = !DILocation(line: 113, column: 36, scope: !962, inlinedAt: !865)
!967 = !DILocation(line: 113, column: 25, scope: !962, inlinedAt: !865)
!968 = !DILocation(line: 113, column: 11, scope: !962, inlinedAt: !865)
!969 = !DILocation(line: 113, column: 4, scope: !962, inlinedAt: !865)
!970 = !DILocation(line: 115, column: 11, scope: !971, inlinedAt: !865)
!971 = distinct !DILexicalBlock(scope: !956, file: !856, line: 114, column: 10)
!972 = !DILocation(line: 115, column: 16, scope: !971, inlinedAt: !865)
!973 = !DILocation(line: 115, column: 26, scope: !971, inlinedAt: !865)
!974 = !DILocation(line: 115, column: 24, scope: !971, inlinedAt: !865)
!975 = !DILocation(line: 115, column: 15, scope: !971, inlinedAt: !865)
!976 = !DILocation(line: 115, column: 13, scope: !971, inlinedAt: !865)
!977 = !DILocation(line: 115, column: 4, scope: !971, inlinedAt: !865)
!978 = !DILocation(line: 117, column: 13, scope: !979, inlinedAt: !865)
!979 = distinct !DILexicalBlock(scope: !950, file: !856, line: 117, column: 13)
!980 = !DILocation(line: 117, column: 13, scope: !950, inlinedAt: !865)
!981 = !DILocation(line: 118, column: 7, scope: !982, inlinedAt: !865)
!982 = distinct !DILexicalBlock(scope: !983, file: !856, line: 118, column: 7)
!983 = distinct !DILexicalBlock(scope: !979, file: !856, line: 117, column: 24)
!984 = !DILocation(line: 118, column: 7, scope: !983, inlinedAt: !865)
!985 = !DILocation(line: 119, column: 22, scope: !986, inlinedAt: !865)
!986 = distinct !DILexicalBlock(scope: !982, file: !856, line: 118, column: 17)
!987 = !DILocation(line: 119, column: 12, scope: !986, inlinedAt: !865)
!988 = !DILocation(line: 119, column: 28, scope: !986, inlinedAt: !865)
!989 = !DILocation(line: 119, column: 36, scope: !986, inlinedAt: !865)
!990 = !DILocation(line: 119, column: 34, scope: !986, inlinedAt: !865)
!991 = !DILocation(line: 119, column: 25, scope: !986, inlinedAt: !865)
!992 = !DILocation(line: 119, column: 11, scope: !986, inlinedAt: !865)
!993 = !DILocation(line: 119, column: 4, scope: !986, inlinedAt: !865)
!994 = !DILocation(line: 121, column: 11, scope: !995, inlinedAt: !865)
!995 = distinct !DILexicalBlock(scope: !982, file: !856, line: 120, column: 10)
!996 = !DILocation(line: 121, column: 16, scope: !995, inlinedAt: !865)
!997 = !DILocation(line: 121, column: 24, scope: !995, inlinedAt: !865)
!998 = !DILocation(line: 121, column: 22, scope: !995, inlinedAt: !865)
!999 = !DILocation(line: 121, column: 15, scope: !995, inlinedAt: !865)
!1000 = !DILocation(line: 121, column: 13, scope: !995, inlinedAt: !865)
!1001 = !DILocation(line: 121, column: 4, scope: !995, inlinedAt: !865)
!1002 = !DILocation(line: 124, column: 7, scope: !1003, inlinedAt: !865)
!1003 = distinct !DILexicalBlock(scope: !1004, file: !856, line: 124, column: 7)
!1004 = distinct !DILexicalBlock(scope: !979, file: !856, line: 123, column: 9)
!1005 = !DILocation(line: 124, column: 7, scope: !1004, inlinedAt: !865)
!1006 = !DILocation(line: 125, column: 23, scope: !1007, inlinedAt: !865)
!1007 = distinct !DILexicalBlock(scope: !1003, file: !856, line: 124, column: 17)
!1008 = !DILocation(line: 125, column: 27, scope: !1007, inlinedAt: !865)
!1009 = !DILocation(line: 125, column: 25, scope: !1007, inlinedAt: !865)
!1010 = !DILocation(line: 125, column: 35, scope: !1007, inlinedAt: !865)
!1011 = !DILocation(line: 125, column: 33, scope: !1007, inlinedAt: !865)
!1012 = !DILocation(line: 125, column: 42, scope: !1007, inlinedAt: !865)
!1013 = !DILocation(line: 125, column: 40, scope: !1007, inlinedAt: !865)
!1014 = !DILocation(line: 125, column: 11, scope: !1007, inlinedAt: !865)
!1015 = !DILocation(line: 125, column: 4, scope: !1007, inlinedAt: !865)
!1016 = !DILocation(line: 127, column: 12, scope: !1017, inlinedAt: !865)
!1017 = distinct !DILexicalBlock(scope: !1003, file: !856, line: 126, column: 10)
!1018 = !DILocation(line: 127, column: 16, scope: !1017, inlinedAt: !865)
!1019 = !DILocation(line: 127, column: 14, scope: !1017, inlinedAt: !865)
!1020 = !DILocation(line: 127, column: 24, scope: !1017, inlinedAt: !865)
!1021 = !DILocation(line: 127, column: 22, scope: !1017, inlinedAt: !865)
!1022 = !DILocation(line: 127, column: 31, scope: !1017, inlinedAt: !865)
!1023 = !DILocation(line: 127, column: 29, scope: !1017, inlinedAt: !865)
!1024 = !DILocation(line: 127, column: 4, scope: !1017, inlinedAt: !865)
!1025 = !DILocation(line: 130, column: 1, scope: !860, inlinedAt: !865)
!1026 = !DILocation(line: 904, column: 2, scope: !855)
!1027 = distinct !DISubprogram(name: "k_msgq_get", scope: !765, file: !765, line: 830, type: !1028, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1028 = !DISubroutineType(types: !1029)
!1029 = !{!61, !768, !60, !804}
!1030 = !DILocalVariable(name: "msgq", arg: 1, scope: !1027, file: !765, line: 830, type: !768)
!1031 = !DILocation(line: 830, column: 64, scope: !1027)
!1032 = !DILocalVariable(name: "data", arg: 2, scope: !1027, file: !765, line: 830, type: !60)
!1033 = !DILocation(line: 830, column: 77, scope: !1027)
!1034 = !DILocalVariable(name: "timeout", arg: 3, scope: !1027, file: !765, line: 830, type: !804)
!1035 = !DILocation(line: 830, column: 95, scope: !1027)
!1036 = !DILocation(line: 839, column: 2, scope: !1027)
!1037 = !DILocation(line: 839, column: 2, scope: !1038)
!1038 = distinct !DILexicalBlock(scope: !1027, file: !765, line: 839, column: 2)
!1039 = !{i32 -2141848139}
!1040 = !DILocation(line: 840, column: 27, scope: !1027)
!1041 = !DILocation(line: 840, column: 33, scope: !1027)
!1042 = !DILocation(line: 840, column: 9, scope: !1027)
!1043 = !DILocation(line: 840, column: 2, scope: !1027)
!1044 = distinct !DISubprogram(name: "check_result", scope: !573, file: !573, line: 184, type: !206, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1045 = !DILocation(line: 186, column: 6, scope: !1046)
!1046 = distinct !DILexicalBlock(scope: !1044, file: !573, line: 186, column: 6)
!1047 = !DILocation(line: 186, column: 23, scope: !1046)
!1048 = !DILocation(line: 186, column: 6, scope: !1044)
!1049 = !DILocation(line: 187, column: 3, scope: !1050)
!1050 = distinct !DILexicalBlock(scope: !1051, file: !573, line: 187, column: 3)
!1051 = distinct !DILexicalBlock(scope: !1046, file: !573, line: 186, column: 28)
!1052 = !DILocation(line: 188, column: 3, scope: !1051)
!1053 = !DILocation(line: 190, column: 1, scope: !1044)
!1054 = distinct !DISubprogram(name: "k_sem_give", scope: !765, file: !765, line: 761, type: !1055, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1055 = !DISubroutineType(types: !1056)
!1056 = !{null, !1057}
!1057 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1058, size: 32)
!1058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !1059)
!1059 = !{!1060, !1061, !1062}
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1058, file: !6, line: 3705, baseType: !772, size: 64)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1058, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !1058, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!1063 = !DILocalVariable(name: "sem", arg: 1, scope: !1054, file: !765, line: 761, type: !1057)
!1064 = !DILocation(line: 761, column: 64, scope: !1054)
!1065 = !DILocation(line: 769, column: 2, scope: !1054)
!1066 = !DILocation(line: 769, column: 2, scope: !1067)
!1067 = distinct !DILexicalBlock(scope: !1054, file: !765, line: 769, column: 2)
!1068 = !{i32 -2141848479}
!1069 = !DILocation(line: 770, column: 20, scope: !1054)
!1070 = !DILocation(line: 770, column: 2, scope: !1054)
!1071 = !DILocation(line: 771, column: 1, scope: !1054)
!1072 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1073 = !DISubroutineType(types: !1074)
!1074 = !{!61}
!1075 = !DILocation(line: 82, column: 20, scope: !1072)
!1076 = !DILocation(line: 82, column: 18, scope: !1072)
!1077 = !DILocation(line: 90, column: 6, scope: !1078)
!1078 = distinct !DILexicalBlock(scope: !1072, file: !63, line: 90, column: 6)
!1079 = !DILocation(line: 90, column: 22, scope: !1078)
!1080 = !DILocation(line: 90, column: 6, scope: !1072)
!1081 = !DILocation(line: 91, column: 3, scope: !1082)
!1082 = distinct !DILexicalBlock(scope: !1078, file: !63, line: 90, column: 39)
!1083 = !DILocation(line: 93, column: 2, scope: !1072)
!1084 = !DILocation(line: 94, column: 1, scope: !1072)
!1085 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1086 = !DISubroutineType(types: !1087)
!1087 = !{!55, !1088}
!1088 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !55, size: 32)
!1089 = !DILocalVariable(name: "reftime", arg: 1, scope: !1085, file: !6, line: 2133, type: !1088)
!1090 = !DILocation(line: 2133, column: 47, scope: !1085)
!1091 = !DILocalVariable(name: "uptime", scope: !1085, file: !6, line: 2135, type: !55)
!1092 = !DILocation(line: 2135, column: 10, scope: !1085)
!1093 = !DILocalVariable(name: "delta", scope: !1085, file: !6, line: 2135, type: !55)
!1094 = !DILocation(line: 2135, column: 18, scope: !1085)
!1095 = !DILocation(line: 2137, column: 11, scope: !1085)
!1096 = !DILocation(line: 2137, column: 9, scope: !1085)
!1097 = !DILocation(line: 2138, column: 10, scope: !1085)
!1098 = !DILocation(line: 2138, column: 20, scope: !1085)
!1099 = !DILocation(line: 2138, column: 19, scope: !1085)
!1100 = !DILocation(line: 2138, column: 17, scope: !1085)
!1101 = !DILocation(line: 2138, column: 8, scope: !1085)
!1102 = !DILocation(line: 2139, column: 13, scope: !1085)
!1103 = !DILocation(line: 2139, column: 3, scope: !1085)
!1104 = !DILocation(line: 2139, column: 11, scope: !1085)
!1105 = !DILocation(line: 2141, column: 9, scope: !1085)
!1106 = !DILocation(line: 2141, column: 2, scope: !1085)
!1107 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1108 = !DISubroutineType(types: !1109)
!1109 = !{!55}
!1110 = !DILocation(line: 2061, column: 31, scope: !1107)
!1111 = !DILocation(line: 2061, column: 9, scope: !1107)
!1112 = !DILocation(line: 2061, column: 2, scope: !1107)
!1113 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1114 = !DILocation(line: 509, column: 2, scope: !1113)
!1115 = !DILocation(line: 509, column: 2, scope: !1116)
!1116 = distinct !DILexicalBlock(scope: !1113, file: !765, line: 509, column: 2)
!1117 = !{i32 -2141849783}
!1118 = !DILocation(line: 510, column: 9, scope: !1113)
!1119 = !DILocation(line: 510, column: 2, scope: !1113)
!1120 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1121 = !DILocation(line: 78, column: 63, scope: !860, inlinedAt: !1122)
!1122 = distinct !DILocation(line: 1072, column: 9, scope: !1120)
!1123 = !DILocation(line: 78, column: 75, scope: !860, inlinedAt: !1122)
!1124 = !DILocation(line: 79, column: 18, scope: !860, inlinedAt: !1122)
!1125 = !DILocation(line: 79, column: 30, scope: !860, inlinedAt: !1122)
!1126 = !DILocation(line: 80, column: 14, scope: !860, inlinedAt: !1122)
!1127 = !DILocation(line: 80, column: 29, scope: !860, inlinedAt: !1122)
!1128 = !DILocation(line: 81, column: 14, scope: !860, inlinedAt: !1122)
!1129 = !DILocation(line: 84, column: 7, scope: !860, inlinedAt: !1122)
!1130 = !DILocation(line: 86, column: 7, scope: !860, inlinedAt: !1122)
!1131 = !DILocation(line: 93, column: 11, scope: !860, inlinedAt: !1122)
!1132 = !DILocation(line: 96, column: 12, scope: !885, inlinedAt: !1122)
!1133 = !DILocalVariable(name: "t", arg: 1, scope: !1120, file: !856, line: 1069, type: !69)
!1134 = !DILocation(line: 1069, column: 70, scope: !1120)
!1135 = !DILocation(line: 1072, column: 17, scope: !1120)
!1136 = !DILocation(line: 84, column: 19, scope: !860, inlinedAt: !1122)
!1137 = !DILocation(line: 84, column: 28, scope: !860, inlinedAt: !1122)
!1138 = !DILocation(line: 85, column: 4, scope: !860, inlinedAt: !1122)
!1139 = !DILocation(line: 85, column: 12, scope: !860, inlinedAt: !1122)
!1140 = !DILocation(line: 85, column: 10, scope: !860, inlinedAt: !1122)
!1141 = !DILocation(line: 85, column: 21, scope: !860, inlinedAt: !1122)
!1142 = !DILocation(line: 85, column: 26, scope: !860, inlinedAt: !1122)
!1143 = !DILocation(line: 85, column: 34, scope: !860, inlinedAt: !1122)
!1144 = !DILocation(line: 85, column: 32, scope: !860, inlinedAt: !1122)
!1145 = !DILocation(line: 85, column: 43, scope: !860, inlinedAt: !1122)
!1146 = !DILocation(line: 0, scope: !860, inlinedAt: !1122)
!1147 = !DILocation(line: 86, column: 19, scope: !860, inlinedAt: !1122)
!1148 = !DILocation(line: 86, column: 28, scope: !860, inlinedAt: !1122)
!1149 = !DILocation(line: 87, column: 4, scope: !860, inlinedAt: !1122)
!1150 = !DILocation(line: 87, column: 14, scope: !860, inlinedAt: !1122)
!1151 = !DILocation(line: 87, column: 12, scope: !860, inlinedAt: !1122)
!1152 = !DILocation(line: 87, column: 21, scope: !860, inlinedAt: !1122)
!1153 = !DILocation(line: 87, column: 26, scope: !860, inlinedAt: !1122)
!1154 = !DILocation(line: 87, column: 36, scope: !860, inlinedAt: !1122)
!1155 = !DILocation(line: 87, column: 34, scope: !860, inlinedAt: !1122)
!1156 = !DILocation(line: 87, column: 43, scope: !860, inlinedAt: !1122)
!1157 = !DILocation(line: 89, column: 6, scope: !914, inlinedAt: !1122)
!1158 = !DILocation(line: 89, column: 17, scope: !914, inlinedAt: !1122)
!1159 = !DILocation(line: 89, column: 14, scope: !914, inlinedAt: !1122)
!1160 = !DILocation(line: 89, column: 6, scope: !860, inlinedAt: !1122)
!1161 = !DILocation(line: 90, column: 10, scope: !919, inlinedAt: !1122)
!1162 = !DILocation(line: 90, column: 32, scope: !919, inlinedAt: !1122)
!1163 = !DILocation(line: 90, column: 22, scope: !919, inlinedAt: !1122)
!1164 = !DILocation(line: 90, column: 21, scope: !919, inlinedAt: !1122)
!1165 = !DILocation(line: 90, column: 37, scope: !919, inlinedAt: !1122)
!1166 = !DILocation(line: 90, column: 3, scope: !919, inlinedAt: !1122)
!1167 = !DILocation(line: 95, column: 7, scope: !886, inlinedAt: !1122)
!1168 = !DILocation(line: 95, column: 6, scope: !860, inlinedAt: !1122)
!1169 = !DILocation(line: 96, column: 23, scope: !885, inlinedAt: !1122)
!1170 = !DILocation(line: 96, column: 36, scope: !885, inlinedAt: !1122)
!1171 = !DILocation(line: 96, column: 46, scope: !885, inlinedAt: !1122)
!1172 = !DILocation(line: 96, column: 44, scope: !885, inlinedAt: !1122)
!1173 = !DILocation(line: 96, column: 55, scope: !885, inlinedAt: !1122)
!1174 = !DILocation(line: 98, column: 7, scope: !933, inlinedAt: !1122)
!1175 = !DILocation(line: 98, column: 7, scope: !885, inlinedAt: !1122)
!1176 = !DILocation(line: 99, column: 10, scope: !936, inlinedAt: !1122)
!1177 = !DILocation(line: 99, column: 19, scope: !936, inlinedAt: !1122)
!1178 = !DILocation(line: 99, column: 8, scope: !936, inlinedAt: !1122)
!1179 = !DILocation(line: 100, column: 3, scope: !936, inlinedAt: !1122)
!1180 = !DILocation(line: 100, column: 14, scope: !941, inlinedAt: !1122)
!1181 = !DILocation(line: 100, column: 14, scope: !933, inlinedAt: !1122)
!1182 = !DILocation(line: 101, column: 10, scope: !944, inlinedAt: !1122)
!1183 = !DILocation(line: 101, column: 19, scope: !944, inlinedAt: !1122)
!1184 = !DILocation(line: 101, column: 8, scope: !944, inlinedAt: !1122)
!1185 = !DILocation(line: 102, column: 3, scope: !944, inlinedAt: !1122)
!1186 = !DILocation(line: 103, column: 2, scope: !885, inlinedAt: !1122)
!1187 = !DILocation(line: 110, column: 6, scope: !950, inlinedAt: !1122)
!1188 = !DILocation(line: 110, column: 6, scope: !860, inlinedAt: !1122)
!1189 = !DILocation(line: 111, column: 8, scope: !953, inlinedAt: !1122)
!1190 = !DILocation(line: 111, column: 5, scope: !953, inlinedAt: !1122)
!1191 = !DILocation(line: 112, column: 7, scope: !956, inlinedAt: !1122)
!1192 = !DILocation(line: 112, column: 16, scope: !956, inlinedAt: !1122)
!1193 = !DILocation(line: 112, column: 20, scope: !956, inlinedAt: !1122)
!1194 = !DILocation(line: 112, column: 22, scope: !956, inlinedAt: !1122)
!1195 = !DILocation(line: 112, column: 7, scope: !953, inlinedAt: !1122)
!1196 = !DILocation(line: 113, column: 22, scope: !962, inlinedAt: !1122)
!1197 = !DILocation(line: 113, column: 12, scope: !962, inlinedAt: !1122)
!1198 = !DILocation(line: 113, column: 28, scope: !962, inlinedAt: !1122)
!1199 = !DILocation(line: 113, column: 38, scope: !962, inlinedAt: !1122)
!1200 = !DILocation(line: 113, column: 36, scope: !962, inlinedAt: !1122)
!1201 = !DILocation(line: 113, column: 25, scope: !962, inlinedAt: !1122)
!1202 = !DILocation(line: 113, column: 11, scope: !962, inlinedAt: !1122)
!1203 = !DILocation(line: 113, column: 4, scope: !962, inlinedAt: !1122)
!1204 = !DILocation(line: 115, column: 11, scope: !971, inlinedAt: !1122)
!1205 = !DILocation(line: 115, column: 16, scope: !971, inlinedAt: !1122)
!1206 = !DILocation(line: 115, column: 26, scope: !971, inlinedAt: !1122)
!1207 = !DILocation(line: 115, column: 24, scope: !971, inlinedAt: !1122)
!1208 = !DILocation(line: 115, column: 15, scope: !971, inlinedAt: !1122)
!1209 = !DILocation(line: 115, column: 13, scope: !971, inlinedAt: !1122)
!1210 = !DILocation(line: 115, column: 4, scope: !971, inlinedAt: !1122)
!1211 = !DILocation(line: 117, column: 13, scope: !979, inlinedAt: !1122)
!1212 = !DILocation(line: 117, column: 13, scope: !950, inlinedAt: !1122)
!1213 = !DILocation(line: 118, column: 7, scope: !982, inlinedAt: !1122)
!1214 = !DILocation(line: 118, column: 7, scope: !983, inlinedAt: !1122)
!1215 = !DILocation(line: 119, column: 22, scope: !986, inlinedAt: !1122)
!1216 = !DILocation(line: 119, column: 12, scope: !986, inlinedAt: !1122)
!1217 = !DILocation(line: 119, column: 28, scope: !986, inlinedAt: !1122)
!1218 = !DILocation(line: 119, column: 36, scope: !986, inlinedAt: !1122)
!1219 = !DILocation(line: 119, column: 34, scope: !986, inlinedAt: !1122)
!1220 = !DILocation(line: 119, column: 25, scope: !986, inlinedAt: !1122)
!1221 = !DILocation(line: 119, column: 11, scope: !986, inlinedAt: !1122)
!1222 = !DILocation(line: 119, column: 4, scope: !986, inlinedAt: !1122)
!1223 = !DILocation(line: 121, column: 11, scope: !995, inlinedAt: !1122)
!1224 = !DILocation(line: 121, column: 16, scope: !995, inlinedAt: !1122)
!1225 = !DILocation(line: 121, column: 24, scope: !995, inlinedAt: !1122)
!1226 = !DILocation(line: 121, column: 22, scope: !995, inlinedAt: !1122)
!1227 = !DILocation(line: 121, column: 15, scope: !995, inlinedAt: !1122)
!1228 = !DILocation(line: 121, column: 13, scope: !995, inlinedAt: !1122)
!1229 = !DILocation(line: 121, column: 4, scope: !995, inlinedAt: !1122)
!1230 = !DILocation(line: 124, column: 7, scope: !1003, inlinedAt: !1122)
!1231 = !DILocation(line: 124, column: 7, scope: !1004, inlinedAt: !1122)
!1232 = !DILocation(line: 125, column: 23, scope: !1007, inlinedAt: !1122)
!1233 = !DILocation(line: 125, column: 27, scope: !1007, inlinedAt: !1122)
!1234 = !DILocation(line: 125, column: 25, scope: !1007, inlinedAt: !1122)
!1235 = !DILocation(line: 125, column: 35, scope: !1007, inlinedAt: !1122)
!1236 = !DILocation(line: 125, column: 33, scope: !1007, inlinedAt: !1122)
!1237 = !DILocation(line: 125, column: 42, scope: !1007, inlinedAt: !1122)
!1238 = !DILocation(line: 125, column: 40, scope: !1007, inlinedAt: !1122)
!1239 = !DILocation(line: 125, column: 11, scope: !1007, inlinedAt: !1122)
!1240 = !DILocation(line: 125, column: 4, scope: !1007, inlinedAt: !1122)
!1241 = !DILocation(line: 127, column: 12, scope: !1017, inlinedAt: !1122)
!1242 = !DILocation(line: 127, column: 16, scope: !1017, inlinedAt: !1122)
!1243 = !DILocation(line: 127, column: 14, scope: !1017, inlinedAt: !1122)
!1244 = !DILocation(line: 127, column: 24, scope: !1017, inlinedAt: !1122)
!1245 = !DILocation(line: 127, column: 22, scope: !1017, inlinedAt: !1122)
!1246 = !DILocation(line: 127, column: 31, scope: !1017, inlinedAt: !1122)
!1247 = !DILocation(line: 127, column: 29, scope: !1017, inlinedAt: !1122)
!1248 = !DILocation(line: 127, column: 4, scope: !1017, inlinedAt: !1122)
!1249 = !DILocation(line: 130, column: 1, scope: !860, inlinedAt: !1122)
!1250 = !DILocation(line: 1072, column: 2, scope: !1120)
!1251 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1252 = !DILocation(line: 55, column: 2, scope: !1251)
!1253 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1254 = !DIFile(filename: "zephyrproject/zephyr/subsys/testsuite/include/test_asm_inline_gcc.h", directory: "/home/kenny")
!1255 = !DILocation(line: 935, column: 3, scope: !1256, inlinedAt: !1258)
!1256 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1257 = !DIFile(filename: "zephyrproject/modules/hal/cmsis/CMSIS/Core/Include/cmsis_gcc.h", directory: "/home/kenny")
!1258 = distinct !DILocation(line: 31, column: 2, scope: !1253)
!1259 = !{i32 2225343}
!1260 = !DILocation(line: 32, column: 1, scope: !1253)
!1261 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1262 = !DILocation(line: 2174, column: 9, scope: !1261)
!1263 = !DILocation(line: 2174, column: 2, scope: !1261)
!1264 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1265 = !DIFile(filename: "zephyrproject/zephyr/include/arch/arm/aarch32/misc.h", directory: "/home/kenny")
!1266 = !DILocation(line: 26, column: 9, scope: !1264)
!1267 = !DILocation(line: 26, column: 2, scope: !1264)
!1268 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1269 = !DILocation(line: 72, column: 18, scope: !1268)
!1270 = !DILocation(line: 74, column: 2, scope: !1268)
!1271 = !DILocation(line: 75, column: 20, scope: !1268)
!1272 = !DILocation(line: 75, column: 18, scope: !1268)
!1273 = !DILocation(line: 76, column: 1, scope: !1268)
!1274 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !1275, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !609)
!1275 = !DISubroutineType(types: !1276)
!1276 = !{!412, !804}
!1277 = !DILocalVariable(name: "timeout", arg: 1, scope: !1274, file: !765, line: 117, type: !804)
!1278 = !DILocation(line: 117, column: 61, scope: !1274)
!1279 = !DILocation(line: 126, column: 2, scope: !1274)
!1280 = !DILocation(line: 126, column: 2, scope: !1281)
!1281 = distinct !DILexicalBlock(scope: !1274, file: !765, line: 126, column: 2)
!1282 = !{i32 -2141851687}
!1283 = !DILocation(line: 127, column: 9, scope: !1274)
!1284 = !DILocation(line: 127, column: 2, scope: !1274)
!1285 = distinct !DISubprogram(name: "dequtask", scope: !1286, file: !1286, line: 21, type: !206, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !597, retainedNodes: !609)
!1286 = !DIFile(filename: "appl/Zephyr/app_kernel/src/fifo_r.c", directory: "/home/kenny/ara")
!1287 = !DILocalVariable(name: "x", scope: !1285, file: !1286, line: 23, type: !61)
!1288 = !DILocation(line: 23, column: 6, scope: !1285)
!1289 = !DILocalVariable(name: "i", scope: !1285, file: !1286, line: 23, type: !61)
!1290 = !DILocation(line: 23, column: 9, scope: !1285)
!1291 = !DILocation(line: 25, column: 9, scope: !1292)
!1292 = distinct !DILexicalBlock(scope: !1285, file: !1286, line: 25, column: 2)
!1293 = !DILocation(line: 25, column: 7, scope: !1292)
!1294 = !DILocation(line: 25, column: 14, scope: !1295)
!1295 = distinct !DILexicalBlock(scope: !1292, file: !1286, line: 25, column: 2)
!1296 = !DILocation(line: 25, column: 16, scope: !1295)
!1297 = !DILocation(line: 25, column: 2, scope: !1292)
!1298 = !DILocation(line: 26, column: 24, scope: !1299)
!1299 = distinct !DILexicalBlock(scope: !1295, file: !1286, line: 25, column: 40)
!1300 = !DILocation(line: 26, column: 28, scope: !1299)
!1301 = !DILocation(line: 26, column: 3, scope: !1299)
!1302 = !DILocation(line: 27, column: 2, scope: !1299)
!1303 = !DILocation(line: 25, column: 36, scope: !1295)
!1304 = !DILocation(line: 25, column: 2, scope: !1295)
!1305 = distinct !{!1305, !1297, !1306}
!1306 = !DILocation(line: 27, column: 2, scope: !1292)
!1307 = !DILocation(line: 29, column: 9, scope: !1308)
!1308 = distinct !DILexicalBlock(scope: !1285, file: !1286, line: 29, column: 2)
!1309 = !DILocation(line: 29, column: 7, scope: !1308)
!1310 = !DILocation(line: 29, column: 14, scope: !1311)
!1311 = distinct !DILexicalBlock(scope: !1308, file: !1286, line: 29, column: 2)
!1312 = !DILocation(line: 29, column: 16, scope: !1311)
!1313 = !DILocation(line: 29, column: 2, scope: !1308)
!1314 = !DILocation(line: 30, column: 24, scope: !1315)
!1315 = distinct !DILexicalBlock(scope: !1311, file: !1286, line: 29, column: 40)
!1316 = !DILocation(line: 30, column: 28, scope: !1315)
!1317 = !DILocation(line: 30, column: 3, scope: !1315)
!1318 = !DILocation(line: 31, column: 2, scope: !1315)
!1319 = !DILocation(line: 29, column: 36, scope: !1311)
!1320 = !DILocation(line: 29, column: 2, scope: !1311)
!1321 = distinct !{!1321, !1313, !1322}
!1322 = !DILocation(line: 31, column: 2, scope: !1308)
!1323 = !DILocation(line: 32, column: 1, scope: !1285)
!1324 = distinct !DISubprogram(name: "k_msgq_get", scope: !765, file: !765, line: 830, type: !1325, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !597, retainedNodes: !609)
!1325 = !DISubroutineType(types: !1326)
!1326 = !{!61, !1327, !60, !1361}
!1327 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1328, size: 32)
!1328 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !1329)
!1329 = !{!1330, !1349, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360}
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1328, file: !6, line: 3850, baseType: !1331, size: 64)
!1331 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !1332)
!1332 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !1333)
!1333 = !{!1334}
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !1332, file: !99, line: 209, baseType: !1335, size: 64)
!1335 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !1336)
!1336 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !1337)
!1337 = !{!1338, !1344}
!1338 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !116, line: 32, baseType: !1339, size: 32)
!1339 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1336, file: !116, line: 32, size: 32, elements: !1340)
!1340 = !{!1341, !1343}
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1339, file: !116, line: 33, baseType: !1342, size: 32)
!1342 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1336, size: 32)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1339, file: !116, line: 34, baseType: !1342, size: 32)
!1344 = !DIDerivedType(tag: DW_TAG_member, scope: !1336, file: !116, line: 36, baseType: !1345, size: 32, offset: 32)
!1345 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1336, file: !116, line: 36, size: 32, elements: !1346)
!1346 = !{!1347, !1348}
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1345, file: !116, line: 37, baseType: !1342, size: 32)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1345, file: !116, line: 38, baseType: !1342, size: 32)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1328, file: !6, line: 3852, baseType: !1350, size: 32, offset: 64)
!1350 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !1351)
!1351 = !{!1352}
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !1350, file: !99, line: 243, baseType: !134, size: 32)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1328, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1328, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1328, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1328, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1328, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1328, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1328, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1328, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !1363)
!1363 = !{!1364}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !1362, file: !54, line: 68, baseType: !53, size: 64)
!1365 = !DILocalVariable(name: "msgq", arg: 1, scope: !1324, file: !765, line: 830, type: !1327)
!1366 = !DILocation(line: 830, column: 64, scope: !1324)
!1367 = !DILocalVariable(name: "data", arg: 2, scope: !1324, file: !765, line: 830, type: !60)
!1368 = !DILocation(line: 830, column: 77, scope: !1324)
!1369 = !DILocalVariable(name: "timeout", arg: 3, scope: !1324, file: !765, line: 830, type: !1361)
!1370 = !DILocation(line: 830, column: 95, scope: !1324)
!1371 = !DILocation(line: 839, column: 2, scope: !1324)
!1372 = !DILocation(line: 839, column: 2, scope: !1373)
!1373 = distinct !DILexicalBlock(scope: !1324, file: !765, line: 839, column: 2)
!1374 = !{i32 -2141853359}
!1375 = !DILocation(line: 840, column: 27, scope: !1324)
!1376 = !DILocation(line: 840, column: 33, scope: !1324)
!1377 = !DILocation(line: 840, column: 9, scope: !1324)
!1378 = !DILocation(line: 840, column: 2, scope: !1324)
!1379 = distinct !DISubprogram(name: "mailbox_test", scope: !74, file: !74, line: 76, type: !206, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1380 = !DILocalVariable(name: "putsize", scope: !1379, file: !74, line: 78, type: !58)
!1381 = !DILocation(line: 78, column: 11, scope: !1379)
!1382 = !DILocalVariable(name: "puttime", scope: !1379, file: !74, line: 79, type: !58)
!1383 = !DILocation(line: 79, column: 11, scope: !1379)
!1384 = !DILocalVariable(name: "putcount", scope: !1379, file: !74, line: 80, type: !61)
!1385 = !DILocation(line: 80, column: 6, scope: !1379)
!1386 = !DILocalVariable(name: "empty_msg_put_time", scope: !1379, file: !74, line: 81, type: !59)
!1387 = !DILocation(line: 81, column: 15, scope: !1379)
!1388 = !DILocalVariable(name: "getinfo", scope: !1379, file: !74, line: 82, type: !1389)
!1389 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "getinfo", file: !1390, line: 18, size: 96, elements: !1391)
!1390 = !DIFile(filename: "appl/Zephyr/app_kernel/src/receiver.h", directory: "/home/kenny/ara")
!1391 = !{!1392, !1393, !1394}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1389, file: !1390, line: 19, baseType: !61, size: 32)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1389, file: !1390, line: 20, baseType: !59, size: 32, offset: 32)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1389, file: !1390, line: 21, baseType: !61, size: 32, offset: 64)
!1395 = !DILocation(line: 82, column: 17, scope: !1379)
!1396 = !DILocation(line: 84, column: 2, scope: !1379)
!1397 = !DILocation(line: 85, column: 2, scope: !1379)
!1398 = !DILocation(line: 88, column: 2, scope: !1379)
!1399 = !DILocation(line: 89, column: 2, scope: !1379)
!1400 = !DILocation(line: 91, column: 2, scope: !1401)
!1401 = distinct !DILexicalBlock(scope: !1379, file: !74, line: 91, column: 2)
!1402 = !DILocation(line: 94, column: 2, scope: !1379)
!1403 = !DILocation(line: 95, column: 2, scope: !1379)
!1404 = !DILocation(line: 96, column: 2, scope: !1379)
!1405 = !DILocation(line: 97, column: 2, scope: !1379)
!1406 = !DILocation(line: 98, column: 2, scope: !1379)
!1407 = !DILocation(line: 100, column: 11, scope: !1379)
!1408 = !DILocation(line: 102, column: 10, scope: !1379)
!1409 = !DILocation(line: 103, column: 14, scope: !1379)
!1410 = !DILocation(line: 103, column: 23, scope: !1379)
!1411 = !DILocation(line: 103, column: 2, scope: !1379)
!1412 = !DILocation(line: 105, column: 23, scope: !1379)
!1413 = !DILocation(line: 105, column: 33, scope: !1379)
!1414 = !DILocation(line: 105, column: 2, scope: !1379)
!1415 = !DILocation(line: 106, column: 2, scope: !1416)
!1416 = distinct !DILexicalBlock(scope: !1379, file: !74, line: 106, column: 2)
!1417 = !DILocation(line: 107, column: 23, scope: !1379)
!1418 = !DILocation(line: 107, column: 21, scope: !1379)
!1419 = !DILocation(line: 108, column: 15, scope: !1420)
!1420 = distinct !DILexicalBlock(scope: !1379, file: !74, line: 108, column: 2)
!1421 = !DILocation(line: 108, column: 7, scope: !1420)
!1422 = !DILocation(line: 108, column: 21, scope: !1423)
!1423 = distinct !DILexicalBlock(scope: !1420, file: !74, line: 108, column: 2)
!1424 = !DILocation(line: 108, column: 29, scope: !1423)
!1425 = !DILocation(line: 108, column: 2, scope: !1420)
!1426 = !DILocation(line: 109, column: 15, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1423, file: !74, line: 108, column: 61)
!1428 = !DILocation(line: 109, column: 24, scope: !1427)
!1429 = !DILocation(line: 109, column: 3, scope: !1427)
!1430 = !DILocation(line: 111, column: 24, scope: !1427)
!1431 = !DILocation(line: 111, column: 34, scope: !1427)
!1432 = !DILocation(line: 111, column: 3, scope: !1427)
!1433 = !DILocation(line: 112, column: 3, scope: !1434)
!1434 = distinct !DILexicalBlock(scope: !1427, file: !74, line: 112, column: 3)
!1435 = !DILocation(line: 113, column: 2, scope: !1427)
!1436 = !DILocation(line: 108, column: 54, scope: !1423)
!1437 = !DILocation(line: 108, column: 2, scope: !1423)
!1438 = distinct !{!1438, !1425, !1439}
!1439 = !DILocation(line: 113, column: 2, scope: !1420)
!1440 = !DILocation(line: 114, column: 2, scope: !1379)
!1441 = !DILocation(line: 115, column: 2, scope: !1442)
!1442 = distinct !DILexicalBlock(scope: !1379, file: !74, line: 115, column: 2)
!1443 = !DILocation(line: 116, column: 2, scope: !1444)
!1444 = distinct !DILexicalBlock(scope: !1379, file: !74, line: 116, column: 2)
!1445 = !DILocation(line: 117, column: 1, scope: !1379)
!1446 = distinct !DISubprogram(name: "k_sem_reset", scope: !765, file: !765, line: 775, type: !1447, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1447 = !DISubroutineType(types: !1448)
!1448 = !{null, !233}
!1449 = !DILocalVariable(name: "sem", arg: 1, scope: !1446, file: !765, line: 775, type: !233)
!1450 = !DILocation(line: 775, column: 65, scope: !1446)
!1451 = !DILocation(line: 783, column: 2, scope: !1446)
!1452 = !DILocation(line: 783, column: 2, scope: !1453)
!1453 = distinct !DILexicalBlock(scope: !1446, file: !765, line: 783, column: 2)
!1454 = !{i32 -2141846069}
!1455 = !DILocation(line: 784, column: 21, scope: !1446)
!1456 = !DILocation(line: 784, column: 2, scope: !1446)
!1457 = !DILocation(line: 785, column: 1, scope: !1446)
!1458 = distinct !DISubprogram(name: "k_sem_give", scope: !765, file: !765, line: 761, type: !1447, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1459 = !DILocalVariable(name: "sem", arg: 1, scope: !1458, file: !765, line: 761, type: !233)
!1460 = !DILocation(line: 761, column: 64, scope: !1458)
!1461 = !DILocation(line: 769, column: 2, scope: !1458)
!1462 = !DILocation(line: 769, column: 2, scope: !1463)
!1463 = distinct !DILexicalBlock(scope: !1458, file: !765, line: 769, column: 2)
!1464 = !{i32 -2141846137}
!1465 = !DILocation(line: 770, column: 20, scope: !1458)
!1466 = !DILocation(line: 770, column: 2, scope: !1458)
!1467 = !DILocation(line: 771, column: 1, scope: !1458)
!1468 = distinct !DISubprogram(name: "mailbox_put", scope: !74, file: !74, line: 130, type: !1469, scopeLine: 131, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1469 = !DISubroutineType(types: !1470)
!1470 = !{null, !58, !61, !1471}
!1471 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !58, size: 32)
!1472 = !DILocalVariable(name: "size", arg: 1, scope: !1468, file: !74, line: 130, type: !58)
!1473 = !DILocation(line: 130, column: 27, scope: !1468)
!1474 = !DILocalVariable(name: "count", arg: 2, scope: !1468, file: !74, line: 130, type: !61)
!1475 = !DILocation(line: 130, column: 37, scope: !1468)
!1476 = !DILocalVariable(name: "time", arg: 3, scope: !1468, file: !74, line: 130, type: !1471)
!1477 = !DILocation(line: 130, column: 54, scope: !1468)
!1478 = !DILocalVariable(name: "i", scope: !1468, file: !74, line: 132, type: !61)
!1479 = !DILocation(line: 132, column: 6, scope: !1468)
!1480 = !DILocalVariable(name: "t", scope: !1468, file: !74, line: 133, type: !59)
!1481 = !DILocation(line: 133, column: 15, scope: !1468)
!1482 = !DILocation(line: 135, column: 27, scope: !1468)
!1483 = !DILocation(line: 136, column: 27, scope: !1468)
!1484 = !DILocation(line: 139, column: 2, scope: !1468)
!1485 = !DILocation(line: 140, column: 6, scope: !1468)
!1486 = !DILocation(line: 140, column: 4, scope: !1468)
!1487 = !DILocation(line: 141, column: 9, scope: !1488)
!1488 = distinct !DILexicalBlock(scope: !1468, file: !74, line: 141, column: 2)
!1489 = !DILocation(line: 141, column: 7, scope: !1488)
!1490 = !DILocation(line: 141, column: 14, scope: !1491)
!1491 = distinct !DILexicalBlock(scope: !1488, file: !74, line: 141, column: 2)
!1492 = !DILocation(line: 141, column: 18, scope: !1491)
!1493 = !DILocation(line: 141, column: 16, scope: !1491)
!1494 = !DILocation(line: 141, column: 2, scope: !1488)
!1495 = !DILocation(line: 142, column: 33, scope: !1496)
!1496 = distinct !DILexicalBlock(scope: !1491, file: !74, line: 141, column: 30)
!1497 = !DILocation(line: 142, column: 3, scope: !1496)
!1498 = !DILocation(line: 143, column: 2, scope: !1496)
!1499 = !DILocation(line: 141, column: 26, scope: !1491)
!1500 = !DILocation(line: 141, column: 2, scope: !1491)
!1501 = distinct !{!1501, !1494, !1502}
!1502 = !DILocation(line: 143, column: 2, scope: !1488)
!1503 = !DILocation(line: 144, column: 27, scope: !1468)
!1504 = !DILocation(line: 144, column: 6, scope: !1468)
!1505 = !DILocation(line: 144, column: 4, scope: !1468)
!1506 = !DILocation(line: 145, column: 10, scope: !1468)
!1507 = !DILocation(line: 145, column: 3, scope: !1468)
!1508 = !DILocation(line: 145, column: 8, scope: !1468)
!1509 = !DILocation(line: 146, column: 2, scope: !1468)
!1510 = !DILocation(line: 147, column: 1, scope: !1468)
!1511 = distinct !DISubprogram(name: "k_msgq_get", scope: !765, file: !765, line: 830, type: !1512, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1512 = !DISubroutineType(types: !1513)
!1513 = !{!61, !1514, !60, !1527}
!1514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1515, size: 32)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !1515, file: !6, line: 3850, baseType: !111, size: 64)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !1515, file: !6, line: 3852, baseType: !131, size: 32, offset: 64)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !1515, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !1515, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !1515, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !1515, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !1515, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !1515, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !1515, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1515, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!1527 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !1528)
!1528 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !1529)
!1529 = !{!1530}
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !1528, file: !54, line: 68, baseType: !53, size: 64)
!1531 = !DILocalVariable(name: "msgq", arg: 1, scope: !1511, file: !765, line: 830, type: !1514)
!1532 = !DILocation(line: 830, column: 64, scope: !1511)
!1533 = !DILocalVariable(name: "data", arg: 2, scope: !1511, file: !765, line: 830, type: !60)
!1534 = !DILocation(line: 830, column: 77, scope: !1511)
!1535 = !DILocalVariable(name: "timeout", arg: 3, scope: !1511, file: !765, line: 830, type: !1527)
!1536 = !DILocation(line: 830, column: 95, scope: !1511)
!1537 = !DILocation(line: 839, column: 2, scope: !1511)
!1538 = !DILocation(line: 839, column: 2, scope: !1539)
!1539 = distinct !DILexicalBlock(scope: !1511, file: !765, line: 839, column: 2)
!1540 = !{i32 -2141845797}
!1541 = !DILocation(line: 840, column: 27, scope: !1511)
!1542 = !DILocation(line: 840, column: 33, scope: !1511)
!1543 = !DILocation(line: 840, column: 9, scope: !1511)
!1544 = !DILocation(line: 840, column: 2, scope: !1511)
!1545 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1546 = !DILocalVariable(name: "et", scope: !1545, file: !573, line: 177, type: !58)
!1547 = !DILocation(line: 177, column: 11, scope: !1545)
!1548 = !DILocation(line: 179, column: 2, scope: !1545)
!1549 = !DILocation(line: 180, column: 7, scope: !1545)
!1550 = !DILocation(line: 180, column: 5, scope: !1545)
!1551 = !DILocation(line: 181, column: 9, scope: !1545)
!1552 = !DILocation(line: 181, column: 2, scope: !1545)
!1553 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1554 = !DILocalVariable(name: "ts", arg: 1, scope: !1553, file: !63, line: 33, type: !58)
!1555 = !DILocation(line: 33, column: 54, scope: !1553)
!1556 = !DILocalVariable(name: "t", scope: !1553, file: !63, line: 35, type: !58)
!1557 = !DILocation(line: 35, column: 11, scope: !1553)
!1558 = !DILocation(line: 38, column: 2, scope: !1553)
!1559 = !DILocation(line: 40, column: 6, scope: !1553)
!1560 = !DILocation(line: 40, column: 4, scope: !1553)
!1561 = !DILocalVariable(name: "res", scope: !1553, file: !63, line: 41, type: !58)
!1562 = !DILocation(line: 41, column: 11, scope: !1553)
!1563 = !DILocation(line: 41, column: 18, scope: !1553)
!1564 = !DILocation(line: 41, column: 23, scope: !1553)
!1565 = !DILocation(line: 41, column: 20, scope: !1553)
!1566 = !DILocation(line: 41, column: 17, scope: !1553)
!1567 = !DILocation(line: 41, column: 30, scope: !1553)
!1568 = !DILocation(line: 41, column: 34, scope: !1553)
!1569 = !DILocation(line: 41, column: 32, scope: !1553)
!1570 = !DILocation(line: 41, column: 53, scope: !1553)
!1571 = !DILocation(line: 41, column: 51, scope: !1553)
!1572 = !DILocation(line: 41, column: 58, scope: !1553)
!1573 = !DILocation(line: 41, column: 56, scope: !1553)
!1574 = !DILocation(line: 43, column: 6, scope: !1575)
!1575 = distinct !DILexicalBlock(scope: !1553, file: !63, line: 43, column: 6)
!1576 = !DILocation(line: 43, column: 9, scope: !1575)
!1577 = !DILocation(line: 43, column: 6, scope: !1553)
!1578 = !DILocation(line: 44, column: 10, scope: !1579)
!1579 = distinct !DILexicalBlock(scope: !1575, file: !63, line: 43, column: 14)
!1580 = !DILocation(line: 44, column: 7, scope: !1579)
!1581 = !DILocation(line: 45, column: 2, scope: !1579)
!1582 = !DILocation(line: 46, column: 9, scope: !1553)
!1583 = !DILocation(line: 46, column: 2, scope: !1553)
!1584 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1585 = !DILocalVariable(name: "t", arg: 1, scope: !1586, file: !856, line: 78, type: !69)
!1586 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1587 = !DILocation(line: 78, column: 63, scope: !1586, inlinedAt: !1588)
!1588 = distinct !DILocation(line: 904, column: 9, scope: !1584)
!1589 = !DILocalVariable(name: "from_hz", arg: 2, scope: !1586, file: !856, line: 78, type: !58)
!1590 = !DILocation(line: 78, column: 75, scope: !1586, inlinedAt: !1588)
!1591 = !DILocalVariable(name: "to_hz", arg: 3, scope: !1586, file: !856, line: 79, type: !58)
!1592 = !DILocation(line: 79, column: 18, scope: !1586, inlinedAt: !1588)
!1593 = !DILocalVariable(name: "const_hz", arg: 4, scope: !1586, file: !856, line: 79, type: !863)
!1594 = !DILocation(line: 79, column: 30, scope: !1586, inlinedAt: !1588)
!1595 = !DILocalVariable(name: "result32", arg: 5, scope: !1586, file: !856, line: 80, type: !863)
!1596 = !DILocation(line: 80, column: 14, scope: !1586, inlinedAt: !1588)
!1597 = !DILocalVariable(name: "round_up", arg: 6, scope: !1586, file: !856, line: 80, type: !863)
!1598 = !DILocation(line: 80, column: 29, scope: !1586, inlinedAt: !1588)
!1599 = !DILocalVariable(name: "round_off", arg: 7, scope: !1586, file: !856, line: 81, type: !863)
!1600 = !DILocation(line: 81, column: 14, scope: !1586, inlinedAt: !1588)
!1601 = !DILocalVariable(name: "mul_ratio", scope: !1586, file: !856, line: 84, type: !863)
!1602 = !DILocation(line: 84, column: 7, scope: !1586, inlinedAt: !1588)
!1603 = !DILocalVariable(name: "div_ratio", scope: !1586, file: !856, line: 86, type: !863)
!1604 = !DILocation(line: 86, column: 7, scope: !1586, inlinedAt: !1588)
!1605 = !DILocalVariable(name: "off", scope: !1586, file: !856, line: 93, type: !69)
!1606 = !DILocation(line: 93, column: 11, scope: !1586, inlinedAt: !1588)
!1607 = !DILocalVariable(name: "rdivisor", scope: !1608, file: !856, line: 96, type: !58)
!1608 = distinct !DILexicalBlock(scope: !1609, file: !856, line: 95, column: 18)
!1609 = distinct !DILexicalBlock(scope: !1586, file: !856, line: 95, column: 6)
!1610 = !DILocation(line: 96, column: 12, scope: !1608, inlinedAt: !1588)
!1611 = !DILocalVariable(name: "t", arg: 1, scope: !1584, file: !856, line: 901, type: !69)
!1612 = !DILocation(line: 901, column: 68, scope: !1584)
!1613 = !DILocation(line: 904, column: 17, scope: !1584)
!1614 = !DILocation(line: 904, column: 20, scope: !1584)
!1615 = !DILocation(line: 84, column: 19, scope: !1586, inlinedAt: !1588)
!1616 = !DILocation(line: 84, column: 28, scope: !1586, inlinedAt: !1588)
!1617 = !DILocation(line: 85, column: 4, scope: !1586, inlinedAt: !1588)
!1618 = !DILocation(line: 85, column: 12, scope: !1586, inlinedAt: !1588)
!1619 = !DILocation(line: 85, column: 10, scope: !1586, inlinedAt: !1588)
!1620 = !DILocation(line: 85, column: 21, scope: !1586, inlinedAt: !1588)
!1621 = !DILocation(line: 85, column: 26, scope: !1586, inlinedAt: !1588)
!1622 = !DILocation(line: 85, column: 34, scope: !1586, inlinedAt: !1588)
!1623 = !DILocation(line: 85, column: 32, scope: !1586, inlinedAt: !1588)
!1624 = !DILocation(line: 85, column: 43, scope: !1586, inlinedAt: !1588)
!1625 = !DILocation(line: 0, scope: !1586, inlinedAt: !1588)
!1626 = !DILocation(line: 86, column: 19, scope: !1586, inlinedAt: !1588)
!1627 = !DILocation(line: 86, column: 28, scope: !1586, inlinedAt: !1588)
!1628 = !DILocation(line: 87, column: 4, scope: !1586, inlinedAt: !1588)
!1629 = !DILocation(line: 87, column: 14, scope: !1586, inlinedAt: !1588)
!1630 = !DILocation(line: 87, column: 12, scope: !1586, inlinedAt: !1588)
!1631 = !DILocation(line: 87, column: 21, scope: !1586, inlinedAt: !1588)
!1632 = !DILocation(line: 87, column: 26, scope: !1586, inlinedAt: !1588)
!1633 = !DILocation(line: 87, column: 36, scope: !1586, inlinedAt: !1588)
!1634 = !DILocation(line: 87, column: 34, scope: !1586, inlinedAt: !1588)
!1635 = !DILocation(line: 87, column: 43, scope: !1586, inlinedAt: !1588)
!1636 = !DILocation(line: 89, column: 6, scope: !1637, inlinedAt: !1588)
!1637 = distinct !DILexicalBlock(scope: !1586, file: !856, line: 89, column: 6)
!1638 = !DILocation(line: 89, column: 17, scope: !1637, inlinedAt: !1588)
!1639 = !DILocation(line: 89, column: 14, scope: !1637, inlinedAt: !1588)
!1640 = !DILocation(line: 89, column: 6, scope: !1586, inlinedAt: !1588)
!1641 = !DILocation(line: 90, column: 10, scope: !1642, inlinedAt: !1588)
!1642 = distinct !DILexicalBlock(scope: !1637, file: !856, line: 89, column: 24)
!1643 = !DILocation(line: 90, column: 32, scope: !1642, inlinedAt: !1588)
!1644 = !DILocation(line: 90, column: 22, scope: !1642, inlinedAt: !1588)
!1645 = !DILocation(line: 90, column: 21, scope: !1642, inlinedAt: !1588)
!1646 = !DILocation(line: 90, column: 37, scope: !1642, inlinedAt: !1588)
!1647 = !DILocation(line: 90, column: 3, scope: !1642, inlinedAt: !1588)
!1648 = !DILocation(line: 95, column: 7, scope: !1609, inlinedAt: !1588)
!1649 = !DILocation(line: 95, column: 6, scope: !1586, inlinedAt: !1588)
!1650 = !DILocation(line: 96, column: 23, scope: !1608, inlinedAt: !1588)
!1651 = !DILocation(line: 96, column: 36, scope: !1608, inlinedAt: !1588)
!1652 = !DILocation(line: 96, column: 46, scope: !1608, inlinedAt: !1588)
!1653 = !DILocation(line: 96, column: 44, scope: !1608, inlinedAt: !1588)
!1654 = !DILocation(line: 96, column: 55, scope: !1608, inlinedAt: !1588)
!1655 = !DILocation(line: 98, column: 7, scope: !1656, inlinedAt: !1588)
!1656 = distinct !DILexicalBlock(scope: !1608, file: !856, line: 98, column: 7)
!1657 = !DILocation(line: 98, column: 7, scope: !1608, inlinedAt: !1588)
!1658 = !DILocation(line: 99, column: 10, scope: !1659, inlinedAt: !1588)
!1659 = distinct !DILexicalBlock(scope: !1656, file: !856, line: 98, column: 17)
!1660 = !DILocation(line: 99, column: 19, scope: !1659, inlinedAt: !1588)
!1661 = !DILocation(line: 99, column: 8, scope: !1659, inlinedAt: !1588)
!1662 = !DILocation(line: 100, column: 3, scope: !1659, inlinedAt: !1588)
!1663 = !DILocation(line: 100, column: 14, scope: !1664, inlinedAt: !1588)
!1664 = distinct !DILexicalBlock(scope: !1656, file: !856, line: 100, column: 14)
!1665 = !DILocation(line: 100, column: 14, scope: !1656, inlinedAt: !1588)
!1666 = !DILocation(line: 101, column: 10, scope: !1667, inlinedAt: !1588)
!1667 = distinct !DILexicalBlock(scope: !1664, file: !856, line: 100, column: 25)
!1668 = !DILocation(line: 101, column: 19, scope: !1667, inlinedAt: !1588)
!1669 = !DILocation(line: 101, column: 8, scope: !1667, inlinedAt: !1588)
!1670 = !DILocation(line: 102, column: 3, scope: !1667, inlinedAt: !1588)
!1671 = !DILocation(line: 103, column: 2, scope: !1608, inlinedAt: !1588)
!1672 = !DILocation(line: 110, column: 6, scope: !1673, inlinedAt: !1588)
!1673 = distinct !DILexicalBlock(scope: !1586, file: !856, line: 110, column: 6)
!1674 = !DILocation(line: 110, column: 6, scope: !1586, inlinedAt: !1588)
!1675 = !DILocation(line: 111, column: 8, scope: !1676, inlinedAt: !1588)
!1676 = distinct !DILexicalBlock(scope: !1673, file: !856, line: 110, column: 17)
!1677 = !DILocation(line: 111, column: 5, scope: !1676, inlinedAt: !1588)
!1678 = !DILocation(line: 112, column: 7, scope: !1679, inlinedAt: !1588)
!1679 = distinct !DILexicalBlock(scope: !1676, file: !856, line: 112, column: 7)
!1680 = !DILocation(line: 112, column: 16, scope: !1679, inlinedAt: !1588)
!1681 = !DILocation(line: 112, column: 20, scope: !1679, inlinedAt: !1588)
!1682 = !DILocation(line: 112, column: 22, scope: !1679, inlinedAt: !1588)
!1683 = !DILocation(line: 112, column: 7, scope: !1676, inlinedAt: !1588)
!1684 = !DILocation(line: 113, column: 22, scope: !1685, inlinedAt: !1588)
!1685 = distinct !DILexicalBlock(scope: !1679, file: !856, line: 112, column: 36)
!1686 = !DILocation(line: 113, column: 12, scope: !1685, inlinedAt: !1588)
!1687 = !DILocation(line: 113, column: 28, scope: !1685, inlinedAt: !1588)
!1688 = !DILocation(line: 113, column: 38, scope: !1685, inlinedAt: !1588)
!1689 = !DILocation(line: 113, column: 36, scope: !1685, inlinedAt: !1588)
!1690 = !DILocation(line: 113, column: 25, scope: !1685, inlinedAt: !1588)
!1691 = !DILocation(line: 113, column: 11, scope: !1685, inlinedAt: !1588)
!1692 = !DILocation(line: 113, column: 4, scope: !1685, inlinedAt: !1588)
!1693 = !DILocation(line: 115, column: 11, scope: !1694, inlinedAt: !1588)
!1694 = distinct !DILexicalBlock(scope: !1679, file: !856, line: 114, column: 10)
!1695 = !DILocation(line: 115, column: 16, scope: !1694, inlinedAt: !1588)
!1696 = !DILocation(line: 115, column: 26, scope: !1694, inlinedAt: !1588)
!1697 = !DILocation(line: 115, column: 24, scope: !1694, inlinedAt: !1588)
!1698 = !DILocation(line: 115, column: 15, scope: !1694, inlinedAt: !1588)
!1699 = !DILocation(line: 115, column: 13, scope: !1694, inlinedAt: !1588)
!1700 = !DILocation(line: 115, column: 4, scope: !1694, inlinedAt: !1588)
!1701 = !DILocation(line: 117, column: 13, scope: !1702, inlinedAt: !1588)
!1702 = distinct !DILexicalBlock(scope: !1673, file: !856, line: 117, column: 13)
!1703 = !DILocation(line: 117, column: 13, scope: !1673, inlinedAt: !1588)
!1704 = !DILocation(line: 118, column: 7, scope: !1705, inlinedAt: !1588)
!1705 = distinct !DILexicalBlock(scope: !1706, file: !856, line: 118, column: 7)
!1706 = distinct !DILexicalBlock(scope: !1702, file: !856, line: 117, column: 24)
!1707 = !DILocation(line: 118, column: 7, scope: !1706, inlinedAt: !1588)
!1708 = !DILocation(line: 119, column: 22, scope: !1709, inlinedAt: !1588)
!1709 = distinct !DILexicalBlock(scope: !1705, file: !856, line: 118, column: 17)
!1710 = !DILocation(line: 119, column: 12, scope: !1709, inlinedAt: !1588)
!1711 = !DILocation(line: 119, column: 28, scope: !1709, inlinedAt: !1588)
!1712 = !DILocation(line: 119, column: 36, scope: !1709, inlinedAt: !1588)
!1713 = !DILocation(line: 119, column: 34, scope: !1709, inlinedAt: !1588)
!1714 = !DILocation(line: 119, column: 25, scope: !1709, inlinedAt: !1588)
!1715 = !DILocation(line: 119, column: 11, scope: !1709, inlinedAt: !1588)
!1716 = !DILocation(line: 119, column: 4, scope: !1709, inlinedAt: !1588)
!1717 = !DILocation(line: 121, column: 11, scope: !1718, inlinedAt: !1588)
!1718 = distinct !DILexicalBlock(scope: !1705, file: !856, line: 120, column: 10)
!1719 = !DILocation(line: 121, column: 16, scope: !1718, inlinedAt: !1588)
!1720 = !DILocation(line: 121, column: 24, scope: !1718, inlinedAt: !1588)
!1721 = !DILocation(line: 121, column: 22, scope: !1718, inlinedAt: !1588)
!1722 = !DILocation(line: 121, column: 15, scope: !1718, inlinedAt: !1588)
!1723 = !DILocation(line: 121, column: 13, scope: !1718, inlinedAt: !1588)
!1724 = !DILocation(line: 121, column: 4, scope: !1718, inlinedAt: !1588)
!1725 = !DILocation(line: 124, column: 7, scope: !1726, inlinedAt: !1588)
!1726 = distinct !DILexicalBlock(scope: !1727, file: !856, line: 124, column: 7)
!1727 = distinct !DILexicalBlock(scope: !1702, file: !856, line: 123, column: 9)
!1728 = !DILocation(line: 124, column: 7, scope: !1727, inlinedAt: !1588)
!1729 = !DILocation(line: 125, column: 23, scope: !1730, inlinedAt: !1588)
!1730 = distinct !DILexicalBlock(scope: !1726, file: !856, line: 124, column: 17)
!1731 = !DILocation(line: 125, column: 27, scope: !1730, inlinedAt: !1588)
!1732 = !DILocation(line: 125, column: 25, scope: !1730, inlinedAt: !1588)
!1733 = !DILocation(line: 125, column: 35, scope: !1730, inlinedAt: !1588)
!1734 = !DILocation(line: 125, column: 33, scope: !1730, inlinedAt: !1588)
!1735 = !DILocation(line: 125, column: 42, scope: !1730, inlinedAt: !1588)
!1736 = !DILocation(line: 125, column: 40, scope: !1730, inlinedAt: !1588)
!1737 = !DILocation(line: 125, column: 11, scope: !1730, inlinedAt: !1588)
!1738 = !DILocation(line: 125, column: 4, scope: !1730, inlinedAt: !1588)
!1739 = !DILocation(line: 127, column: 12, scope: !1740, inlinedAt: !1588)
!1740 = distinct !DILexicalBlock(scope: !1726, file: !856, line: 126, column: 10)
!1741 = !DILocation(line: 127, column: 16, scope: !1740, inlinedAt: !1588)
!1742 = !DILocation(line: 127, column: 14, scope: !1740, inlinedAt: !1588)
!1743 = !DILocation(line: 127, column: 24, scope: !1740, inlinedAt: !1588)
!1744 = !DILocation(line: 127, column: 22, scope: !1740, inlinedAt: !1588)
!1745 = !DILocation(line: 127, column: 31, scope: !1740, inlinedAt: !1588)
!1746 = !DILocation(line: 127, column: 29, scope: !1740, inlinedAt: !1588)
!1747 = !DILocation(line: 127, column: 4, scope: !1740, inlinedAt: !1588)
!1748 = !DILocation(line: 130, column: 1, scope: !1586, inlinedAt: !1588)
!1749 = !DILocation(line: 904, column: 2, scope: !1584)
!1750 = distinct !DISubprogram(name: "check_result", scope: !573, file: !573, line: 184, type: !206, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1751 = !DILocation(line: 186, column: 6, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1750, file: !573, line: 186, column: 6)
!1753 = !DILocation(line: 186, column: 23, scope: !1752)
!1754 = !DILocation(line: 186, column: 6, scope: !1750)
!1755 = !DILocation(line: 187, column: 3, scope: !1756)
!1756 = distinct !DILexicalBlock(scope: !1757, file: !573, line: 187, column: 3)
!1757 = distinct !DILexicalBlock(scope: !1752, file: !573, line: 186, column: 28)
!1758 = !DILocation(line: 188, column: 3, scope: !1757)
!1759 = !DILocation(line: 190, column: 1, scope: !1750)
!1760 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1761 = !DILocation(line: 82, column: 20, scope: !1760)
!1762 = !DILocation(line: 82, column: 18, scope: !1760)
!1763 = !DILocation(line: 90, column: 6, scope: !1764)
!1764 = distinct !DILexicalBlock(scope: !1760, file: !63, line: 90, column: 6)
!1765 = !DILocation(line: 90, column: 22, scope: !1764)
!1766 = !DILocation(line: 90, column: 6, scope: !1760)
!1767 = !DILocation(line: 91, column: 3, scope: !1768)
!1768 = distinct !DILexicalBlock(scope: !1764, file: !63, line: 90, column: 39)
!1769 = !DILocation(line: 93, column: 2, scope: !1760)
!1770 = !DILocation(line: 94, column: 1, scope: !1760)
!1771 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1772 = !DILocalVariable(name: "reftime", arg: 1, scope: !1771, file: !6, line: 2133, type: !1088)
!1773 = !DILocation(line: 2133, column: 47, scope: !1771)
!1774 = !DILocalVariable(name: "uptime", scope: !1771, file: !6, line: 2135, type: !55)
!1775 = !DILocation(line: 2135, column: 10, scope: !1771)
!1776 = !DILocalVariable(name: "delta", scope: !1771, file: !6, line: 2135, type: !55)
!1777 = !DILocation(line: 2135, column: 18, scope: !1771)
!1778 = !DILocation(line: 2137, column: 11, scope: !1771)
!1779 = !DILocation(line: 2137, column: 9, scope: !1771)
!1780 = !DILocation(line: 2138, column: 10, scope: !1771)
!1781 = !DILocation(line: 2138, column: 20, scope: !1771)
!1782 = !DILocation(line: 2138, column: 19, scope: !1771)
!1783 = !DILocation(line: 2138, column: 17, scope: !1771)
!1784 = !DILocation(line: 2138, column: 8, scope: !1771)
!1785 = !DILocation(line: 2139, column: 13, scope: !1771)
!1786 = !DILocation(line: 2139, column: 3, scope: !1771)
!1787 = !DILocation(line: 2139, column: 11, scope: !1771)
!1788 = !DILocation(line: 2141, column: 9, scope: !1771)
!1789 = !DILocation(line: 2141, column: 2, scope: !1771)
!1790 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1791 = !DILocation(line: 2061, column: 31, scope: !1790)
!1792 = !DILocation(line: 2061, column: 9, scope: !1790)
!1793 = !DILocation(line: 2061, column: 2, scope: !1790)
!1794 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1795 = !DILocation(line: 509, column: 2, scope: !1794)
!1796 = !DILocation(line: 509, column: 2, scope: !1797)
!1797 = distinct !DILexicalBlock(scope: !1794, file: !765, line: 509, column: 2)
!1798 = !{i32 -2141847441}
!1799 = !DILocation(line: 510, column: 9, scope: !1794)
!1800 = !DILocation(line: 510, column: 2, scope: !1794)
!1801 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1802 = !DILocation(line: 78, column: 63, scope: !1586, inlinedAt: !1803)
!1803 = distinct !DILocation(line: 1072, column: 9, scope: !1801)
!1804 = !DILocation(line: 78, column: 75, scope: !1586, inlinedAt: !1803)
!1805 = !DILocation(line: 79, column: 18, scope: !1586, inlinedAt: !1803)
!1806 = !DILocation(line: 79, column: 30, scope: !1586, inlinedAt: !1803)
!1807 = !DILocation(line: 80, column: 14, scope: !1586, inlinedAt: !1803)
!1808 = !DILocation(line: 80, column: 29, scope: !1586, inlinedAt: !1803)
!1809 = !DILocation(line: 81, column: 14, scope: !1586, inlinedAt: !1803)
!1810 = !DILocation(line: 84, column: 7, scope: !1586, inlinedAt: !1803)
!1811 = !DILocation(line: 86, column: 7, scope: !1586, inlinedAt: !1803)
!1812 = !DILocation(line: 93, column: 11, scope: !1586, inlinedAt: !1803)
!1813 = !DILocation(line: 96, column: 12, scope: !1608, inlinedAt: !1803)
!1814 = !DILocalVariable(name: "t", arg: 1, scope: !1801, file: !856, line: 1069, type: !69)
!1815 = !DILocation(line: 1069, column: 70, scope: !1801)
!1816 = !DILocation(line: 1072, column: 17, scope: !1801)
!1817 = !DILocation(line: 84, column: 19, scope: !1586, inlinedAt: !1803)
!1818 = !DILocation(line: 84, column: 28, scope: !1586, inlinedAt: !1803)
!1819 = !DILocation(line: 85, column: 4, scope: !1586, inlinedAt: !1803)
!1820 = !DILocation(line: 85, column: 12, scope: !1586, inlinedAt: !1803)
!1821 = !DILocation(line: 85, column: 10, scope: !1586, inlinedAt: !1803)
!1822 = !DILocation(line: 85, column: 21, scope: !1586, inlinedAt: !1803)
!1823 = !DILocation(line: 85, column: 26, scope: !1586, inlinedAt: !1803)
!1824 = !DILocation(line: 85, column: 34, scope: !1586, inlinedAt: !1803)
!1825 = !DILocation(line: 85, column: 32, scope: !1586, inlinedAt: !1803)
!1826 = !DILocation(line: 85, column: 43, scope: !1586, inlinedAt: !1803)
!1827 = !DILocation(line: 0, scope: !1586, inlinedAt: !1803)
!1828 = !DILocation(line: 86, column: 19, scope: !1586, inlinedAt: !1803)
!1829 = !DILocation(line: 86, column: 28, scope: !1586, inlinedAt: !1803)
!1830 = !DILocation(line: 87, column: 4, scope: !1586, inlinedAt: !1803)
!1831 = !DILocation(line: 87, column: 14, scope: !1586, inlinedAt: !1803)
!1832 = !DILocation(line: 87, column: 12, scope: !1586, inlinedAt: !1803)
!1833 = !DILocation(line: 87, column: 21, scope: !1586, inlinedAt: !1803)
!1834 = !DILocation(line: 87, column: 26, scope: !1586, inlinedAt: !1803)
!1835 = !DILocation(line: 87, column: 36, scope: !1586, inlinedAt: !1803)
!1836 = !DILocation(line: 87, column: 34, scope: !1586, inlinedAt: !1803)
!1837 = !DILocation(line: 87, column: 43, scope: !1586, inlinedAt: !1803)
!1838 = !DILocation(line: 89, column: 6, scope: !1637, inlinedAt: !1803)
!1839 = !DILocation(line: 89, column: 17, scope: !1637, inlinedAt: !1803)
!1840 = !DILocation(line: 89, column: 14, scope: !1637, inlinedAt: !1803)
!1841 = !DILocation(line: 89, column: 6, scope: !1586, inlinedAt: !1803)
!1842 = !DILocation(line: 90, column: 10, scope: !1642, inlinedAt: !1803)
!1843 = !DILocation(line: 90, column: 32, scope: !1642, inlinedAt: !1803)
!1844 = !DILocation(line: 90, column: 22, scope: !1642, inlinedAt: !1803)
!1845 = !DILocation(line: 90, column: 21, scope: !1642, inlinedAt: !1803)
!1846 = !DILocation(line: 90, column: 37, scope: !1642, inlinedAt: !1803)
!1847 = !DILocation(line: 90, column: 3, scope: !1642, inlinedAt: !1803)
!1848 = !DILocation(line: 95, column: 7, scope: !1609, inlinedAt: !1803)
!1849 = !DILocation(line: 95, column: 6, scope: !1586, inlinedAt: !1803)
!1850 = !DILocation(line: 96, column: 23, scope: !1608, inlinedAt: !1803)
!1851 = !DILocation(line: 96, column: 36, scope: !1608, inlinedAt: !1803)
!1852 = !DILocation(line: 96, column: 46, scope: !1608, inlinedAt: !1803)
!1853 = !DILocation(line: 96, column: 44, scope: !1608, inlinedAt: !1803)
!1854 = !DILocation(line: 96, column: 55, scope: !1608, inlinedAt: !1803)
!1855 = !DILocation(line: 98, column: 7, scope: !1656, inlinedAt: !1803)
!1856 = !DILocation(line: 98, column: 7, scope: !1608, inlinedAt: !1803)
!1857 = !DILocation(line: 99, column: 10, scope: !1659, inlinedAt: !1803)
!1858 = !DILocation(line: 99, column: 19, scope: !1659, inlinedAt: !1803)
!1859 = !DILocation(line: 99, column: 8, scope: !1659, inlinedAt: !1803)
!1860 = !DILocation(line: 100, column: 3, scope: !1659, inlinedAt: !1803)
!1861 = !DILocation(line: 100, column: 14, scope: !1664, inlinedAt: !1803)
!1862 = !DILocation(line: 100, column: 14, scope: !1656, inlinedAt: !1803)
!1863 = !DILocation(line: 101, column: 10, scope: !1667, inlinedAt: !1803)
!1864 = !DILocation(line: 101, column: 19, scope: !1667, inlinedAt: !1803)
!1865 = !DILocation(line: 101, column: 8, scope: !1667, inlinedAt: !1803)
!1866 = !DILocation(line: 102, column: 3, scope: !1667, inlinedAt: !1803)
!1867 = !DILocation(line: 103, column: 2, scope: !1608, inlinedAt: !1803)
!1868 = !DILocation(line: 110, column: 6, scope: !1673, inlinedAt: !1803)
!1869 = !DILocation(line: 110, column: 6, scope: !1586, inlinedAt: !1803)
!1870 = !DILocation(line: 111, column: 8, scope: !1676, inlinedAt: !1803)
!1871 = !DILocation(line: 111, column: 5, scope: !1676, inlinedAt: !1803)
!1872 = !DILocation(line: 112, column: 7, scope: !1679, inlinedAt: !1803)
!1873 = !DILocation(line: 112, column: 16, scope: !1679, inlinedAt: !1803)
!1874 = !DILocation(line: 112, column: 20, scope: !1679, inlinedAt: !1803)
!1875 = !DILocation(line: 112, column: 22, scope: !1679, inlinedAt: !1803)
!1876 = !DILocation(line: 112, column: 7, scope: !1676, inlinedAt: !1803)
!1877 = !DILocation(line: 113, column: 22, scope: !1685, inlinedAt: !1803)
!1878 = !DILocation(line: 113, column: 12, scope: !1685, inlinedAt: !1803)
!1879 = !DILocation(line: 113, column: 28, scope: !1685, inlinedAt: !1803)
!1880 = !DILocation(line: 113, column: 38, scope: !1685, inlinedAt: !1803)
!1881 = !DILocation(line: 113, column: 36, scope: !1685, inlinedAt: !1803)
!1882 = !DILocation(line: 113, column: 25, scope: !1685, inlinedAt: !1803)
!1883 = !DILocation(line: 113, column: 11, scope: !1685, inlinedAt: !1803)
!1884 = !DILocation(line: 113, column: 4, scope: !1685, inlinedAt: !1803)
!1885 = !DILocation(line: 115, column: 11, scope: !1694, inlinedAt: !1803)
!1886 = !DILocation(line: 115, column: 16, scope: !1694, inlinedAt: !1803)
!1887 = !DILocation(line: 115, column: 26, scope: !1694, inlinedAt: !1803)
!1888 = !DILocation(line: 115, column: 24, scope: !1694, inlinedAt: !1803)
!1889 = !DILocation(line: 115, column: 15, scope: !1694, inlinedAt: !1803)
!1890 = !DILocation(line: 115, column: 13, scope: !1694, inlinedAt: !1803)
!1891 = !DILocation(line: 115, column: 4, scope: !1694, inlinedAt: !1803)
!1892 = !DILocation(line: 117, column: 13, scope: !1702, inlinedAt: !1803)
!1893 = !DILocation(line: 117, column: 13, scope: !1673, inlinedAt: !1803)
!1894 = !DILocation(line: 118, column: 7, scope: !1705, inlinedAt: !1803)
!1895 = !DILocation(line: 118, column: 7, scope: !1706, inlinedAt: !1803)
!1896 = !DILocation(line: 119, column: 22, scope: !1709, inlinedAt: !1803)
!1897 = !DILocation(line: 119, column: 12, scope: !1709, inlinedAt: !1803)
!1898 = !DILocation(line: 119, column: 28, scope: !1709, inlinedAt: !1803)
!1899 = !DILocation(line: 119, column: 36, scope: !1709, inlinedAt: !1803)
!1900 = !DILocation(line: 119, column: 34, scope: !1709, inlinedAt: !1803)
!1901 = !DILocation(line: 119, column: 25, scope: !1709, inlinedAt: !1803)
!1902 = !DILocation(line: 119, column: 11, scope: !1709, inlinedAt: !1803)
!1903 = !DILocation(line: 119, column: 4, scope: !1709, inlinedAt: !1803)
!1904 = !DILocation(line: 121, column: 11, scope: !1718, inlinedAt: !1803)
!1905 = !DILocation(line: 121, column: 16, scope: !1718, inlinedAt: !1803)
!1906 = !DILocation(line: 121, column: 24, scope: !1718, inlinedAt: !1803)
!1907 = !DILocation(line: 121, column: 22, scope: !1718, inlinedAt: !1803)
!1908 = !DILocation(line: 121, column: 15, scope: !1718, inlinedAt: !1803)
!1909 = !DILocation(line: 121, column: 13, scope: !1718, inlinedAt: !1803)
!1910 = !DILocation(line: 121, column: 4, scope: !1718, inlinedAt: !1803)
!1911 = !DILocation(line: 124, column: 7, scope: !1726, inlinedAt: !1803)
!1912 = !DILocation(line: 124, column: 7, scope: !1727, inlinedAt: !1803)
!1913 = !DILocation(line: 125, column: 23, scope: !1730, inlinedAt: !1803)
!1914 = !DILocation(line: 125, column: 27, scope: !1730, inlinedAt: !1803)
!1915 = !DILocation(line: 125, column: 25, scope: !1730, inlinedAt: !1803)
!1916 = !DILocation(line: 125, column: 35, scope: !1730, inlinedAt: !1803)
!1917 = !DILocation(line: 125, column: 33, scope: !1730, inlinedAt: !1803)
!1918 = !DILocation(line: 125, column: 42, scope: !1730, inlinedAt: !1803)
!1919 = !DILocation(line: 125, column: 40, scope: !1730, inlinedAt: !1803)
!1920 = !DILocation(line: 125, column: 11, scope: !1730, inlinedAt: !1803)
!1921 = !DILocation(line: 125, column: 4, scope: !1730, inlinedAt: !1803)
!1922 = !DILocation(line: 127, column: 12, scope: !1740, inlinedAt: !1803)
!1923 = !DILocation(line: 127, column: 16, scope: !1740, inlinedAt: !1803)
!1924 = !DILocation(line: 127, column: 14, scope: !1740, inlinedAt: !1803)
!1925 = !DILocation(line: 127, column: 24, scope: !1740, inlinedAt: !1803)
!1926 = !DILocation(line: 127, column: 22, scope: !1740, inlinedAt: !1803)
!1927 = !DILocation(line: 127, column: 31, scope: !1740, inlinedAt: !1803)
!1928 = !DILocation(line: 127, column: 29, scope: !1740, inlinedAt: !1803)
!1929 = !DILocation(line: 127, column: 4, scope: !1740, inlinedAt: !1803)
!1930 = !DILocation(line: 130, column: 1, scope: !1586, inlinedAt: !1803)
!1931 = !DILocation(line: 1072, column: 2, scope: !1801)
!1932 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1933 = !DILocation(line: 55, column: 2, scope: !1932)
!1934 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1935 = !DILocation(line: 935, column: 3, scope: !1936, inlinedAt: !1937)
!1936 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1937 = distinct !DILocation(line: 31, column: 2, scope: !1934)
!1938 = !{i32 2227685}
!1939 = !DILocation(line: 32, column: 1, scope: !1934)
!1940 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1941 = !DILocation(line: 2174, column: 9, scope: !1940)
!1942 = !DILocation(line: 2174, column: 2, scope: !1940)
!1943 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1944 = !DILocation(line: 26, column: 9, scope: !1943)
!1945 = !DILocation(line: 26, column: 2, scope: !1943)
!1946 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1947 = !DILocation(line: 72, column: 18, scope: !1946)
!1948 = !DILocation(line: 74, column: 2, scope: !1946)
!1949 = !DILocation(line: 75, column: 20, scope: !1946)
!1950 = !DILocation(line: 75, column: 18, scope: !1946)
!1951 = !DILocation(line: 76, column: 1, scope: !1946)
!1952 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !1953, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1953 = !DISubroutineType(types: !1954)
!1954 = !{!412, !1527}
!1955 = !DILocalVariable(name: "timeout", arg: 1, scope: !1952, file: !765, line: 117, type: !1527)
!1956 = !DILocation(line: 117, column: 61, scope: !1952)
!1957 = !DILocation(line: 126, column: 2, scope: !1952)
!1958 = !DILocation(line: 126, column: 2, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1952, file: !765, line: 126, column: 2)
!1960 = !{i32 -2141849345}
!1961 = !DILocation(line: 127, column: 9, scope: !1952)
!1962 = !DILocation(line: 127, column: 2, scope: !1952)
!1963 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !6, file: !6, line: 3796, type: !1447, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !66, retainedNodes: !609)
!1964 = !DILocalVariable(name: "sem", arg: 1, scope: !1963, file: !6, line: 3796, type: !233)
!1965 = !DILocation(line: 3796, column: 53, scope: !1963)
!1966 = !DILocation(line: 3798, column: 2, scope: !1963)
!1967 = !DILocation(line: 3798, column: 7, scope: !1963)
!1968 = !DILocation(line: 3798, column: 13, scope: !1963)
!1969 = !DILocation(line: 3799, column: 1, scope: !1963)
!1970 = distinct !DISubprogram(name: "mailrecvtask", scope: !1971, file: !1971, line: 34, type: !206, scopeLine: 35, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !609)
!1971 = !DIFile(filename: "appl/Zephyr/app_kernel/src/mailbox_r.c", directory: "/home/kenny/ara")
!1972 = !DILocalVariable(name: "getsize", scope: !1970, file: !1971, line: 36, type: !61)
!1973 = !DILocation(line: 36, column: 6, scope: !1970)
!1974 = !DILocalVariable(name: "gettime", scope: !1970, file: !1971, line: 37, type: !59)
!1975 = !DILocation(line: 37, column: 15, scope: !1970)
!1976 = !DILocalVariable(name: "getcount", scope: !1970, file: !1971, line: 38, type: !61)
!1977 = !DILocation(line: 38, column: 6, scope: !1970)
!1978 = !DILocalVariable(name: "getinfo", scope: !1970, file: !1971, line: 39, type: !1979)
!1979 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "getinfo", file: !1390, line: 18, size: 96, elements: !1980)
!1980 = !{!1981, !1982, !1983}
!1981 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1979, file: !1390, line: 19, baseType: !61, size: 32)
!1982 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !1979, file: !1390, line: 20, baseType: !59, size: 32, offset: 32)
!1983 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1979, file: !1390, line: 21, baseType: !61, size: 32, offset: 64)
!1984 = !DILocation(line: 39, column: 17, scope: !1970)
!1985 = !DILocation(line: 41, column: 11, scope: !1970)
!1986 = !DILocation(line: 43, column: 10, scope: !1970)
!1987 = !DILocation(line: 44, column: 23, scope: !1970)
!1988 = !DILocation(line: 44, column: 32, scope: !1970)
!1989 = !DILocation(line: 44, column: 2, scope: !1970)
!1990 = !DILocation(line: 45, column: 17, scope: !1970)
!1991 = !DILocation(line: 45, column: 10, scope: !1970)
!1992 = !DILocation(line: 45, column: 15, scope: !1970)
!1993 = !DILocation(line: 46, column: 17, scope: !1970)
!1994 = !DILocation(line: 46, column: 10, scope: !1970)
!1995 = !DILocation(line: 46, column: 15, scope: !1970)
!1996 = !DILocation(line: 47, column: 18, scope: !1970)
!1997 = !DILocation(line: 47, column: 10, scope: !1970)
!1998 = !DILocation(line: 47, column: 16, scope: !1970)
!1999 = !DILocation(line: 49, column: 23, scope: !1970)
!2000 = !DILocation(line: 49, column: 33, scope: !1970)
!2001 = !DILocation(line: 49, column: 2, scope: !1970)
!2002 = !DILocation(line: 51, column: 15, scope: !2003)
!2003 = distinct !DILexicalBlock(scope: !1970, file: !1971, line: 51, column: 2)
!2004 = !DILocation(line: 51, column: 7, scope: !2003)
!2005 = !DILocation(line: 51, column: 20, scope: !2006)
!2006 = distinct !DILexicalBlock(scope: !2003, file: !1971, line: 51, column: 2)
!2007 = !DILocation(line: 51, column: 28, scope: !2006)
!2008 = !DILocation(line: 51, column: 2, scope: !2003)
!2009 = !DILocation(line: 52, column: 24, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !2006, file: !1971, line: 51, column: 60)
!2011 = !DILocation(line: 52, column: 33, scope: !2010)
!2012 = !DILocation(line: 52, column: 3, scope: !2010)
!2013 = !DILocation(line: 53, column: 18, scope: !2010)
!2014 = !DILocation(line: 53, column: 11, scope: !2010)
!2015 = !DILocation(line: 53, column: 16, scope: !2010)
!2016 = !DILocation(line: 54, column: 18, scope: !2010)
!2017 = !DILocation(line: 54, column: 11, scope: !2010)
!2018 = !DILocation(line: 54, column: 16, scope: !2010)
!2019 = !DILocation(line: 55, column: 19, scope: !2010)
!2020 = !DILocation(line: 55, column: 11, scope: !2010)
!2021 = !DILocation(line: 55, column: 17, scope: !2010)
!2022 = !DILocation(line: 57, column: 24, scope: !2010)
!2023 = !DILocation(line: 57, column: 34, scope: !2010)
!2024 = !DILocation(line: 57, column: 3, scope: !2010)
!2025 = !DILocation(line: 58, column: 2, scope: !2010)
!2026 = !DILocation(line: 51, column: 53, scope: !2006)
!2027 = !DILocation(line: 51, column: 2, scope: !2006)
!2028 = distinct !{!2028, !2008, !2029}
!2029 = !DILocation(line: 58, column: 2, scope: !2003)
!2030 = !DILocation(line: 59, column: 1, scope: !1970)
!2031 = distinct !DISubprogram(name: "mailbox_get", scope: !1971, file: !1971, line: 73, type: !2032, scopeLine: 77, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2032 = !DISubroutineType(types: !2033)
!2033 = !{null, !2034, !61, !61, !2061}
!2034 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2035, size: 32)
!2035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mbox", file: !6, line: 4152, size: 160, elements: !2036)
!2036 = !{!2037, !2056, !2057}
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "tx_msg_queue", scope: !2035, file: !6, line: 4154, baseType: !2038, size: 64)
!2038 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !2039)
!2039 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !2040)
!2040 = !{!2041}
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !2039, file: !99, line: 209, baseType: !2042, size: 64)
!2042 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !2043)
!2043 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !2044)
!2044 = !{!2045, !2051}
!2045 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !116, line: 32, baseType: !2046, size: 32)
!2046 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2043, file: !116, line: 32, size: 32, elements: !2047)
!2047 = !{!2048, !2050}
!2048 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !2046, file: !116, line: 33, baseType: !2049, size: 32)
!2049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2043, size: 32)
!2050 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2046, file: !116, line: 34, baseType: !2049, size: 32)
!2051 = !DIDerivedType(tag: DW_TAG_member, scope: !2043, file: !116, line: 36, baseType: !2052, size: 32, offset: 32)
!2052 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2043, file: !116, line: 36, size: 32, elements: !2053)
!2053 = !{!2054, !2055}
!2054 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !2052, file: !116, line: 37, baseType: !2049, size: 32)
!2055 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2052, file: !116, line: 38, baseType: !2049, size: 32)
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "rx_msg_queue", scope: !2035, file: !6, line: 4156, baseType: !2038, size: 64, offset: 64)
!2057 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2035, file: !6, line: 4157, baseType: !2058, size: 32, offset: 128)
!2058 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !2059)
!2059 = !{!2060}
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !2058, file: !99, line: 243, baseType: !134, size: 32)
!2061 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 32)
!2062 = !DILocalVariable(name: "mailbox", arg: 1, scope: !2031, file: !1971, line: 73, type: !2034)
!2063 = !DILocation(line: 73, column: 33, scope: !2031)
!2064 = !DILocalVariable(name: "size", arg: 2, scope: !2031, file: !1971, line: 74, type: !61)
!2065 = !DILocation(line: 74, column: 8, scope: !2031)
!2066 = !DILocalVariable(name: "count", arg: 3, scope: !2031, file: !1971, line: 75, type: !61)
!2067 = !DILocation(line: 75, column: 8, scope: !2031)
!2068 = !DILocalVariable(name: "time", arg: 4, scope: !2031, file: !1971, line: 76, type: !2061)
!2069 = !DILocation(line: 76, column: 18, scope: !2031)
!2070 = !DILocalVariable(name: "i", scope: !2031, file: !1971, line: 78, type: !61)
!2071 = !DILocation(line: 78, column: 6, scope: !2031)
!2072 = !DILocalVariable(name: "t", scope: !2031, file: !1971, line: 79, type: !59)
!2073 = !DILocation(line: 79, column: 15, scope: !2031)
!2074 = !DILocalVariable(name: "return_value", scope: !2031, file: !1971, line: 80, type: !412)
!2075 = !DILocation(line: 80, column: 10, scope: !2031)
!2076 = !DILocalVariable(name: "Message", scope: !2031, file: !1971, line: 81, type: !2077)
!2077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mbox_msg", file: !6, line: 4124, size: 352, elements: !2078)
!2078 = !{!2079, !2080, !2081, !2082, !2083, !2084, !2107, !2185, !2186, !2187}
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "_mailbox", scope: !2077, file: !6, line: 4126, baseType: !58, size: 32)
!2080 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2077, file: !6, line: 4128, baseType: !79, size: 32, offset: 32)
!2081 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !2077, file: !6, line: 4130, baseType: !58, size: 32, offset: 64)
!2082 = !DIDerivedType(tag: DW_TAG_member, name: "tx_data", scope: !2077, file: !6, line: 4132, baseType: !60, size: 32, offset: 96)
!2083 = !DIDerivedType(tag: DW_TAG_member, name: "_rx_data", scope: !2077, file: !6, line: 4134, baseType: !60, size: 32, offset: 128)
!2084 = !DIDerivedType(tag: DW_TAG_member, name: "tx_block", scope: !2077, file: !6, line: 4136, baseType: !2085, size: 64, offset: 160)
!2085 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_block", file: !86, line: 23, size: 64, elements: !2086)
!2086 = !{!2087}
!2087 = !DIDerivedType(tag: DW_TAG_member, scope: !2085, file: !86, line: 24, baseType: !2088, size: 64)
!2088 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2085, file: !86, line: 24, size: 64, elements: !2089)
!2089 = !{!2090, !2091}
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2088, file: !86, line: 25, baseType: !60, size: 32)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !2088, file: !86, line: 26, baseType: !2092, size: 64)
!2092 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_block_id", file: !86, line: 15, size: 64, elements: !2093)
!2093 = !{!2094, !2095}
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2092, file: !86, line: 16, baseType: !60, size: 32)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2092, file: !86, line: 17, baseType: !2096, size: 32, offset: 32)
!2096 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2097, size: 32)
!2097 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !99, line: 267, size: 192, elements: !2098)
!2098 = !{!2099, !2105, !2106}
!2099 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2097, file: !99, line: 268, baseType: !2100, size: 96)
!2100 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !103, line: 51, size: 96, elements: !2101)
!2101 = !{!2102, !2103, !2104}
!2102 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2100, file: !103, line: 52, baseType: !106, size: 32)
!2103 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !2100, file: !103, line: 53, baseType: !60, size: 32, offset: 32)
!2104 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !2100, file: !103, line: 54, baseType: !79, size: 32, offset: 64)
!2105 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2097, file: !99, line: 269, baseType: !2038, size: 64, offset: 96)
!2106 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2097, file: !99, line: 270, baseType: !2058, size: 32, offset: 160)
!2107 = !DIDerivedType(tag: DW_TAG_member, name: "rx_source_thread", scope: !2077, file: !6, line: 4138, baseType: !2108, size: 32, offset: 224)
!2108 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !6, line: 648, baseType: !2109)
!2109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2110, size: 32)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !6, line: 570, size: 1280, elements: !2111)
!2111 = !{!2112, !2153, !2165, !2166, !2167, !2168, !2169, !2175, !2180}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !2110, file: !6, line: 572, baseType: !2113, size: 448)
!2113 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !6, line: 441, size: 448, elements: !2114)
!2114 = !{!2115, !2126, !2128, !2129, !2130, !2139, !2140, !2141, !2152}
!2115 = !DIDerivedType(tag: DW_TAG_member, scope: !2113, file: !6, line: 444, baseType: !2116, size: 64)
!2116 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2113, file: !6, line: 444, size: 64, elements: !2117)
!2117 = !{!2118, !2120}
!2118 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !2116, file: !6, line: 445, baseType: !2119, size: 64)
!2119 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !116, line: 43, baseType: !2043)
!2120 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !2116, file: !6, line: 446, baseType: !2121, size: 64)
!2121 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !151, line: 48, size: 64, elements: !2122)
!2122 = !{!2123}
!2123 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !2121, file: !151, line: 49, baseType: !2124, size: 64)
!2124 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2125, size: 64, elements: !156)
!2125 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2121, size: 32)
!2126 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !2113, file: !6, line: 452, baseType: !2127, size: 32, offset: 64)
!2127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2038, size: 32)
!2128 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !2113, file: !6, line: 455, baseType: !161, size: 8, offset: 96)
!2129 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !2113, file: !6, line: 458, baseType: !161, size: 8, offset: 104)
!2130 = !DIDerivedType(tag: DW_TAG_member, scope: !2113, file: !6, line: 474, baseType: !2131, size: 16, offset: 112)
!2131 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2113, file: !6, line: 474, size: 16, elements: !2132)
!2132 = !{!2133, !2138}
!2133 = !DIDerivedType(tag: DW_TAG_member, scope: !2131, file: !6, line: 475, baseType: !2134, size: 16)
!2134 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !2131, file: !6, line: 475, size: 16, elements: !2135)
!2135 = !{!2136, !2137}
!2136 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !2134, file: !6, line: 480, baseType: !170, size: 8)
!2137 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !2134, file: !6, line: 481, baseType: !161, size: 8, offset: 8)
!2138 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !2131, file: !6, line: 484, baseType: !174, size: 16)
!2139 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !2113, file: !6, line: 491, baseType: !58, size: 32, offset: 128)
!2140 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !2113, file: !6, line: 511, baseType: !60, size: 32, offset: 160)
!2141 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !2113, file: !6, line: 515, baseType: !2142, size: 192, offset: 192)
!2142 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !99, line: 221, size: 192, elements: !2143)
!2143 = !{!2144, !2145, !2151}
!2144 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !2142, file: !99, line: 222, baseType: !2119, size: 64)
!2145 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !2142, file: !99, line: 223, baseType: !2146, size: 32, offset: 64)
!2146 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !99, line: 219, baseType: !2147)
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 32)
!2148 = !DISubroutineType(types: !2149)
!2149 = !{null, !2150}
!2150 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2142, size: 32)
!2151 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !2142, file: !99, line: 226, baseType: !55, size: 64, offset: 128)
!2152 = !DIDerivedType(tag: DW_TAG_member, name: "join_waiters", scope: !2113, file: !6, line: 518, baseType: !2038, size: 64, offset: 384)
!2153 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !2110, file: !6, line: 575, baseType: !2154, size: 288, offset: 448)
!2154 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !192, line: 25, size: 288, elements: !2155)
!2155 = !{!2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164}
!2156 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2154, file: !192, line: 26, baseType: !58, size: 32)
!2157 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2154, file: !192, line: 27, baseType: !58, size: 32, offset: 32)
!2158 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2154, file: !192, line: 28, baseType: !58, size: 32, offset: 64)
!2159 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2154, file: !192, line: 29, baseType: !58, size: 32, offset: 96)
!2160 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !2154, file: !192, line: 30, baseType: !58, size: 32, offset: 128)
!2161 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !2154, file: !192, line: 31, baseType: !58, size: 32, offset: 160)
!2162 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !2154, file: !192, line: 32, baseType: !58, size: 32, offset: 192)
!2163 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !2154, file: !192, line: 33, baseType: !58, size: 32, offset: 224)
!2164 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !2154, file: !192, line: 34, baseType: !58, size: 32, offset: 256)
!2165 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !2110, file: !6, line: 578, baseType: !60, size: 32, offset: 736)
!2166 = !DIDerivedType(tag: DW_TAG_member, name: "fn_abort", scope: !2110, file: !6, line: 583, baseType: !205, size: 32, offset: 768)
!2167 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2110, file: !6, line: 595, baseType: !209, size: 256, offset: 800)
!2168 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !2110, file: !6, line: 610, baseType: !61, size: 32, offset: 1056)
!2169 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !2110, file: !6, line: 616, baseType: !2170, size: 96, offset: 1088)
!2170 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !6, line: 525, size: 96, elements: !2171)
!2171 = !{!2172, !2173, !2174}
!2172 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !2170, file: !6, line: 529, baseType: !134, size: 32)
!2173 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !2170, file: !6, line: 538, baseType: !79, size: 32, offset: 32)
!2174 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !2170, file: !6, line: 544, baseType: !79, size: 32, offset: 64)
!2175 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !2110, file: !6, line: 641, baseType: !2176, size: 32, offset: 1184)
!2176 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2177, size: 32)
!2177 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_pool", file: !86, line: 30, size: 32, elements: !2178)
!2178 = !{!2179}
!2179 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !2177, file: !86, line: 31, baseType: !2096, size: 32)
!2180 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !2110, file: !6, line: 644, baseType: !2181, size: 64, offset: 1216)
!2181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !192, line: 60, size: 64, elements: !2182)
!2182 = !{!2183, !2184}
!2183 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !2181, file: !192, line: 63, baseType: !58, size: 32)
!2184 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !2181, file: !192, line: 66, baseType: !58, size: 32, offset: 32)
!2185 = !DIDerivedType(tag: DW_TAG_member, name: "tx_target_thread", scope: !2077, file: !6, line: 4140, baseType: !2108, size: 32, offset: 256)
!2186 = !DIDerivedType(tag: DW_TAG_member, name: "_syncing_thread", scope: !2077, file: !6, line: 4142, baseType: !2108, size: 32, offset: 288)
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "_async_sem", scope: !2077, file: !6, line: 4145, baseType: !2188, size: 32, offset: 320)
!2188 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2189, size: 32)
!2189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !2190)
!2190 = !{!2191, !2192, !2193}
!2191 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2189, file: !6, line: 3705, baseType: !2038, size: 64)
!2192 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2189, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !2189, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!2194 = !DILocation(line: 81, column: 20, scope: !2031)
!2195 = !DILocation(line: 83, column: 10, scope: !2031)
!2196 = !DILocation(line: 83, column: 27, scope: !2031)
!2197 = !DILocation(line: 84, column: 17, scope: !2031)
!2198 = !DILocation(line: 84, column: 10, scope: !2031)
!2199 = !DILocation(line: 84, column: 15, scope: !2031)
!2200 = !DILocation(line: 87, column: 20, scope: !2031)
!2201 = !DILocation(line: 87, column: 2, scope: !2031)
!2202 = !DILocation(line: 88, column: 6, scope: !2031)
!2203 = !DILocation(line: 88, column: 4, scope: !2031)
!2204 = !DILocation(line: 89, column: 9, scope: !2205)
!2205 = distinct !DILexicalBlock(scope: !2031, file: !1971, line: 89, column: 2)
!2206 = !DILocation(line: 89, column: 7, scope: !2205)
!2207 = !DILocation(line: 89, column: 14, scope: !2208)
!2208 = distinct !DILexicalBlock(scope: !2205, file: !1971, line: 89, column: 2)
!2209 = !DILocation(line: 89, column: 18, scope: !2208)
!2210 = !DILocation(line: 89, column: 16, scope: !2208)
!2211 = !DILocation(line: 89, column: 2, scope: !2205)
!2212 = !DILocation(line: 90, column: 30, scope: !2213)
!2213 = distinct !DILexicalBlock(scope: !2208, file: !1971, line: 89, column: 30)
!2214 = !DILocation(line: 93, column: 8, scope: !2213)
!2215 = !DILocation(line: 90, column: 19, scope: !2213)
!2216 = !DILocation(line: 90, column: 16, scope: !2213)
!2217 = !DILocation(line: 94, column: 2, scope: !2213)
!2218 = !DILocation(line: 89, column: 26, scope: !2208)
!2219 = !DILocation(line: 89, column: 2, scope: !2208)
!2220 = distinct !{!2220, !2211, !2221}
!2221 = !DILocation(line: 94, column: 2, scope: !2205)
!2222 = !DILocation(line: 96, column: 27, scope: !2031)
!2223 = !DILocation(line: 96, column: 6, scope: !2031)
!2224 = !DILocation(line: 96, column: 4, scope: !2031)
!2225 = !DILocation(line: 97, column: 10, scope: !2031)
!2226 = !DILocation(line: 97, column: 3, scope: !2031)
!2227 = !DILocation(line: 97, column: 8, scope: !2031)
!2228 = !DILocation(line: 98, column: 6, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !2031, file: !1971, line: 98, column: 6)
!2230 = !DILocation(line: 98, column: 23, scope: !2229)
!2231 = !DILocation(line: 98, column: 6, scope: !2031)
!2232 = !DILocation(line: 99, column: 3, scope: !2233)
!2233 = distinct !DILexicalBlock(scope: !2234, file: !1971, line: 99, column: 3)
!2234 = distinct !DILexicalBlock(scope: !2229, file: !1971, line: 98, column: 28)
!2235 = !DILocation(line: 100, column: 2, scope: !2234)
!2236 = !DILocation(line: 101, column: 6, scope: !2237)
!2237 = distinct !DILexicalBlock(scope: !2031, file: !1971, line: 101, column: 6)
!2238 = !DILocation(line: 101, column: 19, scope: !2237)
!2239 = !DILocation(line: 101, column: 6, scope: !2031)
!2240 = !DILocation(line: 102, column: 3, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2237, file: !1971, line: 101, column: 25)
!2242 = !DILocation(line: 102, column: 3, scope: !2243)
!2243 = distinct !DILexicalBlock(scope: !2241, file: !1971, line: 102, column: 3)
!2244 = !{i32 -2141827805, i32 -2141827789, i32 -2141827763, i32 -2141827735, i32 -2141827715}
!2245 = !DILocation(line: 103, column: 2, scope: !2241)
!2246 = !DILocation(line: 104, column: 1, scope: !2031)
!2247 = distinct !DISubprogram(name: "k_msgq_put", scope: !765, file: !765, line: 815, type: !2248, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2248 = !DISubroutineType(types: !2249)
!2249 = !{!61, !2250, !802, !2263}
!2250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2251, size: 32)
!2251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !2252)
!2252 = !{!2253, !2254, !2255, !2256, !2257, !2258, !2259, !2260, !2261, !2262}
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !2251, file: !6, line: 3850, baseType: !2038, size: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2251, file: !6, line: 3852, baseType: !2058, size: 32, offset: 64)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !2251, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!2256 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !2251, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!2257 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !2251, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !2251, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !2251, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !2251, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !2251, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !2251, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!2263 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !2264)
!2264 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !2265)
!2265 = !{!2266}
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !2264, file: !54, line: 68, baseType: !53, size: 64)
!2267 = !DILocalVariable(name: "msgq", arg: 1, scope: !2247, file: !765, line: 815, type: !2250)
!2268 = !DILocation(line: 815, column: 64, scope: !2247)
!2269 = !DILocalVariable(name: "data", arg: 2, scope: !2247, file: !765, line: 815, type: !802)
!2270 = !DILocation(line: 815, column: 83, scope: !2247)
!2271 = !DILocalVariable(name: "timeout", arg: 3, scope: !2247, file: !765, line: 815, type: !2263)
!2272 = !DILocation(line: 815, column: 101, scope: !2247)
!2273 = !DILocation(line: 824, column: 2, scope: !2247)
!2274 = !DILocation(line: 824, column: 2, scope: !2275)
!2275 = distinct !DILexicalBlock(scope: !2247, file: !765, line: 824, column: 2)
!2276 = !{i32 -2141851953}
!2277 = !DILocation(line: 825, column: 27, scope: !2247)
!2278 = !DILocation(line: 825, column: 33, scope: !2247)
!2279 = !DILocation(line: 825, column: 9, scope: !2247)
!2280 = !DILocation(line: 825, column: 2, scope: !2247)
!2281 = distinct !DISubprogram(name: "k_sem_take", scope: !765, file: !765, line: 746, type: !2282, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2282 = !DISubroutineType(types: !2283)
!2283 = !{!61, !2188, !2263}
!2284 = !DILocalVariable(name: "sem", arg: 1, scope: !2281, file: !765, line: 746, type: !2188)
!2285 = !DILocation(line: 746, column: 63, scope: !2281)
!2286 = !DILocalVariable(name: "timeout", arg: 2, scope: !2281, file: !765, line: 746, type: !2263)
!2287 = !DILocation(line: 746, column: 80, scope: !2281)
!2288 = !DILocation(line: 755, column: 2, scope: !2281)
!2289 = !DILocation(line: 755, column: 2, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2281, file: !765, line: 755, column: 2)
!2291 = !{i32 -2141852293}
!2292 = !DILocation(line: 756, column: 27, scope: !2281)
!2293 = !DILocation(line: 756, column: 9, scope: !2281)
!2294 = !DILocation(line: 756, column: 2, scope: !2281)
!2295 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2296 = !DILocalVariable(name: "et", scope: !2295, file: !573, line: 177, type: !58)
!2297 = !DILocation(line: 177, column: 11, scope: !2295)
!2298 = !DILocation(line: 179, column: 2, scope: !2295)
!2299 = !DILocation(line: 180, column: 7, scope: !2295)
!2300 = !DILocation(line: 180, column: 5, scope: !2295)
!2301 = !DILocation(line: 181, column: 9, scope: !2295)
!2302 = !DILocation(line: 181, column: 2, scope: !2295)
!2303 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2304 = !DILocalVariable(name: "ts", arg: 1, scope: !2303, file: !63, line: 33, type: !58)
!2305 = !DILocation(line: 33, column: 54, scope: !2303)
!2306 = !DILocalVariable(name: "t", scope: !2303, file: !63, line: 35, type: !58)
!2307 = !DILocation(line: 35, column: 11, scope: !2303)
!2308 = !DILocation(line: 38, column: 2, scope: !2303)
!2309 = !DILocation(line: 40, column: 6, scope: !2303)
!2310 = !DILocation(line: 40, column: 4, scope: !2303)
!2311 = !DILocalVariable(name: "res", scope: !2303, file: !63, line: 41, type: !58)
!2312 = !DILocation(line: 41, column: 11, scope: !2303)
!2313 = !DILocation(line: 41, column: 18, scope: !2303)
!2314 = !DILocation(line: 41, column: 23, scope: !2303)
!2315 = !DILocation(line: 41, column: 20, scope: !2303)
!2316 = !DILocation(line: 41, column: 17, scope: !2303)
!2317 = !DILocation(line: 41, column: 30, scope: !2303)
!2318 = !DILocation(line: 41, column: 34, scope: !2303)
!2319 = !DILocation(line: 41, column: 32, scope: !2303)
!2320 = !DILocation(line: 41, column: 53, scope: !2303)
!2321 = !DILocation(line: 41, column: 51, scope: !2303)
!2322 = !DILocation(line: 41, column: 58, scope: !2303)
!2323 = !DILocation(line: 41, column: 56, scope: !2303)
!2324 = !DILocation(line: 43, column: 6, scope: !2325)
!2325 = distinct !DILexicalBlock(scope: !2303, file: !63, line: 43, column: 6)
!2326 = !DILocation(line: 43, column: 9, scope: !2325)
!2327 = !DILocation(line: 43, column: 6, scope: !2303)
!2328 = !DILocation(line: 44, column: 10, scope: !2329)
!2329 = distinct !DILexicalBlock(scope: !2325, file: !63, line: 43, column: 14)
!2330 = !DILocation(line: 44, column: 7, scope: !2329)
!2331 = !DILocation(line: 45, column: 2, scope: !2329)
!2332 = !DILocation(line: 46, column: 9, scope: !2303)
!2333 = !DILocation(line: 46, column: 2, scope: !2303)
!2334 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2335 = !DILocalVariable(name: "t", arg: 1, scope: !2336, file: !856, line: 78, type: !69)
!2336 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2337 = !DILocation(line: 78, column: 63, scope: !2336, inlinedAt: !2338)
!2338 = distinct !DILocation(line: 904, column: 9, scope: !2334)
!2339 = !DILocalVariable(name: "from_hz", arg: 2, scope: !2336, file: !856, line: 78, type: !58)
!2340 = !DILocation(line: 78, column: 75, scope: !2336, inlinedAt: !2338)
!2341 = !DILocalVariable(name: "to_hz", arg: 3, scope: !2336, file: !856, line: 79, type: !58)
!2342 = !DILocation(line: 79, column: 18, scope: !2336, inlinedAt: !2338)
!2343 = !DILocalVariable(name: "const_hz", arg: 4, scope: !2336, file: !856, line: 79, type: !863)
!2344 = !DILocation(line: 79, column: 30, scope: !2336, inlinedAt: !2338)
!2345 = !DILocalVariable(name: "result32", arg: 5, scope: !2336, file: !856, line: 80, type: !863)
!2346 = !DILocation(line: 80, column: 14, scope: !2336, inlinedAt: !2338)
!2347 = !DILocalVariable(name: "round_up", arg: 6, scope: !2336, file: !856, line: 80, type: !863)
!2348 = !DILocation(line: 80, column: 29, scope: !2336, inlinedAt: !2338)
!2349 = !DILocalVariable(name: "round_off", arg: 7, scope: !2336, file: !856, line: 81, type: !863)
!2350 = !DILocation(line: 81, column: 14, scope: !2336, inlinedAt: !2338)
!2351 = !DILocalVariable(name: "mul_ratio", scope: !2336, file: !856, line: 84, type: !863)
!2352 = !DILocation(line: 84, column: 7, scope: !2336, inlinedAt: !2338)
!2353 = !DILocalVariable(name: "div_ratio", scope: !2336, file: !856, line: 86, type: !863)
!2354 = !DILocation(line: 86, column: 7, scope: !2336, inlinedAt: !2338)
!2355 = !DILocalVariable(name: "off", scope: !2336, file: !856, line: 93, type: !69)
!2356 = !DILocation(line: 93, column: 11, scope: !2336, inlinedAt: !2338)
!2357 = !DILocalVariable(name: "rdivisor", scope: !2358, file: !856, line: 96, type: !58)
!2358 = distinct !DILexicalBlock(scope: !2359, file: !856, line: 95, column: 18)
!2359 = distinct !DILexicalBlock(scope: !2336, file: !856, line: 95, column: 6)
!2360 = !DILocation(line: 96, column: 12, scope: !2358, inlinedAt: !2338)
!2361 = !DILocalVariable(name: "t", arg: 1, scope: !2334, file: !856, line: 901, type: !69)
!2362 = !DILocation(line: 901, column: 68, scope: !2334)
!2363 = !DILocation(line: 904, column: 17, scope: !2334)
!2364 = !DILocation(line: 904, column: 20, scope: !2334)
!2365 = !DILocation(line: 84, column: 19, scope: !2336, inlinedAt: !2338)
!2366 = !DILocation(line: 84, column: 28, scope: !2336, inlinedAt: !2338)
!2367 = !DILocation(line: 85, column: 4, scope: !2336, inlinedAt: !2338)
!2368 = !DILocation(line: 85, column: 12, scope: !2336, inlinedAt: !2338)
!2369 = !DILocation(line: 85, column: 10, scope: !2336, inlinedAt: !2338)
!2370 = !DILocation(line: 85, column: 21, scope: !2336, inlinedAt: !2338)
!2371 = !DILocation(line: 85, column: 26, scope: !2336, inlinedAt: !2338)
!2372 = !DILocation(line: 85, column: 34, scope: !2336, inlinedAt: !2338)
!2373 = !DILocation(line: 85, column: 32, scope: !2336, inlinedAt: !2338)
!2374 = !DILocation(line: 85, column: 43, scope: !2336, inlinedAt: !2338)
!2375 = !DILocation(line: 0, scope: !2336, inlinedAt: !2338)
!2376 = !DILocation(line: 86, column: 19, scope: !2336, inlinedAt: !2338)
!2377 = !DILocation(line: 86, column: 28, scope: !2336, inlinedAt: !2338)
!2378 = !DILocation(line: 87, column: 4, scope: !2336, inlinedAt: !2338)
!2379 = !DILocation(line: 87, column: 14, scope: !2336, inlinedAt: !2338)
!2380 = !DILocation(line: 87, column: 12, scope: !2336, inlinedAt: !2338)
!2381 = !DILocation(line: 87, column: 21, scope: !2336, inlinedAt: !2338)
!2382 = !DILocation(line: 87, column: 26, scope: !2336, inlinedAt: !2338)
!2383 = !DILocation(line: 87, column: 36, scope: !2336, inlinedAt: !2338)
!2384 = !DILocation(line: 87, column: 34, scope: !2336, inlinedAt: !2338)
!2385 = !DILocation(line: 87, column: 43, scope: !2336, inlinedAt: !2338)
!2386 = !DILocation(line: 89, column: 6, scope: !2387, inlinedAt: !2338)
!2387 = distinct !DILexicalBlock(scope: !2336, file: !856, line: 89, column: 6)
!2388 = !DILocation(line: 89, column: 17, scope: !2387, inlinedAt: !2338)
!2389 = !DILocation(line: 89, column: 14, scope: !2387, inlinedAt: !2338)
!2390 = !DILocation(line: 89, column: 6, scope: !2336, inlinedAt: !2338)
!2391 = !DILocation(line: 90, column: 10, scope: !2392, inlinedAt: !2338)
!2392 = distinct !DILexicalBlock(scope: !2387, file: !856, line: 89, column: 24)
!2393 = !DILocation(line: 90, column: 32, scope: !2392, inlinedAt: !2338)
!2394 = !DILocation(line: 90, column: 22, scope: !2392, inlinedAt: !2338)
!2395 = !DILocation(line: 90, column: 21, scope: !2392, inlinedAt: !2338)
!2396 = !DILocation(line: 90, column: 37, scope: !2392, inlinedAt: !2338)
!2397 = !DILocation(line: 90, column: 3, scope: !2392, inlinedAt: !2338)
!2398 = !DILocation(line: 95, column: 7, scope: !2359, inlinedAt: !2338)
!2399 = !DILocation(line: 95, column: 6, scope: !2336, inlinedAt: !2338)
!2400 = !DILocation(line: 96, column: 23, scope: !2358, inlinedAt: !2338)
!2401 = !DILocation(line: 96, column: 36, scope: !2358, inlinedAt: !2338)
!2402 = !DILocation(line: 96, column: 46, scope: !2358, inlinedAt: !2338)
!2403 = !DILocation(line: 96, column: 44, scope: !2358, inlinedAt: !2338)
!2404 = !DILocation(line: 96, column: 55, scope: !2358, inlinedAt: !2338)
!2405 = !DILocation(line: 98, column: 7, scope: !2406, inlinedAt: !2338)
!2406 = distinct !DILexicalBlock(scope: !2358, file: !856, line: 98, column: 7)
!2407 = !DILocation(line: 98, column: 7, scope: !2358, inlinedAt: !2338)
!2408 = !DILocation(line: 99, column: 10, scope: !2409, inlinedAt: !2338)
!2409 = distinct !DILexicalBlock(scope: !2406, file: !856, line: 98, column: 17)
!2410 = !DILocation(line: 99, column: 19, scope: !2409, inlinedAt: !2338)
!2411 = !DILocation(line: 99, column: 8, scope: !2409, inlinedAt: !2338)
!2412 = !DILocation(line: 100, column: 3, scope: !2409, inlinedAt: !2338)
!2413 = !DILocation(line: 100, column: 14, scope: !2414, inlinedAt: !2338)
!2414 = distinct !DILexicalBlock(scope: !2406, file: !856, line: 100, column: 14)
!2415 = !DILocation(line: 100, column: 14, scope: !2406, inlinedAt: !2338)
!2416 = !DILocation(line: 101, column: 10, scope: !2417, inlinedAt: !2338)
!2417 = distinct !DILexicalBlock(scope: !2414, file: !856, line: 100, column: 25)
!2418 = !DILocation(line: 101, column: 19, scope: !2417, inlinedAt: !2338)
!2419 = !DILocation(line: 101, column: 8, scope: !2417, inlinedAt: !2338)
!2420 = !DILocation(line: 102, column: 3, scope: !2417, inlinedAt: !2338)
!2421 = !DILocation(line: 103, column: 2, scope: !2358, inlinedAt: !2338)
!2422 = !DILocation(line: 110, column: 6, scope: !2423, inlinedAt: !2338)
!2423 = distinct !DILexicalBlock(scope: !2336, file: !856, line: 110, column: 6)
!2424 = !DILocation(line: 110, column: 6, scope: !2336, inlinedAt: !2338)
!2425 = !DILocation(line: 111, column: 8, scope: !2426, inlinedAt: !2338)
!2426 = distinct !DILexicalBlock(scope: !2423, file: !856, line: 110, column: 17)
!2427 = !DILocation(line: 111, column: 5, scope: !2426, inlinedAt: !2338)
!2428 = !DILocation(line: 112, column: 7, scope: !2429, inlinedAt: !2338)
!2429 = distinct !DILexicalBlock(scope: !2426, file: !856, line: 112, column: 7)
!2430 = !DILocation(line: 112, column: 16, scope: !2429, inlinedAt: !2338)
!2431 = !DILocation(line: 112, column: 20, scope: !2429, inlinedAt: !2338)
!2432 = !DILocation(line: 112, column: 22, scope: !2429, inlinedAt: !2338)
!2433 = !DILocation(line: 112, column: 7, scope: !2426, inlinedAt: !2338)
!2434 = !DILocation(line: 113, column: 22, scope: !2435, inlinedAt: !2338)
!2435 = distinct !DILexicalBlock(scope: !2429, file: !856, line: 112, column: 36)
!2436 = !DILocation(line: 113, column: 12, scope: !2435, inlinedAt: !2338)
!2437 = !DILocation(line: 113, column: 28, scope: !2435, inlinedAt: !2338)
!2438 = !DILocation(line: 113, column: 38, scope: !2435, inlinedAt: !2338)
!2439 = !DILocation(line: 113, column: 36, scope: !2435, inlinedAt: !2338)
!2440 = !DILocation(line: 113, column: 25, scope: !2435, inlinedAt: !2338)
!2441 = !DILocation(line: 113, column: 11, scope: !2435, inlinedAt: !2338)
!2442 = !DILocation(line: 113, column: 4, scope: !2435, inlinedAt: !2338)
!2443 = !DILocation(line: 115, column: 11, scope: !2444, inlinedAt: !2338)
!2444 = distinct !DILexicalBlock(scope: !2429, file: !856, line: 114, column: 10)
!2445 = !DILocation(line: 115, column: 16, scope: !2444, inlinedAt: !2338)
!2446 = !DILocation(line: 115, column: 26, scope: !2444, inlinedAt: !2338)
!2447 = !DILocation(line: 115, column: 24, scope: !2444, inlinedAt: !2338)
!2448 = !DILocation(line: 115, column: 15, scope: !2444, inlinedAt: !2338)
!2449 = !DILocation(line: 115, column: 13, scope: !2444, inlinedAt: !2338)
!2450 = !DILocation(line: 115, column: 4, scope: !2444, inlinedAt: !2338)
!2451 = !DILocation(line: 117, column: 13, scope: !2452, inlinedAt: !2338)
!2452 = distinct !DILexicalBlock(scope: !2423, file: !856, line: 117, column: 13)
!2453 = !DILocation(line: 117, column: 13, scope: !2423, inlinedAt: !2338)
!2454 = !DILocation(line: 118, column: 7, scope: !2455, inlinedAt: !2338)
!2455 = distinct !DILexicalBlock(scope: !2456, file: !856, line: 118, column: 7)
!2456 = distinct !DILexicalBlock(scope: !2452, file: !856, line: 117, column: 24)
!2457 = !DILocation(line: 118, column: 7, scope: !2456, inlinedAt: !2338)
!2458 = !DILocation(line: 119, column: 22, scope: !2459, inlinedAt: !2338)
!2459 = distinct !DILexicalBlock(scope: !2455, file: !856, line: 118, column: 17)
!2460 = !DILocation(line: 119, column: 12, scope: !2459, inlinedAt: !2338)
!2461 = !DILocation(line: 119, column: 28, scope: !2459, inlinedAt: !2338)
!2462 = !DILocation(line: 119, column: 36, scope: !2459, inlinedAt: !2338)
!2463 = !DILocation(line: 119, column: 34, scope: !2459, inlinedAt: !2338)
!2464 = !DILocation(line: 119, column: 25, scope: !2459, inlinedAt: !2338)
!2465 = !DILocation(line: 119, column: 11, scope: !2459, inlinedAt: !2338)
!2466 = !DILocation(line: 119, column: 4, scope: !2459, inlinedAt: !2338)
!2467 = !DILocation(line: 121, column: 11, scope: !2468, inlinedAt: !2338)
!2468 = distinct !DILexicalBlock(scope: !2455, file: !856, line: 120, column: 10)
!2469 = !DILocation(line: 121, column: 16, scope: !2468, inlinedAt: !2338)
!2470 = !DILocation(line: 121, column: 24, scope: !2468, inlinedAt: !2338)
!2471 = !DILocation(line: 121, column: 22, scope: !2468, inlinedAt: !2338)
!2472 = !DILocation(line: 121, column: 15, scope: !2468, inlinedAt: !2338)
!2473 = !DILocation(line: 121, column: 13, scope: !2468, inlinedAt: !2338)
!2474 = !DILocation(line: 121, column: 4, scope: !2468, inlinedAt: !2338)
!2475 = !DILocation(line: 124, column: 7, scope: !2476, inlinedAt: !2338)
!2476 = distinct !DILexicalBlock(scope: !2477, file: !856, line: 124, column: 7)
!2477 = distinct !DILexicalBlock(scope: !2452, file: !856, line: 123, column: 9)
!2478 = !DILocation(line: 124, column: 7, scope: !2477, inlinedAt: !2338)
!2479 = !DILocation(line: 125, column: 23, scope: !2480, inlinedAt: !2338)
!2480 = distinct !DILexicalBlock(scope: !2476, file: !856, line: 124, column: 17)
!2481 = !DILocation(line: 125, column: 27, scope: !2480, inlinedAt: !2338)
!2482 = !DILocation(line: 125, column: 25, scope: !2480, inlinedAt: !2338)
!2483 = !DILocation(line: 125, column: 35, scope: !2480, inlinedAt: !2338)
!2484 = !DILocation(line: 125, column: 33, scope: !2480, inlinedAt: !2338)
!2485 = !DILocation(line: 125, column: 42, scope: !2480, inlinedAt: !2338)
!2486 = !DILocation(line: 125, column: 40, scope: !2480, inlinedAt: !2338)
!2487 = !DILocation(line: 125, column: 11, scope: !2480, inlinedAt: !2338)
!2488 = !DILocation(line: 125, column: 4, scope: !2480, inlinedAt: !2338)
!2489 = !DILocation(line: 127, column: 12, scope: !2490, inlinedAt: !2338)
!2490 = distinct !DILexicalBlock(scope: !2476, file: !856, line: 126, column: 10)
!2491 = !DILocation(line: 127, column: 16, scope: !2490, inlinedAt: !2338)
!2492 = !DILocation(line: 127, column: 14, scope: !2490, inlinedAt: !2338)
!2493 = !DILocation(line: 127, column: 24, scope: !2490, inlinedAt: !2338)
!2494 = !DILocation(line: 127, column: 22, scope: !2490, inlinedAt: !2338)
!2495 = !DILocation(line: 127, column: 31, scope: !2490, inlinedAt: !2338)
!2496 = !DILocation(line: 127, column: 29, scope: !2490, inlinedAt: !2338)
!2497 = !DILocation(line: 127, column: 4, scope: !2490, inlinedAt: !2338)
!2498 = !DILocation(line: 130, column: 1, scope: !2336, inlinedAt: !2338)
!2499 = !DILocation(line: 904, column: 2, scope: !2334)
!2500 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2501 = !DILocation(line: 82, column: 20, scope: !2500)
!2502 = !DILocation(line: 82, column: 18, scope: !2500)
!2503 = !DILocation(line: 90, column: 6, scope: !2504)
!2504 = distinct !DILexicalBlock(scope: !2500, file: !63, line: 90, column: 6)
!2505 = !DILocation(line: 90, column: 22, scope: !2504)
!2506 = !DILocation(line: 90, column: 6, scope: !2500)
!2507 = !DILocation(line: 91, column: 3, scope: !2508)
!2508 = distinct !DILexicalBlock(scope: !2504, file: !63, line: 90, column: 39)
!2509 = !DILocation(line: 93, column: 2, scope: !2500)
!2510 = !DILocation(line: 94, column: 1, scope: !2500)
!2511 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2512 = !DILocalVariable(name: "reftime", arg: 1, scope: !2511, file: !6, line: 2133, type: !1088)
!2513 = !DILocation(line: 2133, column: 47, scope: !2511)
!2514 = !DILocalVariable(name: "uptime", scope: !2511, file: !6, line: 2135, type: !55)
!2515 = !DILocation(line: 2135, column: 10, scope: !2511)
!2516 = !DILocalVariable(name: "delta", scope: !2511, file: !6, line: 2135, type: !55)
!2517 = !DILocation(line: 2135, column: 18, scope: !2511)
!2518 = !DILocation(line: 2137, column: 11, scope: !2511)
!2519 = !DILocation(line: 2137, column: 9, scope: !2511)
!2520 = !DILocation(line: 2138, column: 10, scope: !2511)
!2521 = !DILocation(line: 2138, column: 20, scope: !2511)
!2522 = !DILocation(line: 2138, column: 19, scope: !2511)
!2523 = !DILocation(line: 2138, column: 17, scope: !2511)
!2524 = !DILocation(line: 2138, column: 8, scope: !2511)
!2525 = !DILocation(line: 2139, column: 13, scope: !2511)
!2526 = !DILocation(line: 2139, column: 3, scope: !2511)
!2527 = !DILocation(line: 2139, column: 11, scope: !2511)
!2528 = !DILocation(line: 2141, column: 9, scope: !2511)
!2529 = !DILocation(line: 2141, column: 2, scope: !2511)
!2530 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2531 = !DILocation(line: 2061, column: 31, scope: !2530)
!2532 = !DILocation(line: 2061, column: 9, scope: !2530)
!2533 = !DILocation(line: 2061, column: 2, scope: !2530)
!2534 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2535 = !DILocation(line: 509, column: 2, scope: !2534)
!2536 = !DILocation(line: 509, column: 2, scope: !2537)
!2537 = distinct !DILexicalBlock(scope: !2534, file: !765, line: 509, column: 2)
!2538 = !{i32 -2141853529}
!2539 = !DILocation(line: 510, column: 9, scope: !2534)
!2540 = !DILocation(line: 510, column: 2, scope: !2534)
!2541 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2542 = !DILocation(line: 78, column: 63, scope: !2336, inlinedAt: !2543)
!2543 = distinct !DILocation(line: 1072, column: 9, scope: !2541)
!2544 = !DILocation(line: 78, column: 75, scope: !2336, inlinedAt: !2543)
!2545 = !DILocation(line: 79, column: 18, scope: !2336, inlinedAt: !2543)
!2546 = !DILocation(line: 79, column: 30, scope: !2336, inlinedAt: !2543)
!2547 = !DILocation(line: 80, column: 14, scope: !2336, inlinedAt: !2543)
!2548 = !DILocation(line: 80, column: 29, scope: !2336, inlinedAt: !2543)
!2549 = !DILocation(line: 81, column: 14, scope: !2336, inlinedAt: !2543)
!2550 = !DILocation(line: 84, column: 7, scope: !2336, inlinedAt: !2543)
!2551 = !DILocation(line: 86, column: 7, scope: !2336, inlinedAt: !2543)
!2552 = !DILocation(line: 93, column: 11, scope: !2336, inlinedAt: !2543)
!2553 = !DILocation(line: 96, column: 12, scope: !2358, inlinedAt: !2543)
!2554 = !DILocalVariable(name: "t", arg: 1, scope: !2541, file: !856, line: 1069, type: !69)
!2555 = !DILocation(line: 1069, column: 70, scope: !2541)
!2556 = !DILocation(line: 1072, column: 17, scope: !2541)
!2557 = !DILocation(line: 84, column: 19, scope: !2336, inlinedAt: !2543)
!2558 = !DILocation(line: 84, column: 28, scope: !2336, inlinedAt: !2543)
!2559 = !DILocation(line: 85, column: 4, scope: !2336, inlinedAt: !2543)
!2560 = !DILocation(line: 85, column: 12, scope: !2336, inlinedAt: !2543)
!2561 = !DILocation(line: 85, column: 10, scope: !2336, inlinedAt: !2543)
!2562 = !DILocation(line: 85, column: 21, scope: !2336, inlinedAt: !2543)
!2563 = !DILocation(line: 85, column: 26, scope: !2336, inlinedAt: !2543)
!2564 = !DILocation(line: 85, column: 34, scope: !2336, inlinedAt: !2543)
!2565 = !DILocation(line: 85, column: 32, scope: !2336, inlinedAt: !2543)
!2566 = !DILocation(line: 85, column: 43, scope: !2336, inlinedAt: !2543)
!2567 = !DILocation(line: 0, scope: !2336, inlinedAt: !2543)
!2568 = !DILocation(line: 86, column: 19, scope: !2336, inlinedAt: !2543)
!2569 = !DILocation(line: 86, column: 28, scope: !2336, inlinedAt: !2543)
!2570 = !DILocation(line: 87, column: 4, scope: !2336, inlinedAt: !2543)
!2571 = !DILocation(line: 87, column: 14, scope: !2336, inlinedAt: !2543)
!2572 = !DILocation(line: 87, column: 12, scope: !2336, inlinedAt: !2543)
!2573 = !DILocation(line: 87, column: 21, scope: !2336, inlinedAt: !2543)
!2574 = !DILocation(line: 87, column: 26, scope: !2336, inlinedAt: !2543)
!2575 = !DILocation(line: 87, column: 36, scope: !2336, inlinedAt: !2543)
!2576 = !DILocation(line: 87, column: 34, scope: !2336, inlinedAt: !2543)
!2577 = !DILocation(line: 87, column: 43, scope: !2336, inlinedAt: !2543)
!2578 = !DILocation(line: 89, column: 6, scope: !2387, inlinedAt: !2543)
!2579 = !DILocation(line: 89, column: 17, scope: !2387, inlinedAt: !2543)
!2580 = !DILocation(line: 89, column: 14, scope: !2387, inlinedAt: !2543)
!2581 = !DILocation(line: 89, column: 6, scope: !2336, inlinedAt: !2543)
!2582 = !DILocation(line: 90, column: 10, scope: !2392, inlinedAt: !2543)
!2583 = !DILocation(line: 90, column: 32, scope: !2392, inlinedAt: !2543)
!2584 = !DILocation(line: 90, column: 22, scope: !2392, inlinedAt: !2543)
!2585 = !DILocation(line: 90, column: 21, scope: !2392, inlinedAt: !2543)
!2586 = !DILocation(line: 90, column: 37, scope: !2392, inlinedAt: !2543)
!2587 = !DILocation(line: 90, column: 3, scope: !2392, inlinedAt: !2543)
!2588 = !DILocation(line: 95, column: 7, scope: !2359, inlinedAt: !2543)
!2589 = !DILocation(line: 95, column: 6, scope: !2336, inlinedAt: !2543)
!2590 = !DILocation(line: 96, column: 23, scope: !2358, inlinedAt: !2543)
!2591 = !DILocation(line: 96, column: 36, scope: !2358, inlinedAt: !2543)
!2592 = !DILocation(line: 96, column: 46, scope: !2358, inlinedAt: !2543)
!2593 = !DILocation(line: 96, column: 44, scope: !2358, inlinedAt: !2543)
!2594 = !DILocation(line: 96, column: 55, scope: !2358, inlinedAt: !2543)
!2595 = !DILocation(line: 98, column: 7, scope: !2406, inlinedAt: !2543)
!2596 = !DILocation(line: 98, column: 7, scope: !2358, inlinedAt: !2543)
!2597 = !DILocation(line: 99, column: 10, scope: !2409, inlinedAt: !2543)
!2598 = !DILocation(line: 99, column: 19, scope: !2409, inlinedAt: !2543)
!2599 = !DILocation(line: 99, column: 8, scope: !2409, inlinedAt: !2543)
!2600 = !DILocation(line: 100, column: 3, scope: !2409, inlinedAt: !2543)
!2601 = !DILocation(line: 100, column: 14, scope: !2414, inlinedAt: !2543)
!2602 = !DILocation(line: 100, column: 14, scope: !2406, inlinedAt: !2543)
!2603 = !DILocation(line: 101, column: 10, scope: !2417, inlinedAt: !2543)
!2604 = !DILocation(line: 101, column: 19, scope: !2417, inlinedAt: !2543)
!2605 = !DILocation(line: 101, column: 8, scope: !2417, inlinedAt: !2543)
!2606 = !DILocation(line: 102, column: 3, scope: !2417, inlinedAt: !2543)
!2607 = !DILocation(line: 103, column: 2, scope: !2358, inlinedAt: !2543)
!2608 = !DILocation(line: 110, column: 6, scope: !2423, inlinedAt: !2543)
!2609 = !DILocation(line: 110, column: 6, scope: !2336, inlinedAt: !2543)
!2610 = !DILocation(line: 111, column: 8, scope: !2426, inlinedAt: !2543)
!2611 = !DILocation(line: 111, column: 5, scope: !2426, inlinedAt: !2543)
!2612 = !DILocation(line: 112, column: 7, scope: !2429, inlinedAt: !2543)
!2613 = !DILocation(line: 112, column: 16, scope: !2429, inlinedAt: !2543)
!2614 = !DILocation(line: 112, column: 20, scope: !2429, inlinedAt: !2543)
!2615 = !DILocation(line: 112, column: 22, scope: !2429, inlinedAt: !2543)
!2616 = !DILocation(line: 112, column: 7, scope: !2426, inlinedAt: !2543)
!2617 = !DILocation(line: 113, column: 22, scope: !2435, inlinedAt: !2543)
!2618 = !DILocation(line: 113, column: 12, scope: !2435, inlinedAt: !2543)
!2619 = !DILocation(line: 113, column: 28, scope: !2435, inlinedAt: !2543)
!2620 = !DILocation(line: 113, column: 38, scope: !2435, inlinedAt: !2543)
!2621 = !DILocation(line: 113, column: 36, scope: !2435, inlinedAt: !2543)
!2622 = !DILocation(line: 113, column: 25, scope: !2435, inlinedAt: !2543)
!2623 = !DILocation(line: 113, column: 11, scope: !2435, inlinedAt: !2543)
!2624 = !DILocation(line: 113, column: 4, scope: !2435, inlinedAt: !2543)
!2625 = !DILocation(line: 115, column: 11, scope: !2444, inlinedAt: !2543)
!2626 = !DILocation(line: 115, column: 16, scope: !2444, inlinedAt: !2543)
!2627 = !DILocation(line: 115, column: 26, scope: !2444, inlinedAt: !2543)
!2628 = !DILocation(line: 115, column: 24, scope: !2444, inlinedAt: !2543)
!2629 = !DILocation(line: 115, column: 15, scope: !2444, inlinedAt: !2543)
!2630 = !DILocation(line: 115, column: 13, scope: !2444, inlinedAt: !2543)
!2631 = !DILocation(line: 115, column: 4, scope: !2444, inlinedAt: !2543)
!2632 = !DILocation(line: 117, column: 13, scope: !2452, inlinedAt: !2543)
!2633 = !DILocation(line: 117, column: 13, scope: !2423, inlinedAt: !2543)
!2634 = !DILocation(line: 118, column: 7, scope: !2455, inlinedAt: !2543)
!2635 = !DILocation(line: 118, column: 7, scope: !2456, inlinedAt: !2543)
!2636 = !DILocation(line: 119, column: 22, scope: !2459, inlinedAt: !2543)
!2637 = !DILocation(line: 119, column: 12, scope: !2459, inlinedAt: !2543)
!2638 = !DILocation(line: 119, column: 28, scope: !2459, inlinedAt: !2543)
!2639 = !DILocation(line: 119, column: 36, scope: !2459, inlinedAt: !2543)
!2640 = !DILocation(line: 119, column: 34, scope: !2459, inlinedAt: !2543)
!2641 = !DILocation(line: 119, column: 25, scope: !2459, inlinedAt: !2543)
!2642 = !DILocation(line: 119, column: 11, scope: !2459, inlinedAt: !2543)
!2643 = !DILocation(line: 119, column: 4, scope: !2459, inlinedAt: !2543)
!2644 = !DILocation(line: 121, column: 11, scope: !2468, inlinedAt: !2543)
!2645 = !DILocation(line: 121, column: 16, scope: !2468, inlinedAt: !2543)
!2646 = !DILocation(line: 121, column: 24, scope: !2468, inlinedAt: !2543)
!2647 = !DILocation(line: 121, column: 22, scope: !2468, inlinedAt: !2543)
!2648 = !DILocation(line: 121, column: 15, scope: !2468, inlinedAt: !2543)
!2649 = !DILocation(line: 121, column: 13, scope: !2468, inlinedAt: !2543)
!2650 = !DILocation(line: 121, column: 4, scope: !2468, inlinedAt: !2543)
!2651 = !DILocation(line: 124, column: 7, scope: !2476, inlinedAt: !2543)
!2652 = !DILocation(line: 124, column: 7, scope: !2477, inlinedAt: !2543)
!2653 = !DILocation(line: 125, column: 23, scope: !2480, inlinedAt: !2543)
!2654 = !DILocation(line: 125, column: 27, scope: !2480, inlinedAt: !2543)
!2655 = !DILocation(line: 125, column: 25, scope: !2480, inlinedAt: !2543)
!2656 = !DILocation(line: 125, column: 35, scope: !2480, inlinedAt: !2543)
!2657 = !DILocation(line: 125, column: 33, scope: !2480, inlinedAt: !2543)
!2658 = !DILocation(line: 125, column: 42, scope: !2480, inlinedAt: !2543)
!2659 = !DILocation(line: 125, column: 40, scope: !2480, inlinedAt: !2543)
!2660 = !DILocation(line: 125, column: 11, scope: !2480, inlinedAt: !2543)
!2661 = !DILocation(line: 125, column: 4, scope: !2480, inlinedAt: !2543)
!2662 = !DILocation(line: 127, column: 12, scope: !2490, inlinedAt: !2543)
!2663 = !DILocation(line: 127, column: 16, scope: !2490, inlinedAt: !2543)
!2664 = !DILocation(line: 127, column: 14, scope: !2490, inlinedAt: !2543)
!2665 = !DILocation(line: 127, column: 24, scope: !2490, inlinedAt: !2543)
!2666 = !DILocation(line: 127, column: 22, scope: !2490, inlinedAt: !2543)
!2667 = !DILocation(line: 127, column: 31, scope: !2490, inlinedAt: !2543)
!2668 = !DILocation(line: 127, column: 29, scope: !2490, inlinedAt: !2543)
!2669 = !DILocation(line: 127, column: 4, scope: !2490, inlinedAt: !2543)
!2670 = !DILocation(line: 130, column: 1, scope: !2336, inlinedAt: !2543)
!2671 = !DILocation(line: 1072, column: 2, scope: !2541)
!2672 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2673 = !DILocation(line: 55, column: 2, scope: !2672)
!2674 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2675 = !DILocation(line: 935, column: 3, scope: !2676, inlinedAt: !2677)
!2676 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2677 = distinct !DILocation(line: 31, column: 2, scope: !2674)
!2678 = !{i32 2221597}
!2679 = !DILocation(line: 32, column: 1, scope: !2674)
!2680 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2681 = !DILocation(line: 2174, column: 9, scope: !2680)
!2682 = !DILocation(line: 2174, column: 2, scope: !2680)
!2683 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2684 = !DILocation(line: 26, column: 9, scope: !2683)
!2685 = !DILocation(line: 26, column: 2, scope: !2683)
!2686 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2687 = !DILocation(line: 72, column: 18, scope: !2686)
!2688 = !DILocation(line: 74, column: 2, scope: !2686)
!2689 = !DILocation(line: 75, column: 20, scope: !2686)
!2690 = !DILocation(line: 75, column: 18, scope: !2686)
!2691 = !DILocation(line: 76, column: 1, scope: !2686)
!2692 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !2693, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !241, retainedNodes: !609)
!2693 = !DISubroutineType(types: !2694)
!2694 = !{!412, !2263}
!2695 = !DILocalVariable(name: "timeout", arg: 1, scope: !2692, file: !765, line: 117, type: !2263)
!2696 = !DILocation(line: 117, column: 61, scope: !2692)
!2697 = !DILocation(line: 126, column: 2, scope: !2692)
!2698 = !DILocation(line: 126, column: 2, scope: !2699)
!2699 = distinct !DILexicalBlock(scope: !2692, file: !765, line: 126, column: 2)
!2700 = !{i32 -2141855433}
!2701 = !DILocation(line: 127, column: 9, scope: !2692)
!2702 = !DILocation(line: 127, column: 2, scope: !2692)
!2703 = distinct !DISubprogram(name: "kbhit", scope: !255, file: !255, line: 73, type: !1073, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2704 = !DILocation(line: 75, column: 2, scope: !2703)
!2705 = distinct !DISubprogram(name: "init_output", scope: !255, file: !255, line: 88, type: !2706, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2706 = !DISubroutineType(types: !2707)
!2707 = !{null, !2708, !2708}
!2708 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !61, size: 32)
!2709 = !DILocalVariable(name: "continuously", arg: 1, scope: !2705, file: !255, line: 88, type: !2708)
!2710 = !DILocation(line: 88, column: 23, scope: !2705)
!2711 = !DILocalVariable(name: "autorun", arg: 2, scope: !2705, file: !255, line: 88, type: !2708)
!2712 = !DILocation(line: 88, column: 42, scope: !2705)
!2713 = !DILocation(line: 90, column: 2, scope: !2705)
!2714 = !DILocation(line: 91, column: 2, scope: !2705)
!2715 = !DILocation(line: 96, column: 14, scope: !2705)
!2716 = !DILocation(line: 97, column: 1, scope: !2705)
!2717 = distinct !DISubprogram(name: "output_close", scope: !255, file: !255, line: 105, type: !206, scopeLine: 106, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2718 = !DILocation(line: 107, column: 1, scope: !2717)
!2719 = distinct !DISubprogram(name: "main", scope: !255, file: !255, line: 120, type: !206, scopeLine: 121, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2720 = !DILocalVariable(name: "autorun", scope: !2719, file: !255, line: 122, type: !61)
!2721 = !DILocation(line: 122, column: 6, scope: !2719)
!2722 = !DILocalVariable(name: "continuously", scope: !2719, file: !255, line: 122, type: !61)
!2723 = !DILocation(line: 122, column: 19, scope: !2719)
!2724 = !DILocation(line: 124, column: 2, scope: !2719)
!2725 = !DILocation(line: 125, column: 2, scope: !2719)
!2726 = !DILocation(line: 127, column: 2, scope: !2719)
!2727 = !DILocation(line: 128, column: 2, scope: !2719)
!2728 = !DILocation(line: 129, column: 3, scope: !2729)
!2729 = distinct !DILexicalBlock(scope: !2719, file: !255, line: 128, column: 5)
!2730 = !DILocation(line: 130, column: 3, scope: !2729)
!2731 = !DILocation(line: 133, column: 3, scope: !2729)
!2732 = !DILocation(line: 134, column: 3, scope: !2729)
!2733 = !DILocation(line: 135, column: 3, scope: !2729)
!2734 = !DILocation(line: 136, column: 3, scope: !2729)
!2735 = !DILocation(line: 137, column: 3, scope: !2729)
!2736 = !DILocation(line: 138, column: 3, scope: !2729)
!2737 = !DILocation(line: 139, column: 3, scope: !2729)
!2738 = !DILocation(line: 140, column: 3, scope: !2729)
!2739 = !DILocation(line: 141, column: 3, scope: !2729)
!2740 = !DILocation(line: 144, column: 3, scope: !2729)
!2741 = !DILocation(line: 145, column: 3, scope: !2729)
!2742 = !DILocation(line: 146, column: 3, scope: !2729)
!2743 = !DILocation(line: 146, column: 3, scope: !2744)
!2744 = distinct !DILexicalBlock(scope: !2729, file: !255, line: 146, column: 3)
!2745 = !DILocation(line: 147, column: 2, scope: !2729)
!2746 = !DILocation(line: 147, column: 11, scope: !2719)
!2747 = !DILocation(line: 147, column: 24, scope: !2719)
!2748 = !DILocation(line: 147, column: 28, scope: !2719)
!2749 = !DILocation(line: 147, column: 27, scope: !2719)
!2750 = !DILocation(line: 0, scope: !2719)
!2751 = distinct !{!2751, !2727, !2752}
!2752 = !DILocation(line: 147, column: 35, scope: !2719)
!2753 = !DILocation(line: 151, column: 2, scope: !2719)
!2754 = !DILocation(line: 153, column: 2, scope: !2719)
!2755 = !DILocation(line: 154, column: 1, scope: !2719)
!2756 = distinct !DISubprogram(name: "bench_test_init", scope: !63, file: !63, line: 53, type: !206, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2757 = !DILocalVariable(name: "t", scope: !2756, file: !63, line: 55, type: !58)
!2758 = !DILocation(line: 55, column: 11, scope: !2756)
!2759 = !DILocation(line: 55, column: 15, scope: !2756)
!2760 = !DILocation(line: 57, column: 11, scope: !2756)
!2761 = !DILocation(line: 57, column: 27, scope: !2756)
!2762 = !DILocation(line: 57, column: 25, scope: !2756)
!2763 = !DILocation(line: 57, column: 9, scope: !2756)
!2764 = !DILocation(line: 58, column: 1, scope: !2756)
!2765 = distinct !DISubprogram(name: "k_thread_abort", scope: !765, file: !765, line: 200, type: !2766, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2766 = !DISubroutineType(types: !2767)
!2767 = !{null, !419}
!2768 = !DILocalVariable(name: "thread", arg: 1, scope: !2765, file: !765, line: 200, type: !419)
!2769 = !DILocation(line: 200, column: 61, scope: !2765)
!2770 = !DILocation(line: 208, column: 2, scope: !2765)
!2771 = !DILocation(line: 208, column: 2, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2765, file: !765, line: 208, column: 2)
!2773 = !{i32 -2141850071}
!2774 = !DILocation(line: 209, column: 24, scope: !2765)
!2775 = !DILocation(line: 209, column: 2, scope: !2765)
!2776 = !DILocation(line: 210, column: 1, scope: !2765)
!2777 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2778 = !DILocation(line: 2174, column: 9, scope: !2777)
!2779 = !DILocation(line: 2174, column: 2, scope: !2777)
!2780 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2781 = !DILocation(line: 26, column: 9, scope: !2780)
!2782 = !DILocation(line: 26, column: 2, scope: !2780)
!2783 = distinct !DISubprogram(name: "dummy_test", scope: !255, file: !255, line: 163, type: !206, scopeLine: 164, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !246, retainedNodes: !609)
!2784 = !DILocation(line: 165, column: 1, scope: !2783)
!2785 = distinct !DISubprogram(name: "memorymap_test", scope: !2786, file: !2786, line: 21, type: !206, scopeLine: 22, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !554, retainedNodes: !609)
!2786 = !DIFile(filename: "appl/Zephyr/app_kernel/src/memmap_b.c", directory: "/home/kenny/ara")
!2787 = !DILocalVariable(name: "et", scope: !2785, file: !2786, line: 23, type: !58)
!2788 = !DILocation(line: 23, column: 11, scope: !2785)
!2789 = !DILocalVariable(name: "i", scope: !2785, file: !2786, line: 24, type: !61)
!2790 = !DILocation(line: 24, column: 6, scope: !2785)
!2791 = !DILocalVariable(name: "p", scope: !2785, file: !2786, line: 25, type: !60)
!2792 = !DILocation(line: 25, column: 8, scope: !2785)
!2793 = !DILocalVariable(name: "alloc_status", scope: !2785, file: !2786, line: 26, type: !61)
!2794 = !DILocation(line: 26, column: 6, scope: !2785)
!2795 = !DILocation(line: 28, column: 2, scope: !2785)
!2796 = !DILocation(line: 29, column: 7, scope: !2785)
!2797 = !DILocation(line: 29, column: 5, scope: !2785)
!2798 = !DILocation(line: 30, column: 9, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2785, file: !2786, line: 30, column: 2)
!2800 = !DILocation(line: 30, column: 7, scope: !2799)
!2801 = !DILocation(line: 30, column: 14, scope: !2802)
!2802 = distinct !DILexicalBlock(scope: !2799, file: !2786, line: 30, column: 2)
!2803 = !DILocation(line: 30, column: 16, scope: !2802)
!2804 = !DILocation(line: 30, column: 2, scope: !2799)
!2805 = !DILocation(line: 31, column: 46, scope: !2806)
!2806 = distinct !DILexicalBlock(scope: !2802, file: !2786, line: 30, column: 39)
!2807 = !DILocation(line: 31, column: 18, scope: !2806)
!2808 = !DILocation(line: 31, column: 16, scope: !2806)
!2809 = !DILocation(line: 32, column: 7, scope: !2810)
!2810 = distinct !DILexicalBlock(scope: !2806, file: !2786, line: 32, column: 7)
!2811 = !DILocation(line: 32, column: 20, scope: !2810)
!2812 = !DILocation(line: 32, column: 7, scope: !2806)
!2813 = !DILocation(line: 33, column: 4, scope: !2814)
!2814 = distinct !DILexicalBlock(scope: !2815, file: !2786, line: 33, column: 4)
!2815 = distinct !DILexicalBlock(scope: !2810, file: !2786, line: 32, column: 26)
!2816 = !DILocation(line: 35, column: 4, scope: !2815)
!2817 = !DILocation(line: 37, column: 3, scope: !2806)
!2818 = !DILocation(line: 38, column: 2, scope: !2806)
!2819 = !DILocation(line: 30, column: 35, scope: !2802)
!2820 = !DILocation(line: 30, column: 2, scope: !2802)
!2821 = distinct !{!2821, !2804, !2822}
!2822 = !DILocation(line: 38, column: 2, scope: !2799)
!2823 = !DILocation(line: 39, column: 28, scope: !2785)
!2824 = !DILocation(line: 39, column: 7, scope: !2785)
!2825 = !DILocation(line: 39, column: 5, scope: !2785)
!2826 = !DILocation(line: 40, column: 2, scope: !2785)
!2827 = !DILocation(line: 42, column: 2, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2785, file: !2786, line: 42, column: 2)
!2829 = !DILocation(line: 44, column: 1, scope: !2785)
!2830 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!2831 = !DILocalVariable(name: "et", scope: !2830, file: !573, line: 177, type: !58)
!2832 = !DILocation(line: 177, column: 11, scope: !2830)
!2833 = !DILocation(line: 179, column: 2, scope: !2830)
!2834 = !DILocation(line: 180, column: 7, scope: !2830)
!2835 = !DILocation(line: 180, column: 5, scope: !2830)
!2836 = !DILocation(line: 181, column: 9, scope: !2830)
!2837 = !DILocation(line: 181, column: 2, scope: !2830)
!2838 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!2839 = !DILocalVariable(name: "ts", arg: 1, scope: !2838, file: !63, line: 33, type: !58)
!2840 = !DILocation(line: 33, column: 54, scope: !2838)
!2841 = !DILocalVariable(name: "t", scope: !2838, file: !63, line: 35, type: !58)
!2842 = !DILocation(line: 35, column: 11, scope: !2838)
!2843 = !DILocation(line: 38, column: 2, scope: !2838)
!2844 = !DILocation(line: 40, column: 6, scope: !2838)
!2845 = !DILocation(line: 40, column: 4, scope: !2838)
!2846 = !DILocalVariable(name: "res", scope: !2838, file: !63, line: 41, type: !58)
!2847 = !DILocation(line: 41, column: 11, scope: !2838)
!2848 = !DILocation(line: 41, column: 18, scope: !2838)
!2849 = !DILocation(line: 41, column: 23, scope: !2838)
!2850 = !DILocation(line: 41, column: 20, scope: !2838)
!2851 = !DILocation(line: 41, column: 17, scope: !2838)
!2852 = !DILocation(line: 41, column: 30, scope: !2838)
!2853 = !DILocation(line: 41, column: 34, scope: !2838)
!2854 = !DILocation(line: 41, column: 32, scope: !2838)
!2855 = !DILocation(line: 41, column: 53, scope: !2838)
!2856 = !DILocation(line: 41, column: 51, scope: !2838)
!2857 = !DILocation(line: 41, column: 58, scope: !2838)
!2858 = !DILocation(line: 41, column: 56, scope: !2838)
!2859 = !DILocation(line: 43, column: 6, scope: !2860)
!2860 = distinct !DILexicalBlock(scope: !2838, file: !63, line: 43, column: 6)
!2861 = !DILocation(line: 43, column: 9, scope: !2860)
!2862 = !DILocation(line: 43, column: 6, scope: !2838)
!2863 = !DILocation(line: 44, column: 10, scope: !2864)
!2864 = distinct !DILexicalBlock(scope: !2860, file: !63, line: 43, column: 14)
!2865 = !DILocation(line: 44, column: 7, scope: !2864)
!2866 = !DILocation(line: 45, column: 2, scope: !2864)
!2867 = !DILocation(line: 46, column: 9, scope: !2838)
!2868 = !DILocation(line: 46, column: 2, scope: !2838)
!2869 = distinct !DISubprogram(name: "check_result", scope: !573, file: !573, line: 184, type: !206, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!2870 = !DILocation(line: 186, column: 6, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2869, file: !573, line: 186, column: 6)
!2872 = !DILocation(line: 186, column: 23, scope: !2871)
!2873 = !DILocation(line: 186, column: 6, scope: !2869)
!2874 = !DILocation(line: 187, column: 3, scope: !2875)
!2875 = distinct !DILexicalBlock(scope: !2876, file: !573, line: 187, column: 3)
!2876 = distinct !DILexicalBlock(scope: !2871, file: !573, line: 186, column: 28)
!2877 = !DILocation(line: 188, column: 3, scope: !2876)
!2878 = !DILocation(line: 190, column: 1, scope: !2869)
!2879 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!2880 = !DILocalVariable(name: "t", arg: 1, scope: !2881, file: !856, line: 78, type: !69)
!2881 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!2882 = !DILocation(line: 78, column: 63, scope: !2881, inlinedAt: !2883)
!2883 = distinct !DILocation(line: 904, column: 9, scope: !2879)
!2884 = !DILocalVariable(name: "from_hz", arg: 2, scope: !2881, file: !856, line: 78, type: !58)
!2885 = !DILocation(line: 78, column: 75, scope: !2881, inlinedAt: !2883)
!2886 = !DILocalVariable(name: "to_hz", arg: 3, scope: !2881, file: !856, line: 79, type: !58)
!2887 = !DILocation(line: 79, column: 18, scope: !2881, inlinedAt: !2883)
!2888 = !DILocalVariable(name: "const_hz", arg: 4, scope: !2881, file: !856, line: 79, type: !863)
!2889 = !DILocation(line: 79, column: 30, scope: !2881, inlinedAt: !2883)
!2890 = !DILocalVariable(name: "result32", arg: 5, scope: !2881, file: !856, line: 80, type: !863)
!2891 = !DILocation(line: 80, column: 14, scope: !2881, inlinedAt: !2883)
!2892 = !DILocalVariable(name: "round_up", arg: 6, scope: !2881, file: !856, line: 80, type: !863)
!2893 = !DILocation(line: 80, column: 29, scope: !2881, inlinedAt: !2883)
!2894 = !DILocalVariable(name: "round_off", arg: 7, scope: !2881, file: !856, line: 81, type: !863)
!2895 = !DILocation(line: 81, column: 14, scope: !2881, inlinedAt: !2883)
!2896 = !DILocalVariable(name: "mul_ratio", scope: !2881, file: !856, line: 84, type: !863)
!2897 = !DILocation(line: 84, column: 7, scope: !2881, inlinedAt: !2883)
!2898 = !DILocalVariable(name: "div_ratio", scope: !2881, file: !856, line: 86, type: !863)
!2899 = !DILocation(line: 86, column: 7, scope: !2881, inlinedAt: !2883)
!2900 = !DILocalVariable(name: "off", scope: !2881, file: !856, line: 93, type: !69)
!2901 = !DILocation(line: 93, column: 11, scope: !2881, inlinedAt: !2883)
!2902 = !DILocalVariable(name: "rdivisor", scope: !2903, file: !856, line: 96, type: !58)
!2903 = distinct !DILexicalBlock(scope: !2904, file: !856, line: 95, column: 18)
!2904 = distinct !DILexicalBlock(scope: !2881, file: !856, line: 95, column: 6)
!2905 = !DILocation(line: 96, column: 12, scope: !2903, inlinedAt: !2883)
!2906 = !DILocalVariable(name: "t", arg: 1, scope: !2879, file: !856, line: 901, type: !69)
!2907 = !DILocation(line: 901, column: 68, scope: !2879)
!2908 = !DILocation(line: 904, column: 17, scope: !2879)
!2909 = !DILocation(line: 904, column: 20, scope: !2879)
!2910 = !DILocation(line: 84, column: 19, scope: !2881, inlinedAt: !2883)
!2911 = !DILocation(line: 84, column: 28, scope: !2881, inlinedAt: !2883)
!2912 = !DILocation(line: 85, column: 4, scope: !2881, inlinedAt: !2883)
!2913 = !DILocation(line: 85, column: 12, scope: !2881, inlinedAt: !2883)
!2914 = !DILocation(line: 85, column: 10, scope: !2881, inlinedAt: !2883)
!2915 = !DILocation(line: 85, column: 21, scope: !2881, inlinedAt: !2883)
!2916 = !DILocation(line: 85, column: 26, scope: !2881, inlinedAt: !2883)
!2917 = !DILocation(line: 85, column: 34, scope: !2881, inlinedAt: !2883)
!2918 = !DILocation(line: 85, column: 32, scope: !2881, inlinedAt: !2883)
!2919 = !DILocation(line: 85, column: 43, scope: !2881, inlinedAt: !2883)
!2920 = !DILocation(line: 0, scope: !2881, inlinedAt: !2883)
!2921 = !DILocation(line: 86, column: 19, scope: !2881, inlinedAt: !2883)
!2922 = !DILocation(line: 86, column: 28, scope: !2881, inlinedAt: !2883)
!2923 = !DILocation(line: 87, column: 4, scope: !2881, inlinedAt: !2883)
!2924 = !DILocation(line: 87, column: 14, scope: !2881, inlinedAt: !2883)
!2925 = !DILocation(line: 87, column: 12, scope: !2881, inlinedAt: !2883)
!2926 = !DILocation(line: 87, column: 21, scope: !2881, inlinedAt: !2883)
!2927 = !DILocation(line: 87, column: 26, scope: !2881, inlinedAt: !2883)
!2928 = !DILocation(line: 87, column: 36, scope: !2881, inlinedAt: !2883)
!2929 = !DILocation(line: 87, column: 34, scope: !2881, inlinedAt: !2883)
!2930 = !DILocation(line: 87, column: 43, scope: !2881, inlinedAt: !2883)
!2931 = !DILocation(line: 89, column: 6, scope: !2932, inlinedAt: !2883)
!2932 = distinct !DILexicalBlock(scope: !2881, file: !856, line: 89, column: 6)
!2933 = !DILocation(line: 89, column: 17, scope: !2932, inlinedAt: !2883)
!2934 = !DILocation(line: 89, column: 14, scope: !2932, inlinedAt: !2883)
!2935 = !DILocation(line: 89, column: 6, scope: !2881, inlinedAt: !2883)
!2936 = !DILocation(line: 90, column: 10, scope: !2937, inlinedAt: !2883)
!2937 = distinct !DILexicalBlock(scope: !2932, file: !856, line: 89, column: 24)
!2938 = !DILocation(line: 90, column: 32, scope: !2937, inlinedAt: !2883)
!2939 = !DILocation(line: 90, column: 22, scope: !2937, inlinedAt: !2883)
!2940 = !DILocation(line: 90, column: 21, scope: !2937, inlinedAt: !2883)
!2941 = !DILocation(line: 90, column: 37, scope: !2937, inlinedAt: !2883)
!2942 = !DILocation(line: 90, column: 3, scope: !2937, inlinedAt: !2883)
!2943 = !DILocation(line: 95, column: 7, scope: !2904, inlinedAt: !2883)
!2944 = !DILocation(line: 95, column: 6, scope: !2881, inlinedAt: !2883)
!2945 = !DILocation(line: 96, column: 23, scope: !2903, inlinedAt: !2883)
!2946 = !DILocation(line: 96, column: 36, scope: !2903, inlinedAt: !2883)
!2947 = !DILocation(line: 96, column: 46, scope: !2903, inlinedAt: !2883)
!2948 = !DILocation(line: 96, column: 44, scope: !2903, inlinedAt: !2883)
!2949 = !DILocation(line: 96, column: 55, scope: !2903, inlinedAt: !2883)
!2950 = !DILocation(line: 98, column: 7, scope: !2951, inlinedAt: !2883)
!2951 = distinct !DILexicalBlock(scope: !2903, file: !856, line: 98, column: 7)
!2952 = !DILocation(line: 98, column: 7, scope: !2903, inlinedAt: !2883)
!2953 = !DILocation(line: 99, column: 10, scope: !2954, inlinedAt: !2883)
!2954 = distinct !DILexicalBlock(scope: !2951, file: !856, line: 98, column: 17)
!2955 = !DILocation(line: 99, column: 19, scope: !2954, inlinedAt: !2883)
!2956 = !DILocation(line: 99, column: 8, scope: !2954, inlinedAt: !2883)
!2957 = !DILocation(line: 100, column: 3, scope: !2954, inlinedAt: !2883)
!2958 = !DILocation(line: 100, column: 14, scope: !2959, inlinedAt: !2883)
!2959 = distinct !DILexicalBlock(scope: !2951, file: !856, line: 100, column: 14)
!2960 = !DILocation(line: 100, column: 14, scope: !2951, inlinedAt: !2883)
!2961 = !DILocation(line: 101, column: 10, scope: !2962, inlinedAt: !2883)
!2962 = distinct !DILexicalBlock(scope: !2959, file: !856, line: 100, column: 25)
!2963 = !DILocation(line: 101, column: 19, scope: !2962, inlinedAt: !2883)
!2964 = !DILocation(line: 101, column: 8, scope: !2962, inlinedAt: !2883)
!2965 = !DILocation(line: 102, column: 3, scope: !2962, inlinedAt: !2883)
!2966 = !DILocation(line: 103, column: 2, scope: !2903, inlinedAt: !2883)
!2967 = !DILocation(line: 110, column: 6, scope: !2968, inlinedAt: !2883)
!2968 = distinct !DILexicalBlock(scope: !2881, file: !856, line: 110, column: 6)
!2969 = !DILocation(line: 110, column: 6, scope: !2881, inlinedAt: !2883)
!2970 = !DILocation(line: 111, column: 8, scope: !2971, inlinedAt: !2883)
!2971 = distinct !DILexicalBlock(scope: !2968, file: !856, line: 110, column: 17)
!2972 = !DILocation(line: 111, column: 5, scope: !2971, inlinedAt: !2883)
!2973 = !DILocation(line: 112, column: 7, scope: !2974, inlinedAt: !2883)
!2974 = distinct !DILexicalBlock(scope: !2971, file: !856, line: 112, column: 7)
!2975 = !DILocation(line: 112, column: 16, scope: !2974, inlinedAt: !2883)
!2976 = !DILocation(line: 112, column: 20, scope: !2974, inlinedAt: !2883)
!2977 = !DILocation(line: 112, column: 22, scope: !2974, inlinedAt: !2883)
!2978 = !DILocation(line: 112, column: 7, scope: !2971, inlinedAt: !2883)
!2979 = !DILocation(line: 113, column: 22, scope: !2980, inlinedAt: !2883)
!2980 = distinct !DILexicalBlock(scope: !2974, file: !856, line: 112, column: 36)
!2981 = !DILocation(line: 113, column: 12, scope: !2980, inlinedAt: !2883)
!2982 = !DILocation(line: 113, column: 28, scope: !2980, inlinedAt: !2883)
!2983 = !DILocation(line: 113, column: 38, scope: !2980, inlinedAt: !2883)
!2984 = !DILocation(line: 113, column: 36, scope: !2980, inlinedAt: !2883)
!2985 = !DILocation(line: 113, column: 25, scope: !2980, inlinedAt: !2883)
!2986 = !DILocation(line: 113, column: 11, scope: !2980, inlinedAt: !2883)
!2987 = !DILocation(line: 113, column: 4, scope: !2980, inlinedAt: !2883)
!2988 = !DILocation(line: 115, column: 11, scope: !2989, inlinedAt: !2883)
!2989 = distinct !DILexicalBlock(scope: !2974, file: !856, line: 114, column: 10)
!2990 = !DILocation(line: 115, column: 16, scope: !2989, inlinedAt: !2883)
!2991 = !DILocation(line: 115, column: 26, scope: !2989, inlinedAt: !2883)
!2992 = !DILocation(line: 115, column: 24, scope: !2989, inlinedAt: !2883)
!2993 = !DILocation(line: 115, column: 15, scope: !2989, inlinedAt: !2883)
!2994 = !DILocation(line: 115, column: 13, scope: !2989, inlinedAt: !2883)
!2995 = !DILocation(line: 115, column: 4, scope: !2989, inlinedAt: !2883)
!2996 = !DILocation(line: 117, column: 13, scope: !2997, inlinedAt: !2883)
!2997 = distinct !DILexicalBlock(scope: !2968, file: !856, line: 117, column: 13)
!2998 = !DILocation(line: 117, column: 13, scope: !2968, inlinedAt: !2883)
!2999 = !DILocation(line: 118, column: 7, scope: !3000, inlinedAt: !2883)
!3000 = distinct !DILexicalBlock(scope: !3001, file: !856, line: 118, column: 7)
!3001 = distinct !DILexicalBlock(scope: !2997, file: !856, line: 117, column: 24)
!3002 = !DILocation(line: 118, column: 7, scope: !3001, inlinedAt: !2883)
!3003 = !DILocation(line: 119, column: 22, scope: !3004, inlinedAt: !2883)
!3004 = distinct !DILexicalBlock(scope: !3000, file: !856, line: 118, column: 17)
!3005 = !DILocation(line: 119, column: 12, scope: !3004, inlinedAt: !2883)
!3006 = !DILocation(line: 119, column: 28, scope: !3004, inlinedAt: !2883)
!3007 = !DILocation(line: 119, column: 36, scope: !3004, inlinedAt: !2883)
!3008 = !DILocation(line: 119, column: 34, scope: !3004, inlinedAt: !2883)
!3009 = !DILocation(line: 119, column: 25, scope: !3004, inlinedAt: !2883)
!3010 = !DILocation(line: 119, column: 11, scope: !3004, inlinedAt: !2883)
!3011 = !DILocation(line: 119, column: 4, scope: !3004, inlinedAt: !2883)
!3012 = !DILocation(line: 121, column: 11, scope: !3013, inlinedAt: !2883)
!3013 = distinct !DILexicalBlock(scope: !3000, file: !856, line: 120, column: 10)
!3014 = !DILocation(line: 121, column: 16, scope: !3013, inlinedAt: !2883)
!3015 = !DILocation(line: 121, column: 24, scope: !3013, inlinedAt: !2883)
!3016 = !DILocation(line: 121, column: 22, scope: !3013, inlinedAt: !2883)
!3017 = !DILocation(line: 121, column: 15, scope: !3013, inlinedAt: !2883)
!3018 = !DILocation(line: 121, column: 13, scope: !3013, inlinedAt: !2883)
!3019 = !DILocation(line: 121, column: 4, scope: !3013, inlinedAt: !2883)
!3020 = !DILocation(line: 124, column: 7, scope: !3021, inlinedAt: !2883)
!3021 = distinct !DILexicalBlock(scope: !3022, file: !856, line: 124, column: 7)
!3022 = distinct !DILexicalBlock(scope: !2997, file: !856, line: 123, column: 9)
!3023 = !DILocation(line: 124, column: 7, scope: !3022, inlinedAt: !2883)
!3024 = !DILocation(line: 125, column: 23, scope: !3025, inlinedAt: !2883)
!3025 = distinct !DILexicalBlock(scope: !3021, file: !856, line: 124, column: 17)
!3026 = !DILocation(line: 125, column: 27, scope: !3025, inlinedAt: !2883)
!3027 = !DILocation(line: 125, column: 25, scope: !3025, inlinedAt: !2883)
!3028 = !DILocation(line: 125, column: 35, scope: !3025, inlinedAt: !2883)
!3029 = !DILocation(line: 125, column: 33, scope: !3025, inlinedAt: !2883)
!3030 = !DILocation(line: 125, column: 42, scope: !3025, inlinedAt: !2883)
!3031 = !DILocation(line: 125, column: 40, scope: !3025, inlinedAt: !2883)
!3032 = !DILocation(line: 125, column: 11, scope: !3025, inlinedAt: !2883)
!3033 = !DILocation(line: 125, column: 4, scope: !3025, inlinedAt: !2883)
!3034 = !DILocation(line: 127, column: 12, scope: !3035, inlinedAt: !2883)
!3035 = distinct !DILexicalBlock(scope: !3021, file: !856, line: 126, column: 10)
!3036 = !DILocation(line: 127, column: 16, scope: !3035, inlinedAt: !2883)
!3037 = !DILocation(line: 127, column: 14, scope: !3035, inlinedAt: !2883)
!3038 = !DILocation(line: 127, column: 24, scope: !3035, inlinedAt: !2883)
!3039 = !DILocation(line: 127, column: 22, scope: !3035, inlinedAt: !2883)
!3040 = !DILocation(line: 127, column: 31, scope: !3035, inlinedAt: !2883)
!3041 = !DILocation(line: 127, column: 29, scope: !3035, inlinedAt: !2883)
!3042 = !DILocation(line: 127, column: 4, scope: !3035, inlinedAt: !2883)
!3043 = !DILocation(line: 130, column: 1, scope: !2881, inlinedAt: !2883)
!3044 = !DILocation(line: 904, column: 2, scope: !2879)
!3045 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3046 = !DILocation(line: 55, column: 2, scope: !3045)
!3047 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3048 = !DILocation(line: 82, column: 20, scope: !3047)
!3049 = !DILocation(line: 82, column: 18, scope: !3047)
!3050 = !DILocation(line: 90, column: 6, scope: !3051)
!3051 = distinct !DILexicalBlock(scope: !3047, file: !63, line: 90, column: 6)
!3052 = !DILocation(line: 90, column: 22, scope: !3051)
!3053 = !DILocation(line: 90, column: 6, scope: !3047)
!3054 = !DILocation(line: 91, column: 3, scope: !3055)
!3055 = distinct !DILexicalBlock(scope: !3051, file: !63, line: 90, column: 39)
!3056 = !DILocation(line: 93, column: 2, scope: !3047)
!3057 = !DILocation(line: 94, column: 1, scope: !3047)
!3058 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3059 = !DILocalVariable(name: "reftime", arg: 1, scope: !3058, file: !6, line: 2133, type: !1088)
!3060 = !DILocation(line: 2133, column: 47, scope: !3058)
!3061 = !DILocalVariable(name: "uptime", scope: !3058, file: !6, line: 2135, type: !55)
!3062 = !DILocation(line: 2135, column: 10, scope: !3058)
!3063 = !DILocalVariable(name: "delta", scope: !3058, file: !6, line: 2135, type: !55)
!3064 = !DILocation(line: 2135, column: 18, scope: !3058)
!3065 = !DILocation(line: 2137, column: 11, scope: !3058)
!3066 = !DILocation(line: 2137, column: 9, scope: !3058)
!3067 = !DILocation(line: 2138, column: 10, scope: !3058)
!3068 = !DILocation(line: 2138, column: 20, scope: !3058)
!3069 = !DILocation(line: 2138, column: 19, scope: !3058)
!3070 = !DILocation(line: 2138, column: 17, scope: !3058)
!3071 = !DILocation(line: 2138, column: 8, scope: !3058)
!3072 = !DILocation(line: 2139, column: 13, scope: !3058)
!3073 = !DILocation(line: 2139, column: 3, scope: !3058)
!3074 = !DILocation(line: 2139, column: 11, scope: !3058)
!3075 = !DILocation(line: 2141, column: 9, scope: !3058)
!3076 = !DILocation(line: 2141, column: 2, scope: !3058)
!3077 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3078 = !DILocation(line: 2061, column: 31, scope: !3077)
!3079 = !DILocation(line: 2061, column: 9, scope: !3077)
!3080 = !DILocation(line: 2061, column: 2, scope: !3077)
!3081 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3082 = !DILocation(line: 509, column: 2, scope: !3081)
!3083 = !DILocation(line: 509, column: 2, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !3081, file: !765, line: 509, column: 2)
!3085 = !{i32 -2141851020}
!3086 = !DILocation(line: 510, column: 9, scope: !3081)
!3087 = !DILocation(line: 510, column: 2, scope: !3081)
!3088 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3089 = !DILocation(line: 78, column: 63, scope: !2881, inlinedAt: !3090)
!3090 = distinct !DILocation(line: 1072, column: 9, scope: !3088)
!3091 = !DILocation(line: 78, column: 75, scope: !2881, inlinedAt: !3090)
!3092 = !DILocation(line: 79, column: 18, scope: !2881, inlinedAt: !3090)
!3093 = !DILocation(line: 79, column: 30, scope: !2881, inlinedAt: !3090)
!3094 = !DILocation(line: 80, column: 14, scope: !2881, inlinedAt: !3090)
!3095 = !DILocation(line: 80, column: 29, scope: !2881, inlinedAt: !3090)
!3096 = !DILocation(line: 81, column: 14, scope: !2881, inlinedAt: !3090)
!3097 = !DILocation(line: 84, column: 7, scope: !2881, inlinedAt: !3090)
!3098 = !DILocation(line: 86, column: 7, scope: !2881, inlinedAt: !3090)
!3099 = !DILocation(line: 93, column: 11, scope: !2881, inlinedAt: !3090)
!3100 = !DILocation(line: 96, column: 12, scope: !2903, inlinedAt: !3090)
!3101 = !DILocalVariable(name: "t", arg: 1, scope: !3088, file: !856, line: 1069, type: !69)
!3102 = !DILocation(line: 1069, column: 70, scope: !3088)
!3103 = !DILocation(line: 1072, column: 17, scope: !3088)
!3104 = !DILocation(line: 84, column: 19, scope: !2881, inlinedAt: !3090)
!3105 = !DILocation(line: 84, column: 28, scope: !2881, inlinedAt: !3090)
!3106 = !DILocation(line: 85, column: 4, scope: !2881, inlinedAt: !3090)
!3107 = !DILocation(line: 85, column: 12, scope: !2881, inlinedAt: !3090)
!3108 = !DILocation(line: 85, column: 10, scope: !2881, inlinedAt: !3090)
!3109 = !DILocation(line: 85, column: 21, scope: !2881, inlinedAt: !3090)
!3110 = !DILocation(line: 85, column: 26, scope: !2881, inlinedAt: !3090)
!3111 = !DILocation(line: 85, column: 34, scope: !2881, inlinedAt: !3090)
!3112 = !DILocation(line: 85, column: 32, scope: !2881, inlinedAt: !3090)
!3113 = !DILocation(line: 85, column: 43, scope: !2881, inlinedAt: !3090)
!3114 = !DILocation(line: 0, scope: !2881, inlinedAt: !3090)
!3115 = !DILocation(line: 86, column: 19, scope: !2881, inlinedAt: !3090)
!3116 = !DILocation(line: 86, column: 28, scope: !2881, inlinedAt: !3090)
!3117 = !DILocation(line: 87, column: 4, scope: !2881, inlinedAt: !3090)
!3118 = !DILocation(line: 87, column: 14, scope: !2881, inlinedAt: !3090)
!3119 = !DILocation(line: 87, column: 12, scope: !2881, inlinedAt: !3090)
!3120 = !DILocation(line: 87, column: 21, scope: !2881, inlinedAt: !3090)
!3121 = !DILocation(line: 87, column: 26, scope: !2881, inlinedAt: !3090)
!3122 = !DILocation(line: 87, column: 36, scope: !2881, inlinedAt: !3090)
!3123 = !DILocation(line: 87, column: 34, scope: !2881, inlinedAt: !3090)
!3124 = !DILocation(line: 87, column: 43, scope: !2881, inlinedAt: !3090)
!3125 = !DILocation(line: 89, column: 6, scope: !2932, inlinedAt: !3090)
!3126 = !DILocation(line: 89, column: 17, scope: !2932, inlinedAt: !3090)
!3127 = !DILocation(line: 89, column: 14, scope: !2932, inlinedAt: !3090)
!3128 = !DILocation(line: 89, column: 6, scope: !2881, inlinedAt: !3090)
!3129 = !DILocation(line: 90, column: 10, scope: !2937, inlinedAt: !3090)
!3130 = !DILocation(line: 90, column: 32, scope: !2937, inlinedAt: !3090)
!3131 = !DILocation(line: 90, column: 22, scope: !2937, inlinedAt: !3090)
!3132 = !DILocation(line: 90, column: 21, scope: !2937, inlinedAt: !3090)
!3133 = !DILocation(line: 90, column: 37, scope: !2937, inlinedAt: !3090)
!3134 = !DILocation(line: 90, column: 3, scope: !2937, inlinedAt: !3090)
!3135 = !DILocation(line: 95, column: 7, scope: !2904, inlinedAt: !3090)
!3136 = !DILocation(line: 95, column: 6, scope: !2881, inlinedAt: !3090)
!3137 = !DILocation(line: 96, column: 23, scope: !2903, inlinedAt: !3090)
!3138 = !DILocation(line: 96, column: 36, scope: !2903, inlinedAt: !3090)
!3139 = !DILocation(line: 96, column: 46, scope: !2903, inlinedAt: !3090)
!3140 = !DILocation(line: 96, column: 44, scope: !2903, inlinedAt: !3090)
!3141 = !DILocation(line: 96, column: 55, scope: !2903, inlinedAt: !3090)
!3142 = !DILocation(line: 98, column: 7, scope: !2951, inlinedAt: !3090)
!3143 = !DILocation(line: 98, column: 7, scope: !2903, inlinedAt: !3090)
!3144 = !DILocation(line: 99, column: 10, scope: !2954, inlinedAt: !3090)
!3145 = !DILocation(line: 99, column: 19, scope: !2954, inlinedAt: !3090)
!3146 = !DILocation(line: 99, column: 8, scope: !2954, inlinedAt: !3090)
!3147 = !DILocation(line: 100, column: 3, scope: !2954, inlinedAt: !3090)
!3148 = !DILocation(line: 100, column: 14, scope: !2959, inlinedAt: !3090)
!3149 = !DILocation(line: 100, column: 14, scope: !2951, inlinedAt: !3090)
!3150 = !DILocation(line: 101, column: 10, scope: !2962, inlinedAt: !3090)
!3151 = !DILocation(line: 101, column: 19, scope: !2962, inlinedAt: !3090)
!3152 = !DILocation(line: 101, column: 8, scope: !2962, inlinedAt: !3090)
!3153 = !DILocation(line: 102, column: 3, scope: !2962, inlinedAt: !3090)
!3154 = !DILocation(line: 103, column: 2, scope: !2903, inlinedAt: !3090)
!3155 = !DILocation(line: 110, column: 6, scope: !2968, inlinedAt: !3090)
!3156 = !DILocation(line: 110, column: 6, scope: !2881, inlinedAt: !3090)
!3157 = !DILocation(line: 111, column: 8, scope: !2971, inlinedAt: !3090)
!3158 = !DILocation(line: 111, column: 5, scope: !2971, inlinedAt: !3090)
!3159 = !DILocation(line: 112, column: 7, scope: !2974, inlinedAt: !3090)
!3160 = !DILocation(line: 112, column: 16, scope: !2974, inlinedAt: !3090)
!3161 = !DILocation(line: 112, column: 20, scope: !2974, inlinedAt: !3090)
!3162 = !DILocation(line: 112, column: 22, scope: !2974, inlinedAt: !3090)
!3163 = !DILocation(line: 112, column: 7, scope: !2971, inlinedAt: !3090)
!3164 = !DILocation(line: 113, column: 22, scope: !2980, inlinedAt: !3090)
!3165 = !DILocation(line: 113, column: 12, scope: !2980, inlinedAt: !3090)
!3166 = !DILocation(line: 113, column: 28, scope: !2980, inlinedAt: !3090)
!3167 = !DILocation(line: 113, column: 38, scope: !2980, inlinedAt: !3090)
!3168 = !DILocation(line: 113, column: 36, scope: !2980, inlinedAt: !3090)
!3169 = !DILocation(line: 113, column: 25, scope: !2980, inlinedAt: !3090)
!3170 = !DILocation(line: 113, column: 11, scope: !2980, inlinedAt: !3090)
!3171 = !DILocation(line: 113, column: 4, scope: !2980, inlinedAt: !3090)
!3172 = !DILocation(line: 115, column: 11, scope: !2989, inlinedAt: !3090)
!3173 = !DILocation(line: 115, column: 16, scope: !2989, inlinedAt: !3090)
!3174 = !DILocation(line: 115, column: 26, scope: !2989, inlinedAt: !3090)
!3175 = !DILocation(line: 115, column: 24, scope: !2989, inlinedAt: !3090)
!3176 = !DILocation(line: 115, column: 15, scope: !2989, inlinedAt: !3090)
!3177 = !DILocation(line: 115, column: 13, scope: !2989, inlinedAt: !3090)
!3178 = !DILocation(line: 115, column: 4, scope: !2989, inlinedAt: !3090)
!3179 = !DILocation(line: 117, column: 13, scope: !2997, inlinedAt: !3090)
!3180 = !DILocation(line: 117, column: 13, scope: !2968, inlinedAt: !3090)
!3181 = !DILocation(line: 118, column: 7, scope: !3000, inlinedAt: !3090)
!3182 = !DILocation(line: 118, column: 7, scope: !3001, inlinedAt: !3090)
!3183 = !DILocation(line: 119, column: 22, scope: !3004, inlinedAt: !3090)
!3184 = !DILocation(line: 119, column: 12, scope: !3004, inlinedAt: !3090)
!3185 = !DILocation(line: 119, column: 28, scope: !3004, inlinedAt: !3090)
!3186 = !DILocation(line: 119, column: 36, scope: !3004, inlinedAt: !3090)
!3187 = !DILocation(line: 119, column: 34, scope: !3004, inlinedAt: !3090)
!3188 = !DILocation(line: 119, column: 25, scope: !3004, inlinedAt: !3090)
!3189 = !DILocation(line: 119, column: 11, scope: !3004, inlinedAt: !3090)
!3190 = !DILocation(line: 119, column: 4, scope: !3004, inlinedAt: !3090)
!3191 = !DILocation(line: 121, column: 11, scope: !3013, inlinedAt: !3090)
!3192 = !DILocation(line: 121, column: 16, scope: !3013, inlinedAt: !3090)
!3193 = !DILocation(line: 121, column: 24, scope: !3013, inlinedAt: !3090)
!3194 = !DILocation(line: 121, column: 22, scope: !3013, inlinedAt: !3090)
!3195 = !DILocation(line: 121, column: 15, scope: !3013, inlinedAt: !3090)
!3196 = !DILocation(line: 121, column: 13, scope: !3013, inlinedAt: !3090)
!3197 = !DILocation(line: 121, column: 4, scope: !3013, inlinedAt: !3090)
!3198 = !DILocation(line: 124, column: 7, scope: !3021, inlinedAt: !3090)
!3199 = !DILocation(line: 124, column: 7, scope: !3022, inlinedAt: !3090)
!3200 = !DILocation(line: 125, column: 23, scope: !3025, inlinedAt: !3090)
!3201 = !DILocation(line: 125, column: 27, scope: !3025, inlinedAt: !3090)
!3202 = !DILocation(line: 125, column: 25, scope: !3025, inlinedAt: !3090)
!3203 = !DILocation(line: 125, column: 35, scope: !3025, inlinedAt: !3090)
!3204 = !DILocation(line: 125, column: 33, scope: !3025, inlinedAt: !3090)
!3205 = !DILocation(line: 125, column: 42, scope: !3025, inlinedAt: !3090)
!3206 = !DILocation(line: 125, column: 40, scope: !3025, inlinedAt: !3090)
!3207 = !DILocation(line: 125, column: 11, scope: !3025, inlinedAt: !3090)
!3208 = !DILocation(line: 125, column: 4, scope: !3025, inlinedAt: !3090)
!3209 = !DILocation(line: 127, column: 12, scope: !3035, inlinedAt: !3090)
!3210 = !DILocation(line: 127, column: 16, scope: !3035, inlinedAt: !3090)
!3211 = !DILocation(line: 127, column: 14, scope: !3035, inlinedAt: !3090)
!3212 = !DILocation(line: 127, column: 24, scope: !3035, inlinedAt: !3090)
!3213 = !DILocation(line: 127, column: 22, scope: !3035, inlinedAt: !3090)
!3214 = !DILocation(line: 127, column: 31, scope: !3035, inlinedAt: !3090)
!3215 = !DILocation(line: 127, column: 29, scope: !3035, inlinedAt: !3090)
!3216 = !DILocation(line: 127, column: 4, scope: !3035, inlinedAt: !3090)
!3217 = !DILocation(line: 130, column: 1, scope: !2881, inlinedAt: !3090)
!3218 = !DILocation(line: 1072, column: 2, scope: !3088)
!3219 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3220 = !DILocation(line: 935, column: 3, scope: !3221, inlinedAt: !3222)
!3221 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3222 = distinct !DILocation(line: 31, column: 2, scope: !3219)
!3223 = !{i32 2224106}
!3224 = !DILocation(line: 32, column: 1, scope: !3219)
!3225 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3226 = !DILocation(line: 2174, column: 9, scope: !3225)
!3227 = !DILocation(line: 2174, column: 2, scope: !3225)
!3228 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3229 = !DILocation(line: 26, column: 9, scope: !3228)
!3230 = !DILocation(line: 26, column: 2, scope: !3228)
!3231 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3232 = !DILocation(line: 72, column: 18, scope: !3231)
!3233 = !DILocation(line: 74, column: 2, scope: !3231)
!3234 = !DILocation(line: 75, column: 20, scope: !3231)
!3235 = !DILocation(line: 75, column: 18, scope: !3231)
!3236 = !DILocation(line: 76, column: 1, scope: !3231)
!3237 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !3238, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !554, retainedNodes: !609)
!3238 = !DISubroutineType(types: !3239)
!3239 = !{!412, !3240}
!3240 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !3241)
!3241 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !3242)
!3242 = !{!3243}
!3243 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3241, file: !54, line: 68, baseType: !53, size: 64)
!3244 = !DILocalVariable(name: "timeout", arg: 1, scope: !3237, file: !765, line: 117, type: !3240)
!3245 = !DILocation(line: 117, column: 61, scope: !3237)
!3246 = !DILocation(line: 126, column: 2, scope: !3237)
!3247 = !DILocation(line: 126, column: 2, scope: !3248)
!3248 = distinct !DILexicalBlock(scope: !3237, file: !765, line: 126, column: 2)
!3249 = !{i32 -2141852924}
!3250 = !DILocation(line: 127, column: 9, scope: !3237)
!3251 = !DILocation(line: 127, column: 2, scope: !3237)
!3252 = distinct !DISubprogram(name: "mempool_test", scope: !3253, file: !3253, line: 19, type: !206, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3253 = !DIFile(filename: "appl/Zephyr/app_kernel/src/mempool_b.c", directory: "/home/kenny/ara")
!3254 = !DILocalVariable(name: "et", scope: !3252, file: !3253, line: 21, type: !58)
!3255 = !DILocation(line: 21, column: 11, scope: !3252)
!3256 = !DILocalVariable(name: "i", scope: !3252, file: !3253, line: 22, type: !61)
!3257 = !DILocation(line: 22, column: 6, scope: !3252)
!3258 = !DILocalVariable(name: "return_value", scope: !3252, file: !3253, line: 23, type: !412)
!3259 = !DILocation(line: 23, column: 10, scope: !3252)
!3260 = !DILocalVariable(name: "block", scope: !3252, file: !3253, line: 24, type: !3261)
!3261 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_block", file: !86, line: 23, size: 64, elements: !3262)
!3262 = !{!3263}
!3263 = !DIDerivedType(tag: DW_TAG_member, scope: !3261, file: !86, line: 24, baseType: !3264, size: 64)
!3264 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3261, file: !86, line: 24, size: 64, elements: !3265)
!3265 = !{!3266, !3267}
!3266 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3264, file: !86, line: 25, baseType: !60, size: 32)
!3267 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !3264, file: !86, line: 26, baseType: !3268, size: 64)
!3268 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_block_id", file: !86, line: 15, size: 64, elements: !3269)
!3269 = !{!3270, !3271}
!3270 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !3268, file: !86, line: 16, baseType: !60, size: 32)
!3271 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3268, file: !86, line: 17, baseType: !3272, size: 32, offset: 32)
!3272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3273, size: 32)
!3273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !99, line: 267, size: 192, elements: !3274)
!3274 = !{!3275, !3281, !3300}
!3275 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3273, file: !99, line: 268, baseType: !3276, size: 96)
!3276 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !103, line: 51, size: 96, elements: !3277)
!3277 = !{!3278, !3279, !3280}
!3278 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3276, file: !103, line: 52, baseType: !106, size: 32)
!3279 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3276, file: !103, line: 53, baseType: !60, size: 32, offset: 32)
!3280 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3276, file: !103, line: 54, baseType: !79, size: 32, offset: 64)
!3281 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3273, file: !99, line: 269, baseType: !3282, size: 64, offset: 96)
!3282 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !3283)
!3283 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !3284)
!3284 = !{!3285}
!3285 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3283, file: !99, line: 209, baseType: !3286, size: 64)
!3286 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !3287)
!3287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !3288)
!3288 = !{!3289, !3295}
!3289 = !DIDerivedType(tag: DW_TAG_member, scope: !3287, file: !116, line: 32, baseType: !3290, size: 32)
!3290 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3287, file: !116, line: 32, size: 32, elements: !3291)
!3291 = !{!3292, !3294}
!3292 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3290, file: !116, line: 33, baseType: !3293, size: 32)
!3293 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3287, size: 32)
!3294 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3290, file: !116, line: 34, baseType: !3293, size: 32)
!3295 = !DIDerivedType(tag: DW_TAG_member, scope: !3287, file: !116, line: 36, baseType: !3296, size: 32, offset: 32)
!3296 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3287, file: !116, line: 36, size: 32, elements: !3297)
!3297 = !{!3298, !3299}
!3298 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3296, file: !116, line: 37, baseType: !3293, size: 32)
!3299 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3296, file: !116, line: 38, baseType: !3293, size: 32)
!3300 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3273, file: !99, line: 270, baseType: !3301, size: 32, offset: 160)
!3301 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !3302)
!3302 = !{!3303}
!3303 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3301, file: !99, line: 243, baseType: !134, size: 32)
!3304 = !DILocation(line: 24, column: 21, scope: !3252)
!3305 = !DILocation(line: 26, column: 2, scope: !3252)
!3306 = !DILocation(line: 27, column: 7, scope: !3252)
!3307 = !DILocation(line: 27, column: 5, scope: !3252)
!3308 = !DILocation(line: 28, column: 9, scope: !3309)
!3309 = distinct !DILexicalBlock(scope: !3252, file: !3253, line: 28, column: 2)
!3310 = !DILocation(line: 28, column: 7, scope: !3309)
!3311 = !DILocation(line: 28, column: 14, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3309, file: !3253, line: 28, column: 2)
!3313 = !DILocation(line: 28, column: 16, scope: !3312)
!3314 = !DILocation(line: 28, column: 2, scope: !3309)
!3315 = !DILocation(line: 32, column: 7, scope: !3316)
!3316 = distinct !DILexicalBlock(scope: !3312, file: !3253, line: 28, column: 40)
!3317 = !DILocation(line: 29, column: 19, scope: !3316)
!3318 = !DILocation(line: 29, column: 16, scope: !3316)
!3319 = !DILocation(line: 33, column: 3, scope: !3316)
!3320 = !DILocation(line: 34, column: 2, scope: !3316)
!3321 = !DILocation(line: 28, column: 36, scope: !3312)
!3322 = !DILocation(line: 28, column: 2, scope: !3312)
!3323 = distinct !{!3323, !3314, !3324}
!3324 = !DILocation(line: 34, column: 2, scope: !3309)
!3325 = !DILocation(line: 35, column: 28, scope: !3252)
!3326 = !DILocation(line: 35, column: 7, scope: !3252)
!3327 = !DILocation(line: 35, column: 5, scope: !3252)
!3328 = !DILocation(line: 36, column: 2, scope: !3252)
!3329 = !DILocation(line: 38, column: 6, scope: !3330)
!3330 = distinct !DILexicalBlock(scope: !3252, file: !3253, line: 38, column: 6)
!3331 = !DILocation(line: 38, column: 19, scope: !3330)
!3332 = !DILocation(line: 38, column: 6, scope: !3252)
!3333 = !DILocation(line: 39, column: 3, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3330, file: !3253, line: 38, column: 25)
!3335 = !DILocation(line: 39, column: 3, scope: !3336)
!3336 = distinct !DILexicalBlock(scope: !3334, file: !3253, line: 39, column: 3)
!3337 = !{i32 -2141825908, i32 -2141825892, i32 -2141825866, i32 -2141825838, i32 -2141825818}
!3338 = !DILocation(line: 40, column: 2, scope: !3334)
!3339 = !DILocation(line: 41, column: 2, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3252, file: !3253, line: 41, column: 2)
!3341 = !DILocation(line: 44, column: 1, scope: !3252)
!3342 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3343 = !DILocalVariable(name: "et", scope: !3342, file: !573, line: 177, type: !58)
!3344 = !DILocation(line: 177, column: 11, scope: !3342)
!3345 = !DILocation(line: 179, column: 2, scope: !3342)
!3346 = !DILocation(line: 180, column: 7, scope: !3342)
!3347 = !DILocation(line: 180, column: 5, scope: !3342)
!3348 = !DILocation(line: 181, column: 9, scope: !3342)
!3349 = !DILocation(line: 181, column: 2, scope: !3342)
!3350 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3351 = !DILocalVariable(name: "ts", arg: 1, scope: !3350, file: !63, line: 33, type: !58)
!3352 = !DILocation(line: 33, column: 54, scope: !3350)
!3353 = !DILocalVariable(name: "t", scope: !3350, file: !63, line: 35, type: !58)
!3354 = !DILocation(line: 35, column: 11, scope: !3350)
!3355 = !DILocation(line: 38, column: 2, scope: !3350)
!3356 = !DILocation(line: 40, column: 6, scope: !3350)
!3357 = !DILocation(line: 40, column: 4, scope: !3350)
!3358 = !DILocalVariable(name: "res", scope: !3350, file: !63, line: 41, type: !58)
!3359 = !DILocation(line: 41, column: 11, scope: !3350)
!3360 = !DILocation(line: 41, column: 18, scope: !3350)
!3361 = !DILocation(line: 41, column: 23, scope: !3350)
!3362 = !DILocation(line: 41, column: 20, scope: !3350)
!3363 = !DILocation(line: 41, column: 17, scope: !3350)
!3364 = !DILocation(line: 41, column: 30, scope: !3350)
!3365 = !DILocation(line: 41, column: 34, scope: !3350)
!3366 = !DILocation(line: 41, column: 32, scope: !3350)
!3367 = !DILocation(line: 41, column: 53, scope: !3350)
!3368 = !DILocation(line: 41, column: 51, scope: !3350)
!3369 = !DILocation(line: 41, column: 58, scope: !3350)
!3370 = !DILocation(line: 41, column: 56, scope: !3350)
!3371 = !DILocation(line: 43, column: 6, scope: !3372)
!3372 = distinct !DILexicalBlock(scope: !3350, file: !63, line: 43, column: 6)
!3373 = !DILocation(line: 43, column: 9, scope: !3372)
!3374 = !DILocation(line: 43, column: 6, scope: !3350)
!3375 = !DILocation(line: 44, column: 10, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3372, file: !63, line: 43, column: 14)
!3377 = !DILocation(line: 44, column: 7, scope: !3376)
!3378 = !DILocation(line: 45, column: 2, scope: !3376)
!3379 = !DILocation(line: 46, column: 9, scope: !3350)
!3380 = !DILocation(line: 46, column: 2, scope: !3350)
!3381 = distinct !DISubprogram(name: "check_result", scope: !573, file: !573, line: 184, type: !206, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3382 = !DILocation(line: 186, column: 6, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3381, file: !573, line: 186, column: 6)
!3384 = !DILocation(line: 186, column: 23, scope: !3383)
!3385 = !DILocation(line: 186, column: 6, scope: !3381)
!3386 = !DILocation(line: 187, column: 3, scope: !3387)
!3387 = distinct !DILexicalBlock(scope: !3388, file: !573, line: 187, column: 3)
!3388 = distinct !DILexicalBlock(scope: !3383, file: !573, line: 186, column: 28)
!3389 = !DILocation(line: 188, column: 3, scope: !3388)
!3390 = !DILocation(line: 190, column: 1, scope: !3381)
!3391 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3392 = !DILocalVariable(name: "t", arg: 1, scope: !3393, file: !856, line: 78, type: !69)
!3393 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3394 = !DILocation(line: 78, column: 63, scope: !3393, inlinedAt: !3395)
!3395 = distinct !DILocation(line: 904, column: 9, scope: !3391)
!3396 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3393, file: !856, line: 78, type: !58)
!3397 = !DILocation(line: 78, column: 75, scope: !3393, inlinedAt: !3395)
!3398 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3393, file: !856, line: 79, type: !58)
!3399 = !DILocation(line: 79, column: 18, scope: !3393, inlinedAt: !3395)
!3400 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3393, file: !856, line: 79, type: !863)
!3401 = !DILocation(line: 79, column: 30, scope: !3393, inlinedAt: !3395)
!3402 = !DILocalVariable(name: "result32", arg: 5, scope: !3393, file: !856, line: 80, type: !863)
!3403 = !DILocation(line: 80, column: 14, scope: !3393, inlinedAt: !3395)
!3404 = !DILocalVariable(name: "round_up", arg: 6, scope: !3393, file: !856, line: 80, type: !863)
!3405 = !DILocation(line: 80, column: 29, scope: !3393, inlinedAt: !3395)
!3406 = !DILocalVariable(name: "round_off", arg: 7, scope: !3393, file: !856, line: 81, type: !863)
!3407 = !DILocation(line: 81, column: 14, scope: !3393, inlinedAt: !3395)
!3408 = !DILocalVariable(name: "mul_ratio", scope: !3393, file: !856, line: 84, type: !863)
!3409 = !DILocation(line: 84, column: 7, scope: !3393, inlinedAt: !3395)
!3410 = !DILocalVariable(name: "div_ratio", scope: !3393, file: !856, line: 86, type: !863)
!3411 = !DILocation(line: 86, column: 7, scope: !3393, inlinedAt: !3395)
!3412 = !DILocalVariable(name: "off", scope: !3393, file: !856, line: 93, type: !69)
!3413 = !DILocation(line: 93, column: 11, scope: !3393, inlinedAt: !3395)
!3414 = !DILocalVariable(name: "rdivisor", scope: !3415, file: !856, line: 96, type: !58)
!3415 = distinct !DILexicalBlock(scope: !3416, file: !856, line: 95, column: 18)
!3416 = distinct !DILexicalBlock(scope: !3393, file: !856, line: 95, column: 6)
!3417 = !DILocation(line: 96, column: 12, scope: !3415, inlinedAt: !3395)
!3418 = !DILocalVariable(name: "t", arg: 1, scope: !3391, file: !856, line: 901, type: !69)
!3419 = !DILocation(line: 901, column: 68, scope: !3391)
!3420 = !DILocation(line: 904, column: 17, scope: !3391)
!3421 = !DILocation(line: 904, column: 20, scope: !3391)
!3422 = !DILocation(line: 84, column: 19, scope: !3393, inlinedAt: !3395)
!3423 = !DILocation(line: 84, column: 28, scope: !3393, inlinedAt: !3395)
!3424 = !DILocation(line: 85, column: 4, scope: !3393, inlinedAt: !3395)
!3425 = !DILocation(line: 85, column: 12, scope: !3393, inlinedAt: !3395)
!3426 = !DILocation(line: 85, column: 10, scope: !3393, inlinedAt: !3395)
!3427 = !DILocation(line: 85, column: 21, scope: !3393, inlinedAt: !3395)
!3428 = !DILocation(line: 85, column: 26, scope: !3393, inlinedAt: !3395)
!3429 = !DILocation(line: 85, column: 34, scope: !3393, inlinedAt: !3395)
!3430 = !DILocation(line: 85, column: 32, scope: !3393, inlinedAt: !3395)
!3431 = !DILocation(line: 85, column: 43, scope: !3393, inlinedAt: !3395)
!3432 = !DILocation(line: 0, scope: !3393, inlinedAt: !3395)
!3433 = !DILocation(line: 86, column: 19, scope: !3393, inlinedAt: !3395)
!3434 = !DILocation(line: 86, column: 28, scope: !3393, inlinedAt: !3395)
!3435 = !DILocation(line: 87, column: 4, scope: !3393, inlinedAt: !3395)
!3436 = !DILocation(line: 87, column: 14, scope: !3393, inlinedAt: !3395)
!3437 = !DILocation(line: 87, column: 12, scope: !3393, inlinedAt: !3395)
!3438 = !DILocation(line: 87, column: 21, scope: !3393, inlinedAt: !3395)
!3439 = !DILocation(line: 87, column: 26, scope: !3393, inlinedAt: !3395)
!3440 = !DILocation(line: 87, column: 36, scope: !3393, inlinedAt: !3395)
!3441 = !DILocation(line: 87, column: 34, scope: !3393, inlinedAt: !3395)
!3442 = !DILocation(line: 87, column: 43, scope: !3393, inlinedAt: !3395)
!3443 = !DILocation(line: 89, column: 6, scope: !3444, inlinedAt: !3395)
!3444 = distinct !DILexicalBlock(scope: !3393, file: !856, line: 89, column: 6)
!3445 = !DILocation(line: 89, column: 17, scope: !3444, inlinedAt: !3395)
!3446 = !DILocation(line: 89, column: 14, scope: !3444, inlinedAt: !3395)
!3447 = !DILocation(line: 89, column: 6, scope: !3393, inlinedAt: !3395)
!3448 = !DILocation(line: 90, column: 10, scope: !3449, inlinedAt: !3395)
!3449 = distinct !DILexicalBlock(scope: !3444, file: !856, line: 89, column: 24)
!3450 = !DILocation(line: 90, column: 32, scope: !3449, inlinedAt: !3395)
!3451 = !DILocation(line: 90, column: 22, scope: !3449, inlinedAt: !3395)
!3452 = !DILocation(line: 90, column: 21, scope: !3449, inlinedAt: !3395)
!3453 = !DILocation(line: 90, column: 37, scope: !3449, inlinedAt: !3395)
!3454 = !DILocation(line: 90, column: 3, scope: !3449, inlinedAt: !3395)
!3455 = !DILocation(line: 95, column: 7, scope: !3416, inlinedAt: !3395)
!3456 = !DILocation(line: 95, column: 6, scope: !3393, inlinedAt: !3395)
!3457 = !DILocation(line: 96, column: 23, scope: !3415, inlinedAt: !3395)
!3458 = !DILocation(line: 96, column: 36, scope: !3415, inlinedAt: !3395)
!3459 = !DILocation(line: 96, column: 46, scope: !3415, inlinedAt: !3395)
!3460 = !DILocation(line: 96, column: 44, scope: !3415, inlinedAt: !3395)
!3461 = !DILocation(line: 96, column: 55, scope: !3415, inlinedAt: !3395)
!3462 = !DILocation(line: 98, column: 7, scope: !3463, inlinedAt: !3395)
!3463 = distinct !DILexicalBlock(scope: !3415, file: !856, line: 98, column: 7)
!3464 = !DILocation(line: 98, column: 7, scope: !3415, inlinedAt: !3395)
!3465 = !DILocation(line: 99, column: 10, scope: !3466, inlinedAt: !3395)
!3466 = distinct !DILexicalBlock(scope: !3463, file: !856, line: 98, column: 17)
!3467 = !DILocation(line: 99, column: 19, scope: !3466, inlinedAt: !3395)
!3468 = !DILocation(line: 99, column: 8, scope: !3466, inlinedAt: !3395)
!3469 = !DILocation(line: 100, column: 3, scope: !3466, inlinedAt: !3395)
!3470 = !DILocation(line: 100, column: 14, scope: !3471, inlinedAt: !3395)
!3471 = distinct !DILexicalBlock(scope: !3463, file: !856, line: 100, column: 14)
!3472 = !DILocation(line: 100, column: 14, scope: !3463, inlinedAt: !3395)
!3473 = !DILocation(line: 101, column: 10, scope: !3474, inlinedAt: !3395)
!3474 = distinct !DILexicalBlock(scope: !3471, file: !856, line: 100, column: 25)
!3475 = !DILocation(line: 101, column: 19, scope: !3474, inlinedAt: !3395)
!3476 = !DILocation(line: 101, column: 8, scope: !3474, inlinedAt: !3395)
!3477 = !DILocation(line: 102, column: 3, scope: !3474, inlinedAt: !3395)
!3478 = !DILocation(line: 103, column: 2, scope: !3415, inlinedAt: !3395)
!3479 = !DILocation(line: 110, column: 6, scope: !3480, inlinedAt: !3395)
!3480 = distinct !DILexicalBlock(scope: !3393, file: !856, line: 110, column: 6)
!3481 = !DILocation(line: 110, column: 6, scope: !3393, inlinedAt: !3395)
!3482 = !DILocation(line: 111, column: 8, scope: !3483, inlinedAt: !3395)
!3483 = distinct !DILexicalBlock(scope: !3480, file: !856, line: 110, column: 17)
!3484 = !DILocation(line: 111, column: 5, scope: !3483, inlinedAt: !3395)
!3485 = !DILocation(line: 112, column: 7, scope: !3486, inlinedAt: !3395)
!3486 = distinct !DILexicalBlock(scope: !3483, file: !856, line: 112, column: 7)
!3487 = !DILocation(line: 112, column: 16, scope: !3486, inlinedAt: !3395)
!3488 = !DILocation(line: 112, column: 20, scope: !3486, inlinedAt: !3395)
!3489 = !DILocation(line: 112, column: 22, scope: !3486, inlinedAt: !3395)
!3490 = !DILocation(line: 112, column: 7, scope: !3483, inlinedAt: !3395)
!3491 = !DILocation(line: 113, column: 22, scope: !3492, inlinedAt: !3395)
!3492 = distinct !DILexicalBlock(scope: !3486, file: !856, line: 112, column: 36)
!3493 = !DILocation(line: 113, column: 12, scope: !3492, inlinedAt: !3395)
!3494 = !DILocation(line: 113, column: 28, scope: !3492, inlinedAt: !3395)
!3495 = !DILocation(line: 113, column: 38, scope: !3492, inlinedAt: !3395)
!3496 = !DILocation(line: 113, column: 36, scope: !3492, inlinedAt: !3395)
!3497 = !DILocation(line: 113, column: 25, scope: !3492, inlinedAt: !3395)
!3498 = !DILocation(line: 113, column: 11, scope: !3492, inlinedAt: !3395)
!3499 = !DILocation(line: 113, column: 4, scope: !3492, inlinedAt: !3395)
!3500 = !DILocation(line: 115, column: 11, scope: !3501, inlinedAt: !3395)
!3501 = distinct !DILexicalBlock(scope: !3486, file: !856, line: 114, column: 10)
!3502 = !DILocation(line: 115, column: 16, scope: !3501, inlinedAt: !3395)
!3503 = !DILocation(line: 115, column: 26, scope: !3501, inlinedAt: !3395)
!3504 = !DILocation(line: 115, column: 24, scope: !3501, inlinedAt: !3395)
!3505 = !DILocation(line: 115, column: 15, scope: !3501, inlinedAt: !3395)
!3506 = !DILocation(line: 115, column: 13, scope: !3501, inlinedAt: !3395)
!3507 = !DILocation(line: 115, column: 4, scope: !3501, inlinedAt: !3395)
!3508 = !DILocation(line: 117, column: 13, scope: !3509, inlinedAt: !3395)
!3509 = distinct !DILexicalBlock(scope: !3480, file: !856, line: 117, column: 13)
!3510 = !DILocation(line: 117, column: 13, scope: !3480, inlinedAt: !3395)
!3511 = !DILocation(line: 118, column: 7, scope: !3512, inlinedAt: !3395)
!3512 = distinct !DILexicalBlock(scope: !3513, file: !856, line: 118, column: 7)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !856, line: 117, column: 24)
!3514 = !DILocation(line: 118, column: 7, scope: !3513, inlinedAt: !3395)
!3515 = !DILocation(line: 119, column: 22, scope: !3516, inlinedAt: !3395)
!3516 = distinct !DILexicalBlock(scope: !3512, file: !856, line: 118, column: 17)
!3517 = !DILocation(line: 119, column: 12, scope: !3516, inlinedAt: !3395)
!3518 = !DILocation(line: 119, column: 28, scope: !3516, inlinedAt: !3395)
!3519 = !DILocation(line: 119, column: 36, scope: !3516, inlinedAt: !3395)
!3520 = !DILocation(line: 119, column: 34, scope: !3516, inlinedAt: !3395)
!3521 = !DILocation(line: 119, column: 25, scope: !3516, inlinedAt: !3395)
!3522 = !DILocation(line: 119, column: 11, scope: !3516, inlinedAt: !3395)
!3523 = !DILocation(line: 119, column: 4, scope: !3516, inlinedAt: !3395)
!3524 = !DILocation(line: 121, column: 11, scope: !3525, inlinedAt: !3395)
!3525 = distinct !DILexicalBlock(scope: !3512, file: !856, line: 120, column: 10)
!3526 = !DILocation(line: 121, column: 16, scope: !3525, inlinedAt: !3395)
!3527 = !DILocation(line: 121, column: 24, scope: !3525, inlinedAt: !3395)
!3528 = !DILocation(line: 121, column: 22, scope: !3525, inlinedAt: !3395)
!3529 = !DILocation(line: 121, column: 15, scope: !3525, inlinedAt: !3395)
!3530 = !DILocation(line: 121, column: 13, scope: !3525, inlinedAt: !3395)
!3531 = !DILocation(line: 121, column: 4, scope: !3525, inlinedAt: !3395)
!3532 = !DILocation(line: 124, column: 7, scope: !3533, inlinedAt: !3395)
!3533 = distinct !DILexicalBlock(scope: !3534, file: !856, line: 124, column: 7)
!3534 = distinct !DILexicalBlock(scope: !3509, file: !856, line: 123, column: 9)
!3535 = !DILocation(line: 124, column: 7, scope: !3534, inlinedAt: !3395)
!3536 = !DILocation(line: 125, column: 23, scope: !3537, inlinedAt: !3395)
!3537 = distinct !DILexicalBlock(scope: !3533, file: !856, line: 124, column: 17)
!3538 = !DILocation(line: 125, column: 27, scope: !3537, inlinedAt: !3395)
!3539 = !DILocation(line: 125, column: 25, scope: !3537, inlinedAt: !3395)
!3540 = !DILocation(line: 125, column: 35, scope: !3537, inlinedAt: !3395)
!3541 = !DILocation(line: 125, column: 33, scope: !3537, inlinedAt: !3395)
!3542 = !DILocation(line: 125, column: 42, scope: !3537, inlinedAt: !3395)
!3543 = !DILocation(line: 125, column: 40, scope: !3537, inlinedAt: !3395)
!3544 = !DILocation(line: 125, column: 11, scope: !3537, inlinedAt: !3395)
!3545 = !DILocation(line: 125, column: 4, scope: !3537, inlinedAt: !3395)
!3546 = !DILocation(line: 127, column: 12, scope: !3547, inlinedAt: !3395)
!3547 = distinct !DILexicalBlock(scope: !3533, file: !856, line: 126, column: 10)
!3548 = !DILocation(line: 127, column: 16, scope: !3547, inlinedAt: !3395)
!3549 = !DILocation(line: 127, column: 14, scope: !3547, inlinedAt: !3395)
!3550 = !DILocation(line: 127, column: 24, scope: !3547, inlinedAt: !3395)
!3551 = !DILocation(line: 127, column: 22, scope: !3547, inlinedAt: !3395)
!3552 = !DILocation(line: 127, column: 31, scope: !3547, inlinedAt: !3395)
!3553 = !DILocation(line: 127, column: 29, scope: !3547, inlinedAt: !3395)
!3554 = !DILocation(line: 127, column: 4, scope: !3547, inlinedAt: !3395)
!3555 = !DILocation(line: 130, column: 1, scope: !3393, inlinedAt: !3395)
!3556 = !DILocation(line: 904, column: 2, scope: !3391)
!3557 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3558 = !DILocation(line: 55, column: 2, scope: !3557)
!3559 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3560 = !DILocation(line: 82, column: 20, scope: !3559)
!3561 = !DILocation(line: 82, column: 18, scope: !3559)
!3562 = !DILocation(line: 90, column: 6, scope: !3563)
!3563 = distinct !DILexicalBlock(scope: !3559, file: !63, line: 90, column: 6)
!3564 = !DILocation(line: 90, column: 22, scope: !3563)
!3565 = !DILocation(line: 90, column: 6, scope: !3559)
!3566 = !DILocation(line: 91, column: 3, scope: !3567)
!3567 = distinct !DILexicalBlock(scope: !3563, file: !63, line: 90, column: 39)
!3568 = !DILocation(line: 93, column: 2, scope: !3559)
!3569 = !DILocation(line: 94, column: 1, scope: !3559)
!3570 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3571 = !DILocalVariable(name: "reftime", arg: 1, scope: !3570, file: !6, line: 2133, type: !1088)
!3572 = !DILocation(line: 2133, column: 47, scope: !3570)
!3573 = !DILocalVariable(name: "uptime", scope: !3570, file: !6, line: 2135, type: !55)
!3574 = !DILocation(line: 2135, column: 10, scope: !3570)
!3575 = !DILocalVariable(name: "delta", scope: !3570, file: !6, line: 2135, type: !55)
!3576 = !DILocation(line: 2135, column: 18, scope: !3570)
!3577 = !DILocation(line: 2137, column: 11, scope: !3570)
!3578 = !DILocation(line: 2137, column: 9, scope: !3570)
!3579 = !DILocation(line: 2138, column: 10, scope: !3570)
!3580 = !DILocation(line: 2138, column: 20, scope: !3570)
!3581 = !DILocation(line: 2138, column: 19, scope: !3570)
!3582 = !DILocation(line: 2138, column: 17, scope: !3570)
!3583 = !DILocation(line: 2138, column: 8, scope: !3570)
!3584 = !DILocation(line: 2139, column: 13, scope: !3570)
!3585 = !DILocation(line: 2139, column: 3, scope: !3570)
!3586 = !DILocation(line: 2139, column: 11, scope: !3570)
!3587 = !DILocation(line: 2141, column: 9, scope: !3570)
!3588 = !DILocation(line: 2141, column: 2, scope: !3570)
!3589 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3590 = !DILocation(line: 2061, column: 31, scope: !3589)
!3591 = !DILocation(line: 2061, column: 9, scope: !3589)
!3592 = !DILocation(line: 2061, column: 2, scope: !3589)
!3593 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3594 = !DILocation(line: 509, column: 2, scope: !3593)
!3595 = !DILocation(line: 509, column: 2, scope: !3596)
!3596 = distinct !DILexicalBlock(scope: !3593, file: !765, line: 509, column: 2)
!3597 = !{i32 -2141851060}
!3598 = !DILocation(line: 510, column: 9, scope: !3593)
!3599 = !DILocation(line: 510, column: 2, scope: !3593)
!3600 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3601 = !DILocation(line: 78, column: 63, scope: !3393, inlinedAt: !3602)
!3602 = distinct !DILocation(line: 1072, column: 9, scope: !3600)
!3603 = !DILocation(line: 78, column: 75, scope: !3393, inlinedAt: !3602)
!3604 = !DILocation(line: 79, column: 18, scope: !3393, inlinedAt: !3602)
!3605 = !DILocation(line: 79, column: 30, scope: !3393, inlinedAt: !3602)
!3606 = !DILocation(line: 80, column: 14, scope: !3393, inlinedAt: !3602)
!3607 = !DILocation(line: 80, column: 29, scope: !3393, inlinedAt: !3602)
!3608 = !DILocation(line: 81, column: 14, scope: !3393, inlinedAt: !3602)
!3609 = !DILocation(line: 84, column: 7, scope: !3393, inlinedAt: !3602)
!3610 = !DILocation(line: 86, column: 7, scope: !3393, inlinedAt: !3602)
!3611 = !DILocation(line: 93, column: 11, scope: !3393, inlinedAt: !3602)
!3612 = !DILocation(line: 96, column: 12, scope: !3415, inlinedAt: !3602)
!3613 = !DILocalVariable(name: "t", arg: 1, scope: !3600, file: !856, line: 1069, type: !69)
!3614 = !DILocation(line: 1069, column: 70, scope: !3600)
!3615 = !DILocation(line: 1072, column: 17, scope: !3600)
!3616 = !DILocation(line: 84, column: 19, scope: !3393, inlinedAt: !3602)
!3617 = !DILocation(line: 84, column: 28, scope: !3393, inlinedAt: !3602)
!3618 = !DILocation(line: 85, column: 4, scope: !3393, inlinedAt: !3602)
!3619 = !DILocation(line: 85, column: 12, scope: !3393, inlinedAt: !3602)
!3620 = !DILocation(line: 85, column: 10, scope: !3393, inlinedAt: !3602)
!3621 = !DILocation(line: 85, column: 21, scope: !3393, inlinedAt: !3602)
!3622 = !DILocation(line: 85, column: 26, scope: !3393, inlinedAt: !3602)
!3623 = !DILocation(line: 85, column: 34, scope: !3393, inlinedAt: !3602)
!3624 = !DILocation(line: 85, column: 32, scope: !3393, inlinedAt: !3602)
!3625 = !DILocation(line: 85, column: 43, scope: !3393, inlinedAt: !3602)
!3626 = !DILocation(line: 0, scope: !3393, inlinedAt: !3602)
!3627 = !DILocation(line: 86, column: 19, scope: !3393, inlinedAt: !3602)
!3628 = !DILocation(line: 86, column: 28, scope: !3393, inlinedAt: !3602)
!3629 = !DILocation(line: 87, column: 4, scope: !3393, inlinedAt: !3602)
!3630 = !DILocation(line: 87, column: 14, scope: !3393, inlinedAt: !3602)
!3631 = !DILocation(line: 87, column: 12, scope: !3393, inlinedAt: !3602)
!3632 = !DILocation(line: 87, column: 21, scope: !3393, inlinedAt: !3602)
!3633 = !DILocation(line: 87, column: 26, scope: !3393, inlinedAt: !3602)
!3634 = !DILocation(line: 87, column: 36, scope: !3393, inlinedAt: !3602)
!3635 = !DILocation(line: 87, column: 34, scope: !3393, inlinedAt: !3602)
!3636 = !DILocation(line: 87, column: 43, scope: !3393, inlinedAt: !3602)
!3637 = !DILocation(line: 89, column: 6, scope: !3444, inlinedAt: !3602)
!3638 = !DILocation(line: 89, column: 17, scope: !3444, inlinedAt: !3602)
!3639 = !DILocation(line: 89, column: 14, scope: !3444, inlinedAt: !3602)
!3640 = !DILocation(line: 89, column: 6, scope: !3393, inlinedAt: !3602)
!3641 = !DILocation(line: 90, column: 10, scope: !3449, inlinedAt: !3602)
!3642 = !DILocation(line: 90, column: 32, scope: !3449, inlinedAt: !3602)
!3643 = !DILocation(line: 90, column: 22, scope: !3449, inlinedAt: !3602)
!3644 = !DILocation(line: 90, column: 21, scope: !3449, inlinedAt: !3602)
!3645 = !DILocation(line: 90, column: 37, scope: !3449, inlinedAt: !3602)
!3646 = !DILocation(line: 90, column: 3, scope: !3449, inlinedAt: !3602)
!3647 = !DILocation(line: 95, column: 7, scope: !3416, inlinedAt: !3602)
!3648 = !DILocation(line: 95, column: 6, scope: !3393, inlinedAt: !3602)
!3649 = !DILocation(line: 96, column: 23, scope: !3415, inlinedAt: !3602)
!3650 = !DILocation(line: 96, column: 36, scope: !3415, inlinedAt: !3602)
!3651 = !DILocation(line: 96, column: 46, scope: !3415, inlinedAt: !3602)
!3652 = !DILocation(line: 96, column: 44, scope: !3415, inlinedAt: !3602)
!3653 = !DILocation(line: 96, column: 55, scope: !3415, inlinedAt: !3602)
!3654 = !DILocation(line: 98, column: 7, scope: !3463, inlinedAt: !3602)
!3655 = !DILocation(line: 98, column: 7, scope: !3415, inlinedAt: !3602)
!3656 = !DILocation(line: 99, column: 10, scope: !3466, inlinedAt: !3602)
!3657 = !DILocation(line: 99, column: 19, scope: !3466, inlinedAt: !3602)
!3658 = !DILocation(line: 99, column: 8, scope: !3466, inlinedAt: !3602)
!3659 = !DILocation(line: 100, column: 3, scope: !3466, inlinedAt: !3602)
!3660 = !DILocation(line: 100, column: 14, scope: !3471, inlinedAt: !3602)
!3661 = !DILocation(line: 100, column: 14, scope: !3463, inlinedAt: !3602)
!3662 = !DILocation(line: 101, column: 10, scope: !3474, inlinedAt: !3602)
!3663 = !DILocation(line: 101, column: 19, scope: !3474, inlinedAt: !3602)
!3664 = !DILocation(line: 101, column: 8, scope: !3474, inlinedAt: !3602)
!3665 = !DILocation(line: 102, column: 3, scope: !3474, inlinedAt: !3602)
!3666 = !DILocation(line: 103, column: 2, scope: !3415, inlinedAt: !3602)
!3667 = !DILocation(line: 110, column: 6, scope: !3480, inlinedAt: !3602)
!3668 = !DILocation(line: 110, column: 6, scope: !3393, inlinedAt: !3602)
!3669 = !DILocation(line: 111, column: 8, scope: !3483, inlinedAt: !3602)
!3670 = !DILocation(line: 111, column: 5, scope: !3483, inlinedAt: !3602)
!3671 = !DILocation(line: 112, column: 7, scope: !3486, inlinedAt: !3602)
!3672 = !DILocation(line: 112, column: 16, scope: !3486, inlinedAt: !3602)
!3673 = !DILocation(line: 112, column: 20, scope: !3486, inlinedAt: !3602)
!3674 = !DILocation(line: 112, column: 22, scope: !3486, inlinedAt: !3602)
!3675 = !DILocation(line: 112, column: 7, scope: !3483, inlinedAt: !3602)
!3676 = !DILocation(line: 113, column: 22, scope: !3492, inlinedAt: !3602)
!3677 = !DILocation(line: 113, column: 12, scope: !3492, inlinedAt: !3602)
!3678 = !DILocation(line: 113, column: 28, scope: !3492, inlinedAt: !3602)
!3679 = !DILocation(line: 113, column: 38, scope: !3492, inlinedAt: !3602)
!3680 = !DILocation(line: 113, column: 36, scope: !3492, inlinedAt: !3602)
!3681 = !DILocation(line: 113, column: 25, scope: !3492, inlinedAt: !3602)
!3682 = !DILocation(line: 113, column: 11, scope: !3492, inlinedAt: !3602)
!3683 = !DILocation(line: 113, column: 4, scope: !3492, inlinedAt: !3602)
!3684 = !DILocation(line: 115, column: 11, scope: !3501, inlinedAt: !3602)
!3685 = !DILocation(line: 115, column: 16, scope: !3501, inlinedAt: !3602)
!3686 = !DILocation(line: 115, column: 26, scope: !3501, inlinedAt: !3602)
!3687 = !DILocation(line: 115, column: 24, scope: !3501, inlinedAt: !3602)
!3688 = !DILocation(line: 115, column: 15, scope: !3501, inlinedAt: !3602)
!3689 = !DILocation(line: 115, column: 13, scope: !3501, inlinedAt: !3602)
!3690 = !DILocation(line: 115, column: 4, scope: !3501, inlinedAt: !3602)
!3691 = !DILocation(line: 117, column: 13, scope: !3509, inlinedAt: !3602)
!3692 = !DILocation(line: 117, column: 13, scope: !3480, inlinedAt: !3602)
!3693 = !DILocation(line: 118, column: 7, scope: !3512, inlinedAt: !3602)
!3694 = !DILocation(line: 118, column: 7, scope: !3513, inlinedAt: !3602)
!3695 = !DILocation(line: 119, column: 22, scope: !3516, inlinedAt: !3602)
!3696 = !DILocation(line: 119, column: 12, scope: !3516, inlinedAt: !3602)
!3697 = !DILocation(line: 119, column: 28, scope: !3516, inlinedAt: !3602)
!3698 = !DILocation(line: 119, column: 36, scope: !3516, inlinedAt: !3602)
!3699 = !DILocation(line: 119, column: 34, scope: !3516, inlinedAt: !3602)
!3700 = !DILocation(line: 119, column: 25, scope: !3516, inlinedAt: !3602)
!3701 = !DILocation(line: 119, column: 11, scope: !3516, inlinedAt: !3602)
!3702 = !DILocation(line: 119, column: 4, scope: !3516, inlinedAt: !3602)
!3703 = !DILocation(line: 121, column: 11, scope: !3525, inlinedAt: !3602)
!3704 = !DILocation(line: 121, column: 16, scope: !3525, inlinedAt: !3602)
!3705 = !DILocation(line: 121, column: 24, scope: !3525, inlinedAt: !3602)
!3706 = !DILocation(line: 121, column: 22, scope: !3525, inlinedAt: !3602)
!3707 = !DILocation(line: 121, column: 15, scope: !3525, inlinedAt: !3602)
!3708 = !DILocation(line: 121, column: 13, scope: !3525, inlinedAt: !3602)
!3709 = !DILocation(line: 121, column: 4, scope: !3525, inlinedAt: !3602)
!3710 = !DILocation(line: 124, column: 7, scope: !3533, inlinedAt: !3602)
!3711 = !DILocation(line: 124, column: 7, scope: !3534, inlinedAt: !3602)
!3712 = !DILocation(line: 125, column: 23, scope: !3537, inlinedAt: !3602)
!3713 = !DILocation(line: 125, column: 27, scope: !3537, inlinedAt: !3602)
!3714 = !DILocation(line: 125, column: 25, scope: !3537, inlinedAt: !3602)
!3715 = !DILocation(line: 125, column: 35, scope: !3537, inlinedAt: !3602)
!3716 = !DILocation(line: 125, column: 33, scope: !3537, inlinedAt: !3602)
!3717 = !DILocation(line: 125, column: 42, scope: !3537, inlinedAt: !3602)
!3718 = !DILocation(line: 125, column: 40, scope: !3537, inlinedAt: !3602)
!3719 = !DILocation(line: 125, column: 11, scope: !3537, inlinedAt: !3602)
!3720 = !DILocation(line: 125, column: 4, scope: !3537, inlinedAt: !3602)
!3721 = !DILocation(line: 127, column: 12, scope: !3547, inlinedAt: !3602)
!3722 = !DILocation(line: 127, column: 16, scope: !3547, inlinedAt: !3602)
!3723 = !DILocation(line: 127, column: 14, scope: !3547, inlinedAt: !3602)
!3724 = !DILocation(line: 127, column: 24, scope: !3547, inlinedAt: !3602)
!3725 = !DILocation(line: 127, column: 22, scope: !3547, inlinedAt: !3602)
!3726 = !DILocation(line: 127, column: 31, scope: !3547, inlinedAt: !3602)
!3727 = !DILocation(line: 127, column: 29, scope: !3547, inlinedAt: !3602)
!3728 = !DILocation(line: 127, column: 4, scope: !3547, inlinedAt: !3602)
!3729 = !DILocation(line: 130, column: 1, scope: !3393, inlinedAt: !3602)
!3730 = !DILocation(line: 1072, column: 2, scope: !3600)
!3731 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3732 = !DILocation(line: 935, column: 3, scope: !3733, inlinedAt: !3734)
!3733 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3734 = distinct !DILocation(line: 31, column: 2, scope: !3731)
!3735 = !{i32 2224066}
!3736 = !DILocation(line: 32, column: 1, scope: !3731)
!3737 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3738 = !DILocation(line: 2174, column: 9, scope: !3737)
!3739 = !DILocation(line: 2174, column: 2, scope: !3737)
!3740 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3741 = !DILocation(line: 26, column: 9, scope: !3740)
!3742 = !DILocation(line: 26, column: 2, scope: !3740)
!3743 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3744 = !DILocation(line: 72, column: 18, scope: !3743)
!3745 = !DILocation(line: 74, column: 2, scope: !3743)
!3746 = !DILocation(line: 75, column: 20, scope: !3743)
!3747 = !DILocation(line: 75, column: 18, scope: !3743)
!3748 = !DILocation(line: 76, column: 1, scope: !3743)
!3749 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !3750, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !559, retainedNodes: !609)
!3750 = !DISubroutineType(types: !3751)
!3751 = !{!412, !3752}
!3752 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !3753)
!3753 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !3754)
!3754 = !{!3755}
!3755 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3753, file: !54, line: 68, baseType: !53, size: 64)
!3756 = !DILocalVariable(name: "timeout", arg: 1, scope: !3749, file: !765, line: 117, type: !3752)
!3757 = !DILocation(line: 117, column: 61, scope: !3749)
!3758 = !DILocation(line: 126, column: 2, scope: !3749)
!3759 = !DILocation(line: 126, column: 2, scope: !3760)
!3760 = distinct !DILexicalBlock(scope: !3749, file: !765, line: 126, column: 2)
!3761 = !{i32 -2141852964}
!3762 = !DILocation(line: 127, column: 9, scope: !3749)
!3763 = !DILocation(line: 127, column: 2, scope: !3749)
!3764 = distinct !DISubprogram(name: "mutex_test", scope: !3765, file: !3765, line: 19, type: !206, scopeLine: 20, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3765 = !DIFile(filename: "appl/Zephyr/app_kernel/src/mutex_b.c", directory: "/home/kenny/ara")
!3766 = !DILocalVariable(name: "et", scope: !3764, file: !3765, line: 21, type: !58)
!3767 = !DILocation(line: 21, column: 11, scope: !3764)
!3768 = !DILocalVariable(name: "i", scope: !3764, file: !3765, line: 22, type: !61)
!3769 = !DILocation(line: 22, column: 6, scope: !3764)
!3770 = !DILocation(line: 24, column: 2, scope: !3764)
!3771 = !DILocation(line: 25, column: 7, scope: !3764)
!3772 = !DILocation(line: 25, column: 5, scope: !3764)
!3773 = !DILocation(line: 26, column: 9, scope: !3774)
!3774 = distinct !DILexicalBlock(scope: !3764, file: !3765, line: 26, column: 2)
!3775 = !DILocation(line: 26, column: 7, scope: !3774)
!3776 = !DILocation(line: 26, column: 14, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3774, file: !3765, line: 26, column: 2)
!3778 = !DILocation(line: 26, column: 16, scope: !3777)
!3779 = !DILocation(line: 26, column: 2, scope: !3774)
!3780 = !DILocation(line: 27, column: 29, scope: !3781)
!3781 = distinct !DILexicalBlock(scope: !3777, file: !3765, line: 26, column: 41)
!3782 = !DILocation(line: 27, column: 3, scope: !3781)
!3783 = !DILocation(line: 28, column: 3, scope: !3781)
!3784 = !DILocation(line: 29, column: 2, scope: !3781)
!3785 = !DILocation(line: 26, column: 37, scope: !3777)
!3786 = !DILocation(line: 26, column: 2, scope: !3777)
!3787 = distinct !{!3787, !3779, !3788}
!3788 = !DILocation(line: 29, column: 2, scope: !3774)
!3789 = !DILocation(line: 30, column: 28, scope: !3764)
!3790 = !DILocation(line: 30, column: 7, scope: !3764)
!3791 = !DILocation(line: 30, column: 5, scope: !3764)
!3792 = !DILocation(line: 31, column: 2, scope: !3764)
!3793 = !DILocation(line: 33, column: 2, scope: !3794)
!3794 = distinct !DILexicalBlock(scope: !3764, file: !3765, line: 33, column: 2)
!3795 = !DILocation(line: 35, column: 1, scope: !3764)
!3796 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3797 = !DILocalVariable(name: "et", scope: !3796, file: !573, line: 177, type: !58)
!3798 = !DILocation(line: 177, column: 11, scope: !3796)
!3799 = !DILocation(line: 179, column: 2, scope: !3796)
!3800 = !DILocation(line: 180, column: 7, scope: !3796)
!3801 = !DILocation(line: 180, column: 5, scope: !3796)
!3802 = !DILocation(line: 181, column: 9, scope: !3796)
!3803 = !DILocation(line: 181, column: 2, scope: !3796)
!3804 = distinct !DISubprogram(name: "k_mutex_lock", scope: !765, file: !765, line: 705, type: !3805, scopeLine: 706, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3805 = !DISubroutineType(types: !3806)
!3806 = !{!61, !3807, !3922}
!3807 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3808, size: 32)
!3808 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mutex", file: !6, line: 3589, size: 160, elements: !3809)
!3809 = !{!3810, !3829, !3920, !3921}
!3810 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3808, file: !6, line: 3591, baseType: !3811, size: 64)
!3811 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !3812)
!3812 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !3813)
!3813 = !{!3814}
!3814 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !3812, file: !99, line: 209, baseType: !3815, size: 64)
!3815 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !3816)
!3816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !3817)
!3817 = !{!3818, !3824}
!3818 = !DIDerivedType(tag: DW_TAG_member, scope: !3816, file: !116, line: 32, baseType: !3819, size: 32)
!3819 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3816, file: !116, line: 32, size: 32, elements: !3820)
!3820 = !{!3821, !3823}
!3821 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !3819, file: !116, line: 33, baseType: !3822, size: 32)
!3822 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3816, size: 32)
!3823 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3819, file: !116, line: 34, baseType: !3822, size: 32)
!3824 = !DIDerivedType(tag: DW_TAG_member, scope: !3816, file: !116, line: 36, baseType: !3825, size: 32, offset: 32)
!3825 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3816, file: !116, line: 36, size: 32, elements: !3826)
!3826 = !{!3827, !3828}
!3827 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !3825, file: !116, line: 37, baseType: !3822, size: 32)
!3828 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3825, file: !116, line: 38, baseType: !3822, size: 32)
!3829 = !DIDerivedType(tag: DW_TAG_member, name: "owner", scope: !3808, file: !6, line: 3593, baseType: !3830, size: 32, offset: 64)
!3830 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3831, size: 32)
!3831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !6, line: 570, size: 1280, elements: !3832)
!3832 = !{!3833, !3874, !3886, !3887, !3888, !3889, !3890, !3896, !3915}
!3833 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !3831, file: !6, line: 572, baseType: !3834, size: 448)
!3834 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !6, line: 441, size: 448, elements: !3835)
!3835 = !{!3836, !3847, !3849, !3850, !3851, !3860, !3861, !3862, !3873}
!3836 = !DIDerivedType(tag: DW_TAG_member, scope: !3834, file: !6, line: 444, baseType: !3837, size: 64)
!3837 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3834, file: !6, line: 444, size: 64, elements: !3838)
!3838 = !{!3839, !3841}
!3839 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !3837, file: !6, line: 445, baseType: !3840, size: 64)
!3840 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !116, line: 43, baseType: !3816)
!3841 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !3837, file: !6, line: 446, baseType: !3842, size: 64)
!3842 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !151, line: 48, size: 64, elements: !3843)
!3843 = !{!3844}
!3844 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !3842, file: !151, line: 49, baseType: !3845, size: 64)
!3845 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3846, size: 64, elements: !156)
!3846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3842, size: 32)
!3847 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !3834, file: !6, line: 452, baseType: !3848, size: 32, offset: 64)
!3848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3811, size: 32)
!3849 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !3834, file: !6, line: 455, baseType: !161, size: 8, offset: 96)
!3850 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !3834, file: !6, line: 458, baseType: !161, size: 8, offset: 104)
!3851 = !DIDerivedType(tag: DW_TAG_member, scope: !3834, file: !6, line: 474, baseType: !3852, size: 16, offset: 112)
!3852 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !3834, file: !6, line: 474, size: 16, elements: !3853)
!3853 = !{!3854, !3859}
!3854 = !DIDerivedType(tag: DW_TAG_member, scope: !3852, file: !6, line: 475, baseType: !3855, size: 16)
!3855 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !3852, file: !6, line: 475, size: 16, elements: !3856)
!3856 = !{!3857, !3858}
!3857 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !3855, file: !6, line: 480, baseType: !170, size: 8)
!3858 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !3855, file: !6, line: 481, baseType: !161, size: 8, offset: 8)
!3859 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !3852, file: !6, line: 484, baseType: !174, size: 16)
!3860 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !3834, file: !6, line: 491, baseType: !58, size: 32, offset: 128)
!3861 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !3834, file: !6, line: 511, baseType: !60, size: 32, offset: 160)
!3862 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !3834, file: !6, line: 515, baseType: !3863, size: 192, offset: 192)
!3863 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !99, line: 221, size: 192, elements: !3864)
!3864 = !{!3865, !3866, !3872}
!3865 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !3863, file: !99, line: 222, baseType: !3840, size: 64)
!3866 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !3863, file: !99, line: 223, baseType: !3867, size: 32, offset: 64)
!3867 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !99, line: 219, baseType: !3868)
!3868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3869, size: 32)
!3869 = !DISubroutineType(types: !3870)
!3870 = !{null, !3871}
!3871 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3863, size: 32)
!3872 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !3863, file: !99, line: 226, baseType: !55, size: 64, offset: 128)
!3873 = !DIDerivedType(tag: DW_TAG_member, name: "join_waiters", scope: !3834, file: !6, line: 518, baseType: !3811, size: 64, offset: 384)
!3874 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !3831, file: !6, line: 575, baseType: !3875, size: 288, offset: 448)
!3875 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !192, line: 25, size: 288, elements: !3876)
!3876 = !{!3877, !3878, !3879, !3880, !3881, !3882, !3883, !3884, !3885}
!3877 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !3875, file: !192, line: 26, baseType: !58, size: 32)
!3878 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !3875, file: !192, line: 27, baseType: !58, size: 32, offset: 32)
!3879 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !3875, file: !192, line: 28, baseType: !58, size: 32, offset: 64)
!3880 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !3875, file: !192, line: 29, baseType: !58, size: 32, offset: 96)
!3881 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !3875, file: !192, line: 30, baseType: !58, size: 32, offset: 128)
!3882 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !3875, file: !192, line: 31, baseType: !58, size: 32, offset: 160)
!3883 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !3875, file: !192, line: 32, baseType: !58, size: 32, offset: 192)
!3884 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !3875, file: !192, line: 33, baseType: !58, size: 32, offset: 224)
!3885 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !3875, file: !192, line: 34, baseType: !58, size: 32, offset: 256)
!3886 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !3831, file: !6, line: 578, baseType: !60, size: 32, offset: 736)
!3887 = !DIDerivedType(tag: DW_TAG_member, name: "fn_abort", scope: !3831, file: !6, line: 583, baseType: !205, size: 32, offset: 768)
!3888 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !3831, file: !6, line: 595, baseType: !209, size: 256, offset: 800)
!3889 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !3831, file: !6, line: 610, baseType: !61, size: 32, offset: 1056)
!3890 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !3831, file: !6, line: 616, baseType: !3891, size: 96, offset: 1088)
!3891 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !6, line: 525, size: 96, elements: !3892)
!3892 = !{!3893, !3894, !3895}
!3893 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !3891, file: !6, line: 529, baseType: !134, size: 32)
!3894 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !3891, file: !6, line: 538, baseType: !79, size: 32, offset: 32)
!3895 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !3891, file: !6, line: 544, baseType: !79, size: 32, offset: 64)
!3896 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !3831, file: !6, line: 641, baseType: !3897, size: 32, offset: 1184)
!3897 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3898, size: 32)
!3898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_pool", file: !86, line: 30, size: 32, elements: !3899)
!3899 = !{!3900}
!3900 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3898, file: !86, line: 31, baseType: !3901, size: 32)
!3901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3902, size: 32)
!3902 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !99, line: 267, size: 192, elements: !3903)
!3903 = !{!3904, !3910, !3911}
!3904 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3902, file: !99, line: 268, baseType: !3905, size: 96)
!3905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !103, line: 51, size: 96, elements: !3906)
!3906 = !{!3907, !3908, !3909}
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !3905, file: !103, line: 52, baseType: !106, size: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !3905, file: !103, line: 53, baseType: !60, size: 32, offset: 32)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !3905, file: !103, line: 54, baseType: !79, size: 32, offset: 64)
!3910 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !3902, file: !99, line: 269, baseType: !3811, size: 64, offset: 96)
!3911 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !3902, file: !99, line: 270, baseType: !3912, size: 32, offset: 160)
!3912 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !3913)
!3913 = !{!3914}
!3914 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !3912, file: !99, line: 243, baseType: !134, size: 32)
!3915 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !3831, file: !6, line: 644, baseType: !3916, size: 64, offset: 1216)
!3916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !192, line: 60, size: 64, elements: !3917)
!3917 = !{!3918, !3919}
!3918 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !3916, file: !192, line: 63, baseType: !58, size: 32)
!3919 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !3916, file: !192, line: 66, baseType: !58, size: 32, offset: 32)
!3920 = !DIDerivedType(tag: DW_TAG_member, name: "lock_count", scope: !3808, file: !6, line: 3596, baseType: !58, size: 32, offset: 96)
!3921 = !DIDerivedType(tag: DW_TAG_member, name: "owner_orig_prio", scope: !3808, file: !6, line: 3599, baseType: !61, size: 32, offset: 128)
!3922 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !3923)
!3923 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !3924)
!3924 = !{!3925}
!3925 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !3923, file: !54, line: 68, baseType: !53, size: 64)
!3926 = !DILocalVariable(name: "mutex", arg: 1, scope: !3804, file: !765, line: 705, type: !3807)
!3927 = !DILocation(line: 705, column: 67, scope: !3804)
!3928 = !DILocalVariable(name: "timeout", arg: 2, scope: !3804, file: !765, line: 705, type: !3922)
!3929 = !DILocation(line: 705, column: 86, scope: !3804)
!3930 = !DILocation(line: 714, column: 2, scope: !3804)
!3931 = !DILocation(line: 714, column: 2, scope: !3932)
!3932 = distinct !DILexicalBlock(scope: !3804, file: !765, line: 714, column: 2)
!3933 = !{i32 -2141850193}
!3934 = !DILocation(line: 715, column: 29, scope: !3804)
!3935 = !DILocation(line: 715, column: 9, scope: !3804)
!3936 = !DILocation(line: 715, column: 2, scope: !3804)
!3937 = distinct !DISubprogram(name: "k_mutex_unlock", scope: !765, file: !765, line: 720, type: !3938, scopeLine: 721, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3938 = !DISubroutineType(types: !3939)
!3939 = !{!61, !3807}
!3940 = !DILocalVariable(name: "mutex", arg: 1, scope: !3937, file: !765, line: 720, type: !3807)
!3941 = !DILocation(line: 720, column: 69, scope: !3937)
!3942 = !DILocation(line: 727, column: 2, scope: !3937)
!3943 = !DILocation(line: 727, column: 2, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3937, file: !765, line: 727, column: 2)
!3945 = !{i32 -2141850125}
!3946 = !DILocation(line: 728, column: 31, scope: !3937)
!3947 = !DILocation(line: 728, column: 9, scope: !3937)
!3948 = !DILocation(line: 728, column: 2, scope: !3937)
!3949 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3950 = !DILocalVariable(name: "ts", arg: 1, scope: !3949, file: !63, line: 33, type: !58)
!3951 = !DILocation(line: 33, column: 54, scope: !3949)
!3952 = !DILocalVariable(name: "t", scope: !3949, file: !63, line: 35, type: !58)
!3953 = !DILocation(line: 35, column: 11, scope: !3949)
!3954 = !DILocation(line: 38, column: 2, scope: !3949)
!3955 = !DILocation(line: 40, column: 6, scope: !3949)
!3956 = !DILocation(line: 40, column: 4, scope: !3949)
!3957 = !DILocalVariable(name: "res", scope: !3949, file: !63, line: 41, type: !58)
!3958 = !DILocation(line: 41, column: 11, scope: !3949)
!3959 = !DILocation(line: 41, column: 18, scope: !3949)
!3960 = !DILocation(line: 41, column: 23, scope: !3949)
!3961 = !DILocation(line: 41, column: 20, scope: !3949)
!3962 = !DILocation(line: 41, column: 17, scope: !3949)
!3963 = !DILocation(line: 41, column: 30, scope: !3949)
!3964 = !DILocation(line: 41, column: 34, scope: !3949)
!3965 = !DILocation(line: 41, column: 32, scope: !3949)
!3966 = !DILocation(line: 41, column: 53, scope: !3949)
!3967 = !DILocation(line: 41, column: 51, scope: !3949)
!3968 = !DILocation(line: 41, column: 58, scope: !3949)
!3969 = !DILocation(line: 41, column: 56, scope: !3949)
!3970 = !DILocation(line: 43, column: 6, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3949, file: !63, line: 43, column: 6)
!3972 = !DILocation(line: 43, column: 9, scope: !3971)
!3973 = !DILocation(line: 43, column: 6, scope: !3949)
!3974 = !DILocation(line: 44, column: 10, scope: !3975)
!3975 = distinct !DILexicalBlock(scope: !3971, file: !63, line: 43, column: 14)
!3976 = !DILocation(line: 44, column: 7, scope: !3975)
!3977 = !DILocation(line: 45, column: 2, scope: !3975)
!3978 = !DILocation(line: 46, column: 9, scope: !3949)
!3979 = !DILocation(line: 46, column: 2, scope: !3949)
!3980 = distinct !DISubprogram(name: "check_result", scope: !573, file: !573, line: 184, type: !206, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3981 = !DILocation(line: 186, column: 6, scope: !3982)
!3982 = distinct !DILexicalBlock(scope: !3980, file: !573, line: 186, column: 6)
!3983 = !DILocation(line: 186, column: 23, scope: !3982)
!3984 = !DILocation(line: 186, column: 6, scope: !3980)
!3985 = !DILocation(line: 187, column: 3, scope: !3986)
!3986 = distinct !DILexicalBlock(scope: !3987, file: !573, line: 187, column: 3)
!3987 = distinct !DILexicalBlock(scope: !3982, file: !573, line: 186, column: 28)
!3988 = !DILocation(line: 188, column: 3, scope: !3987)
!3989 = !DILocation(line: 190, column: 1, scope: !3980)
!3990 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3991 = !DILocalVariable(name: "t", arg: 1, scope: !3992, file: !856, line: 78, type: !69)
!3992 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!3993 = !DILocation(line: 78, column: 63, scope: !3992, inlinedAt: !3994)
!3994 = distinct !DILocation(line: 904, column: 9, scope: !3990)
!3995 = !DILocalVariable(name: "from_hz", arg: 2, scope: !3992, file: !856, line: 78, type: !58)
!3996 = !DILocation(line: 78, column: 75, scope: !3992, inlinedAt: !3994)
!3997 = !DILocalVariable(name: "to_hz", arg: 3, scope: !3992, file: !856, line: 79, type: !58)
!3998 = !DILocation(line: 79, column: 18, scope: !3992, inlinedAt: !3994)
!3999 = !DILocalVariable(name: "const_hz", arg: 4, scope: !3992, file: !856, line: 79, type: !863)
!4000 = !DILocation(line: 79, column: 30, scope: !3992, inlinedAt: !3994)
!4001 = !DILocalVariable(name: "result32", arg: 5, scope: !3992, file: !856, line: 80, type: !863)
!4002 = !DILocation(line: 80, column: 14, scope: !3992, inlinedAt: !3994)
!4003 = !DILocalVariable(name: "round_up", arg: 6, scope: !3992, file: !856, line: 80, type: !863)
!4004 = !DILocation(line: 80, column: 29, scope: !3992, inlinedAt: !3994)
!4005 = !DILocalVariable(name: "round_off", arg: 7, scope: !3992, file: !856, line: 81, type: !863)
!4006 = !DILocation(line: 81, column: 14, scope: !3992, inlinedAt: !3994)
!4007 = !DILocalVariable(name: "mul_ratio", scope: !3992, file: !856, line: 84, type: !863)
!4008 = !DILocation(line: 84, column: 7, scope: !3992, inlinedAt: !3994)
!4009 = !DILocalVariable(name: "div_ratio", scope: !3992, file: !856, line: 86, type: !863)
!4010 = !DILocation(line: 86, column: 7, scope: !3992, inlinedAt: !3994)
!4011 = !DILocalVariable(name: "off", scope: !3992, file: !856, line: 93, type: !69)
!4012 = !DILocation(line: 93, column: 11, scope: !3992, inlinedAt: !3994)
!4013 = !DILocalVariable(name: "rdivisor", scope: !4014, file: !856, line: 96, type: !58)
!4014 = distinct !DILexicalBlock(scope: !4015, file: !856, line: 95, column: 18)
!4015 = distinct !DILexicalBlock(scope: !3992, file: !856, line: 95, column: 6)
!4016 = !DILocation(line: 96, column: 12, scope: !4014, inlinedAt: !3994)
!4017 = !DILocalVariable(name: "t", arg: 1, scope: !3990, file: !856, line: 901, type: !69)
!4018 = !DILocation(line: 901, column: 68, scope: !3990)
!4019 = !DILocation(line: 904, column: 17, scope: !3990)
!4020 = !DILocation(line: 904, column: 20, scope: !3990)
!4021 = !DILocation(line: 84, column: 19, scope: !3992, inlinedAt: !3994)
!4022 = !DILocation(line: 84, column: 28, scope: !3992, inlinedAt: !3994)
!4023 = !DILocation(line: 85, column: 4, scope: !3992, inlinedAt: !3994)
!4024 = !DILocation(line: 85, column: 12, scope: !3992, inlinedAt: !3994)
!4025 = !DILocation(line: 85, column: 10, scope: !3992, inlinedAt: !3994)
!4026 = !DILocation(line: 85, column: 21, scope: !3992, inlinedAt: !3994)
!4027 = !DILocation(line: 85, column: 26, scope: !3992, inlinedAt: !3994)
!4028 = !DILocation(line: 85, column: 34, scope: !3992, inlinedAt: !3994)
!4029 = !DILocation(line: 85, column: 32, scope: !3992, inlinedAt: !3994)
!4030 = !DILocation(line: 85, column: 43, scope: !3992, inlinedAt: !3994)
!4031 = !DILocation(line: 0, scope: !3992, inlinedAt: !3994)
!4032 = !DILocation(line: 86, column: 19, scope: !3992, inlinedAt: !3994)
!4033 = !DILocation(line: 86, column: 28, scope: !3992, inlinedAt: !3994)
!4034 = !DILocation(line: 87, column: 4, scope: !3992, inlinedAt: !3994)
!4035 = !DILocation(line: 87, column: 14, scope: !3992, inlinedAt: !3994)
!4036 = !DILocation(line: 87, column: 12, scope: !3992, inlinedAt: !3994)
!4037 = !DILocation(line: 87, column: 21, scope: !3992, inlinedAt: !3994)
!4038 = !DILocation(line: 87, column: 26, scope: !3992, inlinedAt: !3994)
!4039 = !DILocation(line: 87, column: 36, scope: !3992, inlinedAt: !3994)
!4040 = !DILocation(line: 87, column: 34, scope: !3992, inlinedAt: !3994)
!4041 = !DILocation(line: 87, column: 43, scope: !3992, inlinedAt: !3994)
!4042 = !DILocation(line: 89, column: 6, scope: !4043, inlinedAt: !3994)
!4043 = distinct !DILexicalBlock(scope: !3992, file: !856, line: 89, column: 6)
!4044 = !DILocation(line: 89, column: 17, scope: !4043, inlinedAt: !3994)
!4045 = !DILocation(line: 89, column: 14, scope: !4043, inlinedAt: !3994)
!4046 = !DILocation(line: 89, column: 6, scope: !3992, inlinedAt: !3994)
!4047 = !DILocation(line: 90, column: 10, scope: !4048, inlinedAt: !3994)
!4048 = distinct !DILexicalBlock(scope: !4043, file: !856, line: 89, column: 24)
!4049 = !DILocation(line: 90, column: 32, scope: !4048, inlinedAt: !3994)
!4050 = !DILocation(line: 90, column: 22, scope: !4048, inlinedAt: !3994)
!4051 = !DILocation(line: 90, column: 21, scope: !4048, inlinedAt: !3994)
!4052 = !DILocation(line: 90, column: 37, scope: !4048, inlinedAt: !3994)
!4053 = !DILocation(line: 90, column: 3, scope: !4048, inlinedAt: !3994)
!4054 = !DILocation(line: 95, column: 7, scope: !4015, inlinedAt: !3994)
!4055 = !DILocation(line: 95, column: 6, scope: !3992, inlinedAt: !3994)
!4056 = !DILocation(line: 96, column: 23, scope: !4014, inlinedAt: !3994)
!4057 = !DILocation(line: 96, column: 36, scope: !4014, inlinedAt: !3994)
!4058 = !DILocation(line: 96, column: 46, scope: !4014, inlinedAt: !3994)
!4059 = !DILocation(line: 96, column: 44, scope: !4014, inlinedAt: !3994)
!4060 = !DILocation(line: 96, column: 55, scope: !4014, inlinedAt: !3994)
!4061 = !DILocation(line: 98, column: 7, scope: !4062, inlinedAt: !3994)
!4062 = distinct !DILexicalBlock(scope: !4014, file: !856, line: 98, column: 7)
!4063 = !DILocation(line: 98, column: 7, scope: !4014, inlinedAt: !3994)
!4064 = !DILocation(line: 99, column: 10, scope: !4065, inlinedAt: !3994)
!4065 = distinct !DILexicalBlock(scope: !4062, file: !856, line: 98, column: 17)
!4066 = !DILocation(line: 99, column: 19, scope: !4065, inlinedAt: !3994)
!4067 = !DILocation(line: 99, column: 8, scope: !4065, inlinedAt: !3994)
!4068 = !DILocation(line: 100, column: 3, scope: !4065, inlinedAt: !3994)
!4069 = !DILocation(line: 100, column: 14, scope: !4070, inlinedAt: !3994)
!4070 = distinct !DILexicalBlock(scope: !4062, file: !856, line: 100, column: 14)
!4071 = !DILocation(line: 100, column: 14, scope: !4062, inlinedAt: !3994)
!4072 = !DILocation(line: 101, column: 10, scope: !4073, inlinedAt: !3994)
!4073 = distinct !DILexicalBlock(scope: !4070, file: !856, line: 100, column: 25)
!4074 = !DILocation(line: 101, column: 19, scope: !4073, inlinedAt: !3994)
!4075 = !DILocation(line: 101, column: 8, scope: !4073, inlinedAt: !3994)
!4076 = !DILocation(line: 102, column: 3, scope: !4073, inlinedAt: !3994)
!4077 = !DILocation(line: 103, column: 2, scope: !4014, inlinedAt: !3994)
!4078 = !DILocation(line: 110, column: 6, scope: !4079, inlinedAt: !3994)
!4079 = distinct !DILexicalBlock(scope: !3992, file: !856, line: 110, column: 6)
!4080 = !DILocation(line: 110, column: 6, scope: !3992, inlinedAt: !3994)
!4081 = !DILocation(line: 111, column: 8, scope: !4082, inlinedAt: !3994)
!4082 = distinct !DILexicalBlock(scope: !4079, file: !856, line: 110, column: 17)
!4083 = !DILocation(line: 111, column: 5, scope: !4082, inlinedAt: !3994)
!4084 = !DILocation(line: 112, column: 7, scope: !4085, inlinedAt: !3994)
!4085 = distinct !DILexicalBlock(scope: !4082, file: !856, line: 112, column: 7)
!4086 = !DILocation(line: 112, column: 16, scope: !4085, inlinedAt: !3994)
!4087 = !DILocation(line: 112, column: 20, scope: !4085, inlinedAt: !3994)
!4088 = !DILocation(line: 112, column: 22, scope: !4085, inlinedAt: !3994)
!4089 = !DILocation(line: 112, column: 7, scope: !4082, inlinedAt: !3994)
!4090 = !DILocation(line: 113, column: 22, scope: !4091, inlinedAt: !3994)
!4091 = distinct !DILexicalBlock(scope: !4085, file: !856, line: 112, column: 36)
!4092 = !DILocation(line: 113, column: 12, scope: !4091, inlinedAt: !3994)
!4093 = !DILocation(line: 113, column: 28, scope: !4091, inlinedAt: !3994)
!4094 = !DILocation(line: 113, column: 38, scope: !4091, inlinedAt: !3994)
!4095 = !DILocation(line: 113, column: 36, scope: !4091, inlinedAt: !3994)
!4096 = !DILocation(line: 113, column: 25, scope: !4091, inlinedAt: !3994)
!4097 = !DILocation(line: 113, column: 11, scope: !4091, inlinedAt: !3994)
!4098 = !DILocation(line: 113, column: 4, scope: !4091, inlinedAt: !3994)
!4099 = !DILocation(line: 115, column: 11, scope: !4100, inlinedAt: !3994)
!4100 = distinct !DILexicalBlock(scope: !4085, file: !856, line: 114, column: 10)
!4101 = !DILocation(line: 115, column: 16, scope: !4100, inlinedAt: !3994)
!4102 = !DILocation(line: 115, column: 26, scope: !4100, inlinedAt: !3994)
!4103 = !DILocation(line: 115, column: 24, scope: !4100, inlinedAt: !3994)
!4104 = !DILocation(line: 115, column: 15, scope: !4100, inlinedAt: !3994)
!4105 = !DILocation(line: 115, column: 13, scope: !4100, inlinedAt: !3994)
!4106 = !DILocation(line: 115, column: 4, scope: !4100, inlinedAt: !3994)
!4107 = !DILocation(line: 117, column: 13, scope: !4108, inlinedAt: !3994)
!4108 = distinct !DILexicalBlock(scope: !4079, file: !856, line: 117, column: 13)
!4109 = !DILocation(line: 117, column: 13, scope: !4079, inlinedAt: !3994)
!4110 = !DILocation(line: 118, column: 7, scope: !4111, inlinedAt: !3994)
!4111 = distinct !DILexicalBlock(scope: !4112, file: !856, line: 118, column: 7)
!4112 = distinct !DILexicalBlock(scope: !4108, file: !856, line: 117, column: 24)
!4113 = !DILocation(line: 118, column: 7, scope: !4112, inlinedAt: !3994)
!4114 = !DILocation(line: 119, column: 22, scope: !4115, inlinedAt: !3994)
!4115 = distinct !DILexicalBlock(scope: !4111, file: !856, line: 118, column: 17)
!4116 = !DILocation(line: 119, column: 12, scope: !4115, inlinedAt: !3994)
!4117 = !DILocation(line: 119, column: 28, scope: !4115, inlinedAt: !3994)
!4118 = !DILocation(line: 119, column: 36, scope: !4115, inlinedAt: !3994)
!4119 = !DILocation(line: 119, column: 34, scope: !4115, inlinedAt: !3994)
!4120 = !DILocation(line: 119, column: 25, scope: !4115, inlinedAt: !3994)
!4121 = !DILocation(line: 119, column: 11, scope: !4115, inlinedAt: !3994)
!4122 = !DILocation(line: 119, column: 4, scope: !4115, inlinedAt: !3994)
!4123 = !DILocation(line: 121, column: 11, scope: !4124, inlinedAt: !3994)
!4124 = distinct !DILexicalBlock(scope: !4111, file: !856, line: 120, column: 10)
!4125 = !DILocation(line: 121, column: 16, scope: !4124, inlinedAt: !3994)
!4126 = !DILocation(line: 121, column: 24, scope: !4124, inlinedAt: !3994)
!4127 = !DILocation(line: 121, column: 22, scope: !4124, inlinedAt: !3994)
!4128 = !DILocation(line: 121, column: 15, scope: !4124, inlinedAt: !3994)
!4129 = !DILocation(line: 121, column: 13, scope: !4124, inlinedAt: !3994)
!4130 = !DILocation(line: 121, column: 4, scope: !4124, inlinedAt: !3994)
!4131 = !DILocation(line: 124, column: 7, scope: !4132, inlinedAt: !3994)
!4132 = distinct !DILexicalBlock(scope: !4133, file: !856, line: 124, column: 7)
!4133 = distinct !DILexicalBlock(scope: !4108, file: !856, line: 123, column: 9)
!4134 = !DILocation(line: 124, column: 7, scope: !4133, inlinedAt: !3994)
!4135 = !DILocation(line: 125, column: 23, scope: !4136, inlinedAt: !3994)
!4136 = distinct !DILexicalBlock(scope: !4132, file: !856, line: 124, column: 17)
!4137 = !DILocation(line: 125, column: 27, scope: !4136, inlinedAt: !3994)
!4138 = !DILocation(line: 125, column: 25, scope: !4136, inlinedAt: !3994)
!4139 = !DILocation(line: 125, column: 35, scope: !4136, inlinedAt: !3994)
!4140 = !DILocation(line: 125, column: 33, scope: !4136, inlinedAt: !3994)
!4141 = !DILocation(line: 125, column: 42, scope: !4136, inlinedAt: !3994)
!4142 = !DILocation(line: 125, column: 40, scope: !4136, inlinedAt: !3994)
!4143 = !DILocation(line: 125, column: 11, scope: !4136, inlinedAt: !3994)
!4144 = !DILocation(line: 125, column: 4, scope: !4136, inlinedAt: !3994)
!4145 = !DILocation(line: 127, column: 12, scope: !4146, inlinedAt: !3994)
!4146 = distinct !DILexicalBlock(scope: !4132, file: !856, line: 126, column: 10)
!4147 = !DILocation(line: 127, column: 16, scope: !4146, inlinedAt: !3994)
!4148 = !DILocation(line: 127, column: 14, scope: !4146, inlinedAt: !3994)
!4149 = !DILocation(line: 127, column: 24, scope: !4146, inlinedAt: !3994)
!4150 = !DILocation(line: 127, column: 22, scope: !4146, inlinedAt: !3994)
!4151 = !DILocation(line: 127, column: 31, scope: !4146, inlinedAt: !3994)
!4152 = !DILocation(line: 127, column: 29, scope: !4146, inlinedAt: !3994)
!4153 = !DILocation(line: 127, column: 4, scope: !4146, inlinedAt: !3994)
!4154 = !DILocation(line: 130, column: 1, scope: !3992, inlinedAt: !3994)
!4155 = !DILocation(line: 904, column: 2, scope: !3990)
!4156 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4157 = !DILocation(line: 55, column: 2, scope: !4156)
!4158 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4159 = !DILocation(line: 82, column: 20, scope: !4158)
!4160 = !DILocation(line: 82, column: 18, scope: !4158)
!4161 = !DILocation(line: 90, column: 6, scope: !4162)
!4162 = distinct !DILexicalBlock(scope: !4158, file: !63, line: 90, column: 6)
!4163 = !DILocation(line: 90, column: 22, scope: !4162)
!4164 = !DILocation(line: 90, column: 6, scope: !4158)
!4165 = !DILocation(line: 91, column: 3, scope: !4166)
!4166 = distinct !DILexicalBlock(scope: !4162, file: !63, line: 90, column: 39)
!4167 = !DILocation(line: 93, column: 2, scope: !4158)
!4168 = !DILocation(line: 94, column: 1, scope: !4158)
!4169 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4170 = !DILocalVariable(name: "reftime", arg: 1, scope: !4169, file: !6, line: 2133, type: !1088)
!4171 = !DILocation(line: 2133, column: 47, scope: !4169)
!4172 = !DILocalVariable(name: "uptime", scope: !4169, file: !6, line: 2135, type: !55)
!4173 = !DILocation(line: 2135, column: 10, scope: !4169)
!4174 = !DILocalVariable(name: "delta", scope: !4169, file: !6, line: 2135, type: !55)
!4175 = !DILocation(line: 2135, column: 18, scope: !4169)
!4176 = !DILocation(line: 2137, column: 11, scope: !4169)
!4177 = !DILocation(line: 2137, column: 9, scope: !4169)
!4178 = !DILocation(line: 2138, column: 10, scope: !4169)
!4179 = !DILocation(line: 2138, column: 20, scope: !4169)
!4180 = !DILocation(line: 2138, column: 19, scope: !4169)
!4181 = !DILocation(line: 2138, column: 17, scope: !4169)
!4182 = !DILocation(line: 2138, column: 8, scope: !4169)
!4183 = !DILocation(line: 2139, column: 13, scope: !4169)
!4184 = !DILocation(line: 2139, column: 3, scope: !4169)
!4185 = !DILocation(line: 2139, column: 11, scope: !4169)
!4186 = !DILocation(line: 2141, column: 9, scope: !4169)
!4187 = !DILocation(line: 2141, column: 2, scope: !4169)
!4188 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4189 = !DILocation(line: 2061, column: 31, scope: !4188)
!4190 = !DILocation(line: 2061, column: 9, scope: !4188)
!4191 = !DILocation(line: 2061, column: 2, scope: !4188)
!4192 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4193 = !DILocation(line: 509, column: 2, scope: !4192)
!4194 = !DILocation(line: 509, column: 2, scope: !4195)
!4195 = distinct !DILexicalBlock(scope: !4192, file: !765, line: 509, column: 2)
!4196 = !{i32 -2141851225}
!4197 = !DILocation(line: 510, column: 9, scope: !4192)
!4198 = !DILocation(line: 510, column: 2, scope: !4192)
!4199 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4200 = !DILocation(line: 78, column: 63, scope: !3992, inlinedAt: !4201)
!4201 = distinct !DILocation(line: 1072, column: 9, scope: !4199)
!4202 = !DILocation(line: 78, column: 75, scope: !3992, inlinedAt: !4201)
!4203 = !DILocation(line: 79, column: 18, scope: !3992, inlinedAt: !4201)
!4204 = !DILocation(line: 79, column: 30, scope: !3992, inlinedAt: !4201)
!4205 = !DILocation(line: 80, column: 14, scope: !3992, inlinedAt: !4201)
!4206 = !DILocation(line: 80, column: 29, scope: !3992, inlinedAt: !4201)
!4207 = !DILocation(line: 81, column: 14, scope: !3992, inlinedAt: !4201)
!4208 = !DILocation(line: 84, column: 7, scope: !3992, inlinedAt: !4201)
!4209 = !DILocation(line: 86, column: 7, scope: !3992, inlinedAt: !4201)
!4210 = !DILocation(line: 93, column: 11, scope: !3992, inlinedAt: !4201)
!4211 = !DILocation(line: 96, column: 12, scope: !4014, inlinedAt: !4201)
!4212 = !DILocalVariable(name: "t", arg: 1, scope: !4199, file: !856, line: 1069, type: !69)
!4213 = !DILocation(line: 1069, column: 70, scope: !4199)
!4214 = !DILocation(line: 1072, column: 17, scope: !4199)
!4215 = !DILocation(line: 84, column: 19, scope: !3992, inlinedAt: !4201)
!4216 = !DILocation(line: 84, column: 28, scope: !3992, inlinedAt: !4201)
!4217 = !DILocation(line: 85, column: 4, scope: !3992, inlinedAt: !4201)
!4218 = !DILocation(line: 85, column: 12, scope: !3992, inlinedAt: !4201)
!4219 = !DILocation(line: 85, column: 10, scope: !3992, inlinedAt: !4201)
!4220 = !DILocation(line: 85, column: 21, scope: !3992, inlinedAt: !4201)
!4221 = !DILocation(line: 85, column: 26, scope: !3992, inlinedAt: !4201)
!4222 = !DILocation(line: 85, column: 34, scope: !3992, inlinedAt: !4201)
!4223 = !DILocation(line: 85, column: 32, scope: !3992, inlinedAt: !4201)
!4224 = !DILocation(line: 85, column: 43, scope: !3992, inlinedAt: !4201)
!4225 = !DILocation(line: 0, scope: !3992, inlinedAt: !4201)
!4226 = !DILocation(line: 86, column: 19, scope: !3992, inlinedAt: !4201)
!4227 = !DILocation(line: 86, column: 28, scope: !3992, inlinedAt: !4201)
!4228 = !DILocation(line: 87, column: 4, scope: !3992, inlinedAt: !4201)
!4229 = !DILocation(line: 87, column: 14, scope: !3992, inlinedAt: !4201)
!4230 = !DILocation(line: 87, column: 12, scope: !3992, inlinedAt: !4201)
!4231 = !DILocation(line: 87, column: 21, scope: !3992, inlinedAt: !4201)
!4232 = !DILocation(line: 87, column: 26, scope: !3992, inlinedAt: !4201)
!4233 = !DILocation(line: 87, column: 36, scope: !3992, inlinedAt: !4201)
!4234 = !DILocation(line: 87, column: 34, scope: !3992, inlinedAt: !4201)
!4235 = !DILocation(line: 87, column: 43, scope: !3992, inlinedAt: !4201)
!4236 = !DILocation(line: 89, column: 6, scope: !4043, inlinedAt: !4201)
!4237 = !DILocation(line: 89, column: 17, scope: !4043, inlinedAt: !4201)
!4238 = !DILocation(line: 89, column: 14, scope: !4043, inlinedAt: !4201)
!4239 = !DILocation(line: 89, column: 6, scope: !3992, inlinedAt: !4201)
!4240 = !DILocation(line: 90, column: 10, scope: !4048, inlinedAt: !4201)
!4241 = !DILocation(line: 90, column: 32, scope: !4048, inlinedAt: !4201)
!4242 = !DILocation(line: 90, column: 22, scope: !4048, inlinedAt: !4201)
!4243 = !DILocation(line: 90, column: 21, scope: !4048, inlinedAt: !4201)
!4244 = !DILocation(line: 90, column: 37, scope: !4048, inlinedAt: !4201)
!4245 = !DILocation(line: 90, column: 3, scope: !4048, inlinedAt: !4201)
!4246 = !DILocation(line: 95, column: 7, scope: !4015, inlinedAt: !4201)
!4247 = !DILocation(line: 95, column: 6, scope: !3992, inlinedAt: !4201)
!4248 = !DILocation(line: 96, column: 23, scope: !4014, inlinedAt: !4201)
!4249 = !DILocation(line: 96, column: 36, scope: !4014, inlinedAt: !4201)
!4250 = !DILocation(line: 96, column: 46, scope: !4014, inlinedAt: !4201)
!4251 = !DILocation(line: 96, column: 44, scope: !4014, inlinedAt: !4201)
!4252 = !DILocation(line: 96, column: 55, scope: !4014, inlinedAt: !4201)
!4253 = !DILocation(line: 98, column: 7, scope: !4062, inlinedAt: !4201)
!4254 = !DILocation(line: 98, column: 7, scope: !4014, inlinedAt: !4201)
!4255 = !DILocation(line: 99, column: 10, scope: !4065, inlinedAt: !4201)
!4256 = !DILocation(line: 99, column: 19, scope: !4065, inlinedAt: !4201)
!4257 = !DILocation(line: 99, column: 8, scope: !4065, inlinedAt: !4201)
!4258 = !DILocation(line: 100, column: 3, scope: !4065, inlinedAt: !4201)
!4259 = !DILocation(line: 100, column: 14, scope: !4070, inlinedAt: !4201)
!4260 = !DILocation(line: 100, column: 14, scope: !4062, inlinedAt: !4201)
!4261 = !DILocation(line: 101, column: 10, scope: !4073, inlinedAt: !4201)
!4262 = !DILocation(line: 101, column: 19, scope: !4073, inlinedAt: !4201)
!4263 = !DILocation(line: 101, column: 8, scope: !4073, inlinedAt: !4201)
!4264 = !DILocation(line: 102, column: 3, scope: !4073, inlinedAt: !4201)
!4265 = !DILocation(line: 103, column: 2, scope: !4014, inlinedAt: !4201)
!4266 = !DILocation(line: 110, column: 6, scope: !4079, inlinedAt: !4201)
!4267 = !DILocation(line: 110, column: 6, scope: !3992, inlinedAt: !4201)
!4268 = !DILocation(line: 111, column: 8, scope: !4082, inlinedAt: !4201)
!4269 = !DILocation(line: 111, column: 5, scope: !4082, inlinedAt: !4201)
!4270 = !DILocation(line: 112, column: 7, scope: !4085, inlinedAt: !4201)
!4271 = !DILocation(line: 112, column: 16, scope: !4085, inlinedAt: !4201)
!4272 = !DILocation(line: 112, column: 20, scope: !4085, inlinedAt: !4201)
!4273 = !DILocation(line: 112, column: 22, scope: !4085, inlinedAt: !4201)
!4274 = !DILocation(line: 112, column: 7, scope: !4082, inlinedAt: !4201)
!4275 = !DILocation(line: 113, column: 22, scope: !4091, inlinedAt: !4201)
!4276 = !DILocation(line: 113, column: 12, scope: !4091, inlinedAt: !4201)
!4277 = !DILocation(line: 113, column: 28, scope: !4091, inlinedAt: !4201)
!4278 = !DILocation(line: 113, column: 38, scope: !4091, inlinedAt: !4201)
!4279 = !DILocation(line: 113, column: 36, scope: !4091, inlinedAt: !4201)
!4280 = !DILocation(line: 113, column: 25, scope: !4091, inlinedAt: !4201)
!4281 = !DILocation(line: 113, column: 11, scope: !4091, inlinedAt: !4201)
!4282 = !DILocation(line: 113, column: 4, scope: !4091, inlinedAt: !4201)
!4283 = !DILocation(line: 115, column: 11, scope: !4100, inlinedAt: !4201)
!4284 = !DILocation(line: 115, column: 16, scope: !4100, inlinedAt: !4201)
!4285 = !DILocation(line: 115, column: 26, scope: !4100, inlinedAt: !4201)
!4286 = !DILocation(line: 115, column: 24, scope: !4100, inlinedAt: !4201)
!4287 = !DILocation(line: 115, column: 15, scope: !4100, inlinedAt: !4201)
!4288 = !DILocation(line: 115, column: 13, scope: !4100, inlinedAt: !4201)
!4289 = !DILocation(line: 115, column: 4, scope: !4100, inlinedAt: !4201)
!4290 = !DILocation(line: 117, column: 13, scope: !4108, inlinedAt: !4201)
!4291 = !DILocation(line: 117, column: 13, scope: !4079, inlinedAt: !4201)
!4292 = !DILocation(line: 118, column: 7, scope: !4111, inlinedAt: !4201)
!4293 = !DILocation(line: 118, column: 7, scope: !4112, inlinedAt: !4201)
!4294 = !DILocation(line: 119, column: 22, scope: !4115, inlinedAt: !4201)
!4295 = !DILocation(line: 119, column: 12, scope: !4115, inlinedAt: !4201)
!4296 = !DILocation(line: 119, column: 28, scope: !4115, inlinedAt: !4201)
!4297 = !DILocation(line: 119, column: 36, scope: !4115, inlinedAt: !4201)
!4298 = !DILocation(line: 119, column: 34, scope: !4115, inlinedAt: !4201)
!4299 = !DILocation(line: 119, column: 25, scope: !4115, inlinedAt: !4201)
!4300 = !DILocation(line: 119, column: 11, scope: !4115, inlinedAt: !4201)
!4301 = !DILocation(line: 119, column: 4, scope: !4115, inlinedAt: !4201)
!4302 = !DILocation(line: 121, column: 11, scope: !4124, inlinedAt: !4201)
!4303 = !DILocation(line: 121, column: 16, scope: !4124, inlinedAt: !4201)
!4304 = !DILocation(line: 121, column: 24, scope: !4124, inlinedAt: !4201)
!4305 = !DILocation(line: 121, column: 22, scope: !4124, inlinedAt: !4201)
!4306 = !DILocation(line: 121, column: 15, scope: !4124, inlinedAt: !4201)
!4307 = !DILocation(line: 121, column: 13, scope: !4124, inlinedAt: !4201)
!4308 = !DILocation(line: 121, column: 4, scope: !4124, inlinedAt: !4201)
!4309 = !DILocation(line: 124, column: 7, scope: !4132, inlinedAt: !4201)
!4310 = !DILocation(line: 124, column: 7, scope: !4133, inlinedAt: !4201)
!4311 = !DILocation(line: 125, column: 23, scope: !4136, inlinedAt: !4201)
!4312 = !DILocation(line: 125, column: 27, scope: !4136, inlinedAt: !4201)
!4313 = !DILocation(line: 125, column: 25, scope: !4136, inlinedAt: !4201)
!4314 = !DILocation(line: 125, column: 35, scope: !4136, inlinedAt: !4201)
!4315 = !DILocation(line: 125, column: 33, scope: !4136, inlinedAt: !4201)
!4316 = !DILocation(line: 125, column: 42, scope: !4136, inlinedAt: !4201)
!4317 = !DILocation(line: 125, column: 40, scope: !4136, inlinedAt: !4201)
!4318 = !DILocation(line: 125, column: 11, scope: !4136, inlinedAt: !4201)
!4319 = !DILocation(line: 125, column: 4, scope: !4136, inlinedAt: !4201)
!4320 = !DILocation(line: 127, column: 12, scope: !4146, inlinedAt: !4201)
!4321 = !DILocation(line: 127, column: 16, scope: !4146, inlinedAt: !4201)
!4322 = !DILocation(line: 127, column: 14, scope: !4146, inlinedAt: !4201)
!4323 = !DILocation(line: 127, column: 24, scope: !4146, inlinedAt: !4201)
!4324 = !DILocation(line: 127, column: 22, scope: !4146, inlinedAt: !4201)
!4325 = !DILocation(line: 127, column: 31, scope: !4146, inlinedAt: !4201)
!4326 = !DILocation(line: 127, column: 29, scope: !4146, inlinedAt: !4201)
!4327 = !DILocation(line: 127, column: 4, scope: !4146, inlinedAt: !4201)
!4328 = !DILocation(line: 130, column: 1, scope: !3992, inlinedAt: !4201)
!4329 = !DILocation(line: 1072, column: 2, scope: !4199)
!4330 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4331 = !DILocation(line: 935, column: 3, scope: !4332, inlinedAt: !4333)
!4332 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4333 = distinct !DILocation(line: 31, column: 2, scope: !4330)
!4334 = !{i32 2223901}
!4335 = !DILocation(line: 32, column: 1, scope: !4330)
!4336 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4337 = !DILocation(line: 2174, column: 9, scope: !4336)
!4338 = !DILocation(line: 2174, column: 2, scope: !4336)
!4339 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4340 = !DILocation(line: 26, column: 9, scope: !4339)
!4341 = !DILocation(line: 26, column: 2, scope: !4339)
!4342 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4343 = !DILocation(line: 72, column: 18, scope: !4342)
!4344 = !DILocation(line: 74, column: 2, scope: !4342)
!4345 = !DILocation(line: 75, column: 20, scope: !4342)
!4346 = !DILocation(line: 75, column: 18, scope: !4342)
!4347 = !DILocation(line: 76, column: 1, scope: !4342)
!4348 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !4349, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !564, retainedNodes: !609)
!4349 = !DISubroutineType(types: !4350)
!4350 = !{!412, !3922}
!4351 = !DILocalVariable(name: "timeout", arg: 1, scope: !4348, file: !765, line: 117, type: !3922)
!4352 = !DILocation(line: 117, column: 61, scope: !4348)
!4353 = !DILocation(line: 126, column: 2, scope: !4348)
!4354 = !DILocation(line: 126, column: 2, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4348, file: !765, line: 126, column: 2)
!4356 = !{i32 -2141853129}
!4357 = !DILocation(line: 127, column: 9, scope: !4348)
!4358 = !DILocation(line: 127, column: 2, scope: !4348)
!4359 = distinct !DISubprogram(name: "pipe_test", scope: !4360, file: !4360, line: 96, type: !206, scopeLine: 97, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4360 = !DIFile(filename: "appl/Zephyr/app_kernel/src/pipe_b.c", directory: "/home/kenny/ara")
!4361 = !DILocalVariable(name: "putsize", scope: !4359, file: !4360, line: 98, type: !58)
!4362 = !DILocation(line: 98, column: 11, scope: !4359)
!4363 = !DILocalVariable(name: "getsize", scope: !4359, file: !4360, line: 99, type: !61)
!4364 = !DILocation(line: 99, column: 14, scope: !4359)
!4365 = !DILocalVariable(name: "puttime", scope: !4359, file: !4360, line: 100, type: !4366)
!4366 = !DICompositeType(tag: DW_TAG_array_type, baseType: !58, size: 96, elements: !294)
!4367 = !DILocation(line: 100, column: 11, scope: !4359)
!4368 = !DILocalVariable(name: "putcount", scope: !4359, file: !4360, line: 101, type: !61)
!4369 = !DILocation(line: 101, column: 7, scope: !4359)
!4370 = !DILocalVariable(name: "pipe", scope: !4359, file: !4360, line: 102, type: !61)
!4371 = !DILocation(line: 102, column: 7, scope: !4359)
!4372 = !DILocalVariable(name: "TaskPrio", scope: !4359, file: !4360, line: 103, type: !58)
!4373 = !DILocation(line: 103, column: 11, scope: !4359)
!4374 = !DILocalVariable(name: "prio", scope: !4359, file: !4360, line: 104, type: !61)
!4375 = !DILocation(line: 104, column: 7, scope: !4359)
!4376 = !DILocalVariable(name: "getinfo", scope: !4359, file: !4360, line: 105, type: !4377)
!4377 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "getinfo", file: !1390, line: 18, size: 96, elements: !4378)
!4378 = !{!4379, !4380, !4381}
!4379 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4377, file: !1390, line: 19, baseType: !61, size: 32)
!4380 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !4377, file: !1390, line: 20, baseType: !59, size: 32, offset: 32)
!4381 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4377, file: !1390, line: 21, baseType: !61, size: 32, offset: 64)
!4382 = !DILocation(line: 105, column: 17, scope: !4359)
!4383 = !DILocation(line: 107, column: 2, scope: !4359)
!4384 = !DILocation(line: 108, column: 2, scope: !4359)
!4385 = !DILocation(line: 113, column: 2, scope: !4359)
!4386 = !DILocation(line: 114, column: 2, scope: !4359)
!4387 = !DILocation(line: 117, column: 2, scope: !4359)
!4388 = !DILocation(line: 118, column: 2, scope: !4359)
!4389 = !DILocation(line: 121, column: 2, scope: !4359)
!4390 = !DILocation(line: 122, column: 2, scope: !4359)
!4391 = !DILocation(line: 125, column: 2, scope: !4359)
!4392 = !DILocation(line: 126, column: 2, scope: !4359)
!4393 = !DILocation(line: 127, column: 2, scope: !4359)
!4394 = !DILocation(line: 128, column: 2, scope: !4359)
!4395 = !DILocation(line: 130, column: 2, scope: !4359)
!4396 = !DILocation(line: 132, column: 15, scope: !4397)
!4397 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 132, column: 2)
!4398 = !DILocation(line: 132, column: 7, scope: !4397)
!4399 = !DILocation(line: 132, column: 21, scope: !4400)
!4400 = distinct !DILexicalBlock(scope: !4397, file: !4360, line: 132, column: 2)
!4401 = !DILocation(line: 132, column: 29, scope: !4400)
!4402 = !DILocation(line: 132, column: 2, scope: !4397)
!4403 = !DILocation(line: 133, column: 13, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4405, file: !4360, line: 133, column: 3)
!4405 = distinct !DILexicalBlock(scope: !4400, file: !4360, line: 132, column: 66)
!4406 = !DILocation(line: 133, column: 8, scope: !4404)
!4407 = !DILocation(line: 133, column: 18, scope: !4408)
!4408 = distinct !DILexicalBlock(scope: !4404, file: !4360, line: 133, column: 3)
!4409 = !DILocation(line: 133, column: 23, scope: !4408)
!4410 = !DILocation(line: 133, column: 3, scope: !4404)
!4411 = !DILocation(line: 134, column: 13, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4408, file: !4360, line: 133, column: 36)
!4413 = !DILocation(line: 135, column: 23, scope: !4412)
!4414 = !DILocation(line: 135, column: 12, scope: !4412)
!4415 = !DILocation(line: 135, column: 38, scope: !4412)
!4416 = !DILocation(line: 135, column: 47, scope: !4412)
!4417 = !DILocation(line: 136, column: 15, scope: !4412)
!4418 = !DILocation(line: 136, column: 7, scope: !4412)
!4419 = !DILocation(line: 135, column: 4, scope: !4412)
!4420 = !DILocation(line: 139, column: 25, scope: !4412)
!4421 = !DILocation(line: 139, column: 35, scope: !4412)
!4422 = !DILocation(line: 139, column: 4, scope: !4412)
!4423 = !DILocation(line: 140, column: 3, scope: !4412)
!4424 = !DILocation(line: 133, column: 32, scope: !4408)
!4425 = !DILocation(line: 133, column: 3, scope: !4408)
!4426 = distinct !{!4426, !4410, !4427}
!4427 = !DILocation(line: 140, column: 3, scope: !4404)
!4428 = !DILocation(line: 141, column: 3, scope: !4429)
!4429 = distinct !DILexicalBlock(scope: !4405, file: !4360, line: 141, column: 3)
!4430 = !DILocation(line: 142, column: 2, scope: !4405)
!4431 = !DILocation(line: 132, column: 59, scope: !4400)
!4432 = !DILocation(line: 132, column: 2, scope: !4400)
!4433 = distinct !{!4433, !4402, !4434}
!4434 = !DILocation(line: 142, column: 2, scope: !4397)
!4435 = !DILocation(line: 143, column: 2, scope: !4359)
!4436 = !DILocation(line: 146, column: 12, scope: !4437)
!4437 = distinct !DILexicalBlock(scope: !4359, file: !4360, line: 146, column: 2)
!4438 = !DILocation(line: 146, column: 7, scope: !4437)
!4439 = !DILocation(line: 146, column: 17, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4437, file: !4360, line: 146, column: 2)
!4441 = !DILocation(line: 146, column: 22, scope: !4440)
!4442 = !DILocation(line: 146, column: 2, scope: !4437)
!4443 = !DILocation(line: 148, column: 7, scope: !4444)
!4444 = distinct !DILexicalBlock(scope: !4445, file: !4360, line: 148, column: 7)
!4445 = distinct !DILexicalBlock(scope: !4440, file: !4360, line: 146, column: 35)
!4446 = !DILocation(line: 148, column: 12, scope: !4444)
!4447 = !DILocation(line: 148, column: 7, scope: !4445)
!4448 = !DILocation(line: 149, column: 4, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4444, file: !4360, line: 148, column: 18)
!4450 = !DILocation(line: 152, column: 37, scope: !4449)
!4451 = !DILocation(line: 152, column: 15, scope: !4449)
!4452 = !DILocation(line: 152, column: 13, scope: !4449)
!4453 = !DILocation(line: 153, column: 3, scope: !4449)
!4454 = !DILocation(line: 154, column: 7, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4445, file: !4360, line: 154, column: 7)
!4456 = !DILocation(line: 154, column: 12, scope: !4455)
!4457 = !DILocation(line: 154, column: 7, scope: !4445)
!4458 = !DILocation(line: 155, column: 4, scope: !4459)
!4459 = distinct !DILexicalBlock(scope: !4455, file: !4360, line: 154, column: 18)
!4460 = !DILocation(line: 158, column: 26, scope: !4459)
!4461 = !DILocation(line: 158, column: 43, scope: !4459)
!4462 = !DILocation(line: 158, column: 52, scope: !4459)
!4463 = !DILocation(line: 158, column: 4, scope: !4459)
!4464 = !DILocation(line: 159, column: 3, scope: !4459)
!4465 = !DILocation(line: 160, column: 3, scope: !4445)
!4466 = !DILocation(line: 161, column: 3, scope: !4445)
!4467 = !DILocation(line: 161, column: 3, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4445, file: !4360, line: 161, column: 3)
!4469 = !DILocation(line: 162, column: 3, scope: !4445)
!4470 = !DILocation(line: 164, column: 3, scope: !4445)
!4471 = !DILocation(line: 166, column: 15, scope: !4472)
!4472 = distinct !DILexicalBlock(scope: !4445, file: !4360, line: 166, column: 2)
!4473 = !DILocation(line: 166, column: 7, scope: !4472)
!4474 = !DILocation(line: 166, column: 21, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4472, file: !4360, line: 166, column: 2)
!4476 = !DILocation(line: 166, column: 29, scope: !4475)
!4477 = !DILocation(line: 166, column: 2, scope: !4472)
!4478 = !DILocation(line: 167, column: 34, scope: !4479)
!4479 = distinct !DILexicalBlock(scope: !4475, file: !4360, line: 166, column: 68)
!4480 = !DILocation(line: 167, column: 32, scope: !4479)
!4481 = !DILocation(line: 167, column: 12, scope: !4479)
!4482 = !DILocation(line: 168, column: 13, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4479, file: !4360, line: 168, column: 3)
!4484 = !DILocation(line: 168, column: 8, scope: !4483)
!4485 = !DILocation(line: 168, column: 18, scope: !4486)
!4486 = distinct !DILexicalBlock(scope: !4483, file: !4360, line: 168, column: 3)
!4487 = !DILocation(line: 168, column: 23, scope: !4486)
!4488 = !DILocation(line: 168, column: 3, scope: !4483)
!4489 = !DILocation(line: 169, column: 23, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4486, file: !4360, line: 168, column: 36)
!4491 = !DILocation(line: 169, column: 12, scope: !4490)
!4492 = !DILocation(line: 169, column: 39, scope: !4490)
!4493 = !DILocation(line: 170, column: 7, scope: !4490)
!4494 = !DILocation(line: 170, column: 26, scope: !4490)
!4495 = !DILocation(line: 170, column: 18, scope: !4490)
!4496 = !DILocation(line: 169, column: 4, scope: !4490)
!4497 = !DILocation(line: 173, column: 25, scope: !4490)
!4498 = !DILocation(line: 173, column: 35, scope: !4490)
!4499 = !DILocation(line: 173, column: 4, scope: !4490)
!4500 = !DILocation(line: 174, column: 22, scope: !4490)
!4501 = !DILocation(line: 174, column: 12, scope: !4490)
!4502 = !DILocation(line: 175, column: 3, scope: !4490)
!4503 = !DILocation(line: 168, column: 32, scope: !4486)
!4504 = !DILocation(line: 168, column: 3, scope: !4486)
!4505 = distinct !{!4505, !4488, !4506}
!4506 = !DILocation(line: 175, column: 3, scope: !4483)
!4507 = !DILocation(line: 176, column: 3, scope: !4508)
!4508 = distinct !DILexicalBlock(scope: !4479, file: !4360, line: 176, column: 3)
!4509 = !DILocation(line: 177, column: 2, scope: !4479)
!4510 = !DILocation(line: 166, column: 61, scope: !4475)
!4511 = !DILocation(line: 166, column: 2, scope: !4475)
!4512 = distinct !{!4512, !4477, !4513}
!4513 = !DILocation(line: 177, column: 2, scope: !4472)
!4514 = !DILocation(line: 178, column: 3, scope: !4445)
!4515 = !DILocation(line: 179, column: 25, scope: !4445)
!4516 = !DILocation(line: 179, column: 42, scope: !4445)
!4517 = !DILocation(line: 179, column: 3, scope: !4445)
!4518 = !DILocation(line: 180, column: 2, scope: !4445)
!4519 = !DILocation(line: 146, column: 31, scope: !4440)
!4520 = !DILocation(line: 146, column: 2, scope: !4440)
!4521 = distinct !{!4521, !4442, !4522}
!4522 = !DILocation(line: 180, column: 2, scope: !4437)
!4523 = !DILocation(line: 181, column: 1, scope: !4359)
!4524 = distinct !DISubprogram(name: "k_sem_reset", scope: !765, file: !765, line: 775, type: !4525, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{null, !4527}
!4527 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4528, size: 32)
!4528 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !4529)
!4529 = !{!4530, !4549, !4550}
!4530 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4528, file: !6, line: 3705, baseType: !4531, size: 64)
!4531 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !4532)
!4532 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !4533)
!4533 = !{!4534}
!4534 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !4532, file: !99, line: 209, baseType: !4535, size: 64)
!4535 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !4536)
!4536 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !4537)
!4537 = !{!4538, !4544}
!4538 = !DIDerivedType(tag: DW_TAG_member, scope: !4536, file: !116, line: 32, baseType: !4539, size: 32)
!4539 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4536, file: !116, line: 32, size: 32, elements: !4540)
!4540 = !{!4541, !4543}
!4541 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !4539, file: !116, line: 33, baseType: !4542, size: 32)
!4542 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4536, size: 32)
!4543 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4539, file: !116, line: 34, baseType: !4542, size: 32)
!4544 = !DIDerivedType(tag: DW_TAG_member, scope: !4536, file: !116, line: 36, baseType: !4545, size: 32, offset: 32)
!4545 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4536, file: !116, line: 36, size: 32, elements: !4546)
!4546 = !{!4547, !4548}
!4547 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !4545, file: !116, line: 37, baseType: !4542, size: 32)
!4548 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4545, file: !116, line: 38, baseType: !4542, size: 32)
!4549 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !4528, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!4550 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !4528, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!4551 = !DILocalVariable(name: "sem", arg: 1, scope: !4524, file: !765, line: 775, type: !4527)
!4552 = !DILocation(line: 775, column: 65, scope: !4524)
!4553 = !DILocation(line: 783, column: 2, scope: !4524)
!4554 = !DILocation(line: 783, column: 2, scope: !4555)
!4555 = distinct !DILexicalBlock(scope: !4524, file: !765, line: 783, column: 2)
!4556 = !{i32 -2141842432}
!4557 = !DILocation(line: 784, column: 21, scope: !4524)
!4558 = !DILocation(line: 784, column: 2, scope: !4524)
!4559 = !DILocation(line: 785, column: 1, scope: !4524)
!4560 = distinct !DISubprogram(name: "k_sem_give", scope: !765, file: !765, line: 761, type: !4525, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4561 = !DILocalVariable(name: "sem", arg: 1, scope: !4560, file: !765, line: 761, type: !4527)
!4562 = !DILocation(line: 761, column: 64, scope: !4560)
!4563 = !DILocation(line: 769, column: 2, scope: !4560)
!4564 = !DILocation(line: 769, column: 2, scope: !4565)
!4565 = distinct !DILexicalBlock(scope: !4560, file: !765, line: 769, column: 2)
!4566 = !{i32 -2141842500}
!4567 = !DILocation(line: 770, column: 20, scope: !4560)
!4568 = !DILocation(line: 770, column: 2, scope: !4560)
!4569 = !DILocation(line: 771, column: 1, scope: !4560)
!4570 = distinct !DISubprogram(name: "pipeput", scope: !4360, file: !4360, line: 196, type: !4571, scopeLine: 201, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4571 = !DISubroutineType(types: !4572)
!4572 = !{!61, !4573, !572, !61, !61, !1471}
!4573 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4574, size: 32)
!4574 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_pipe", file: !6, line: 4324, size: 352, elements: !4575)
!4575 = !{!4576, !4577, !4578, !4579, !4580, !4581, !4585, !4590}
!4576 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !4574, file: !6, line: 4325, baseType: !261, size: 32)
!4577 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4574, file: !6, line: 4326, baseType: !79, size: 32, offset: 32)
!4578 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_used", scope: !4574, file: !6, line: 4327, baseType: !79, size: 32, offset: 64)
!4579 = !DIDerivedType(tag: DW_TAG_member, name: "read_index", scope: !4574, file: !6, line: 4328, baseType: !79, size: 32, offset: 96)
!4580 = !DIDerivedType(tag: DW_TAG_member, name: "write_index", scope: !4574, file: !6, line: 4329, baseType: !79, size: 32, offset: 128)
!4581 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4574, file: !6, line: 4330, baseType: !4582, size: 32, offset: 160)
!4582 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !4583)
!4583 = !{!4584}
!4584 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !4582, file: !99, line: 243, baseType: !134, size: 32)
!4585 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4574, file: !6, line: 4335, baseType: !4586, size: 128, offset: 192)
!4586 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4574, file: !6, line: 4332, size: 128, elements: !4587)
!4587 = !{!4588, !4589}
!4588 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !4586, file: !6, line: 4333, baseType: !4531, size: 64)
!4589 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !4586, file: !6, line: 4334, baseType: !4531, size: 64, offset: 64)
!4590 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4574, file: !6, line: 4339, baseType: !161, size: 8, offset: 320)
!4591 = !DILocalVariable(name: "pipe", arg: 1, scope: !4570, file: !4360, line: 196, type: !4573)
!4592 = !DILocation(line: 196, column: 28, scope: !4570)
!4593 = !DILocalVariable(name: "option", arg: 2, scope: !4570, file: !4360, line: 197, type: !572)
!4594 = !DILocation(line: 197, column: 24, scope: !4570)
!4595 = !DILocalVariable(name: "size", arg: 3, scope: !4570, file: !4360, line: 198, type: !61)
!4596 = !DILocation(line: 198, column: 10, scope: !4570)
!4597 = !DILocalVariable(name: "count", arg: 4, scope: !4570, file: !4360, line: 199, type: !61)
!4598 = !DILocation(line: 199, column: 10, scope: !4570)
!4599 = !DILocalVariable(name: "time", arg: 5, scope: !4570, file: !4360, line: 200, type: !1471)
!4600 = !DILocation(line: 200, column: 16, scope: !4570)
!4601 = !DILocalVariable(name: "i", scope: !4570, file: !4360, line: 202, type: !61)
!4602 = !DILocation(line: 202, column: 6, scope: !4570)
!4603 = !DILocalVariable(name: "t", scope: !4570, file: !4360, line: 203, type: !59)
!4604 = !DILocation(line: 203, column: 15, scope: !4570)
!4605 = !DILocalVariable(name: "sizexferd_total", scope: !4570, file: !4360, line: 204, type: !79)
!4606 = !DILocation(line: 204, column: 9, scope: !4570)
!4607 = !DILocalVariable(name: "size2xfer_total", scope: !4570, file: !4360, line: 205, type: !79)
!4608 = !DILocation(line: 205, column: 9, scope: !4570)
!4609 = !DILocation(line: 205, column: 27, scope: !4570)
!4610 = !DILocation(line: 205, column: 34, scope: !4570)
!4611 = !DILocation(line: 205, column: 32, scope: !4570)
!4612 = !DILocation(line: 208, column: 2, scope: !4570)
!4613 = !DILocation(line: 209, column: 6, scope: !4570)
!4614 = !DILocation(line: 209, column: 4, scope: !4570)
!4615 = !DILocation(line: 210, column: 9, scope: !4616)
!4616 = distinct !DILexicalBlock(scope: !4570, file: !4360, line: 210, column: 2)
!4617 = !DILocation(line: 210, column: 7, scope: !4616)
!4618 = !DILocation(line: 210, column: 14, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4616, file: !4360, line: 210, column: 2)
!4620 = !DILocation(line: 210, column: 21, scope: !4619)
!4621 = !DILocation(line: 210, column: 32, scope: !4619)
!4622 = !DILocation(line: 210, column: 36, scope: !4619)
!4623 = !DILocation(line: 210, column: 40, scope: !4619)
!4624 = !DILocation(line: 210, column: 38, scope: !4619)
!4625 = !DILocation(line: 210, column: 2, scope: !4616)
!4626 = !DILocalVariable(name: "sizexferd", scope: !4627, file: !4360, line: 211, type: !79)
!4627 = distinct !DILexicalBlock(scope: !4619, file: !4360, line: 210, column: 53)
!4628 = !DILocation(line: 211, column: 10, scope: !4627)
!4629 = !DILocalVariable(name: "size2xfer", scope: !4627, file: !4360, line: 212, type: !79)
!4630 = !DILocation(line: 212, column: 10, scope: !4627)
!4631 = !DILocation(line: 212, column: 22, scope: !4627)
!4632 = !DILocalVariable(name: "ret", scope: !4627, file: !4360, line: 213, type: !61)
!4633 = !DILocation(line: 213, column: 7, scope: !4627)
!4634 = !DILocalVariable(name: "mim_num_of_bytes", scope: !4627, file: !4360, line: 214, type: !79)
!4635 = !DILocation(line: 214, column: 10, scope: !4627)
!4636 = !DILocation(line: 216, column: 7, scope: !4637)
!4637 = distinct !DILexicalBlock(scope: !4627, file: !4360, line: 216, column: 7)
!4638 = !DILocation(line: 216, column: 14, scope: !4637)
!4639 = !DILocation(line: 216, column: 7, scope: !4627)
!4640 = !DILocation(line: 217, column: 23, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4637, file: !4360, line: 216, column: 25)
!4642 = !DILocation(line: 217, column: 21, scope: !4641)
!4643 = !DILocation(line: 218, column: 3, scope: !4641)
!4644 = !DILocation(line: 219, column: 20, scope: !4627)
!4645 = !DILocation(line: 219, column: 38, scope: !4627)
!4646 = !DILocation(line: 220, column: 17, scope: !4627)
!4647 = !DILocation(line: 220, column: 35, scope: !4627)
!4648 = !DILocation(line: 219, column: 9, scope: !4627)
!4649 = !DILocation(line: 219, column: 7, scope: !4627)
!4650 = !DILocation(line: 222, column: 7, scope: !4651)
!4651 = distinct !DILexicalBlock(scope: !4627, file: !4360, line: 222, column: 7)
!4652 = !DILocation(line: 222, column: 11, scope: !4651)
!4653 = !DILocation(line: 222, column: 7, scope: !4627)
!4654 = !DILocation(line: 223, column: 4, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4651, file: !4360, line: 222, column: 17)
!4656 = !DILocation(line: 225, column: 7, scope: !4657)
!4657 = distinct !DILexicalBlock(scope: !4627, file: !4360, line: 225, column: 7)
!4658 = !DILocation(line: 225, column: 14, scope: !4657)
!4659 = !DILocation(line: 225, column: 24, scope: !4657)
!4660 = !DILocation(line: 225, column: 27, scope: !4657)
!4661 = !DILocation(line: 225, column: 40, scope: !4657)
!4662 = !DILocation(line: 225, column: 37, scope: !4657)
!4663 = !DILocation(line: 225, column: 7, scope: !4627)
!4664 = !DILocation(line: 226, column: 4, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4657, file: !4360, line: 225, column: 51)
!4666 = !DILocation(line: 229, column: 22, scope: !4627)
!4667 = !DILocation(line: 229, column: 19, scope: !4627)
!4668 = !DILocation(line: 230, column: 7, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4627, file: !4360, line: 230, column: 7)
!4670 = !DILocation(line: 230, column: 26, scope: !4669)
!4671 = !DILocation(line: 230, column: 23, scope: !4669)
!4672 = !DILocation(line: 230, column: 7, scope: !4627)
!4673 = !DILocation(line: 231, column: 4, scope: !4674)
!4674 = distinct !DILexicalBlock(scope: !4669, file: !4360, line: 230, column: 43)
!4675 = !DILocation(line: 234, column: 7, scope: !4676)
!4676 = distinct !DILexicalBlock(scope: !4627, file: !4360, line: 234, column: 7)
!4677 = !DILocation(line: 234, column: 25, scope: !4676)
!4678 = !DILocation(line: 234, column: 23, scope: !4676)
!4679 = !DILocation(line: 234, column: 7, scope: !4627)
!4680 = !DILocation(line: 235, column: 4, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4676, file: !4360, line: 234, column: 42)
!4682 = !DILocation(line: 237, column: 2, scope: !4627)
!4683 = !DILocation(line: 210, column: 49, scope: !4619)
!4684 = !DILocation(line: 210, column: 2, scope: !4619)
!4685 = distinct !{!4685, !4625, !4686}
!4686 = !DILocation(line: 237, column: 2, scope: !4616)
!4687 = !DILocation(line: 239, column: 27, scope: !4570)
!4688 = !DILocation(line: 239, column: 6, scope: !4570)
!4689 = !DILocation(line: 239, column: 4, scope: !4570)
!4690 = !DILocation(line: 240, column: 10, scope: !4570)
!4691 = !DILocation(line: 240, column: 3, scope: !4570)
!4692 = !DILocation(line: 240, column: 8, scope: !4570)
!4693 = !DILocation(line: 241, column: 6, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4570, file: !4360, line: 241, column: 6)
!4695 = !DILocation(line: 241, column: 23, scope: !4694)
!4696 = !DILocation(line: 241, column: 6, scope: !4570)
!4697 = !DILocation(line: 242, column: 7, scope: !4698)
!4698 = distinct !DILexicalBlock(scope: !4699, file: !4360, line: 242, column: 7)
!4699 = distinct !DILexicalBlock(scope: !4694, file: !4360, line: 241, column: 28)
!4700 = !DILocation(line: 242, column: 7, scope: !4699)
!4701 = !DILocation(line: 243, column: 4, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4698, file: !4360, line: 242, column: 30)
!4703 = !DILocation(line: 246, column: 3, scope: !4702)
!4704 = !DILocation(line: 247, column: 2, scope: !4705)
!4705 = distinct !DILexicalBlock(scope: !4698, file: !4360, line: 246, column: 10)
!4706 = !DILocation(line: 250, column: 3, scope: !4699)
!4707 = !DILocation(line: 251, column: 2, scope: !4699)
!4708 = !DILocation(line: 252, column: 2, scope: !4570)
!4709 = !DILocation(line: 253, column: 1, scope: !4570)
!4710 = distinct !DISubprogram(name: "k_msgq_get", scope: !765, file: !765, line: 830, type: !4711, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4711 = !DISubroutineType(types: !4712)
!4712 = !{!61, !4713, !60, !4726}
!4713 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4714, size: 32)
!4714 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !4715)
!4715 = !{!4716, !4717, !4718, !4719, !4720, !4721, !4722, !4723, !4724, !4725}
!4716 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4714, file: !6, line: 3850, baseType: !4531, size: 64)
!4717 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4714, file: !6, line: 3852, baseType: !4582, size: 32, offset: 64)
!4718 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !4714, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!4719 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !4714, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!4720 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !4714, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!4721 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !4714, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!4722 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !4714, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!4723 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !4714, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!4724 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !4714, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!4725 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !4714, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!4726 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !4727)
!4727 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !4728)
!4728 = !{!4729}
!4729 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !4727, file: !54, line: 68, baseType: !53, size: 64)
!4730 = !DILocalVariable(name: "msgq", arg: 1, scope: !4710, file: !765, line: 830, type: !4713)
!4731 = !DILocation(line: 830, column: 64, scope: !4710)
!4732 = !DILocalVariable(name: "data", arg: 2, scope: !4710, file: !765, line: 830, type: !60)
!4733 = !DILocation(line: 830, column: 77, scope: !4710)
!4734 = !DILocalVariable(name: "timeout", arg: 3, scope: !4710, file: !765, line: 830, type: !4726)
!4735 = !DILocation(line: 830, column: 95, scope: !4710)
!4736 = !DILocation(line: 839, column: 2, scope: !4710)
!4737 = !DILocation(line: 839, column: 2, scope: !4738)
!4738 = distinct !DILexicalBlock(scope: !4710, file: !765, line: 839, column: 2)
!4739 = !{i32 -2141842160}
!4740 = !DILocation(line: 840, column: 27, scope: !4710)
!4741 = !DILocation(line: 840, column: 33, scope: !4710)
!4742 = !DILocation(line: 840, column: 9, scope: !4710)
!4743 = !DILocation(line: 840, column: 2, scope: !4710)
!4744 = distinct !DISubprogram(name: "k_current_get", scope: !765, file: !765, line: 187, type: !4745, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4745 = !DISubroutineType(types: !4746)
!4746 = !{!4747}
!4747 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_tid_t", file: !6, line: 648, baseType: !4748)
!4748 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4749, size: 32)
!4749 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_thread", file: !6, line: 570, size: 1280, elements: !4750)
!4750 = !{!4751, !4792, !4804, !4805, !4806, !4807, !4808, !4814, !4830}
!4751 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !4749, file: !6, line: 572, baseType: !4752, size: 448)
!4752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_base", file: !6, line: 441, size: 448, elements: !4753)
!4753 = !{!4754, !4765, !4767, !4768, !4769, !4778, !4779, !4780, !4791}
!4754 = !DIDerivedType(tag: DW_TAG_member, scope: !4752, file: !6, line: 444, baseType: !4755, size: 64)
!4755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4752, file: !6, line: 444, size: 64, elements: !4756)
!4756 = !{!4757, !4759}
!4757 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_dlist", scope: !4755, file: !6, line: 445, baseType: !4758, size: 64)
!4758 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dnode_t", file: !116, line: 43, baseType: !4536)
!4759 = !DIDerivedType(tag: DW_TAG_member, name: "qnode_rb", scope: !4755, file: !6, line: 446, baseType: !4760, size: 64)
!4760 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rbnode", file: !151, line: 48, size: 64, elements: !4761)
!4761 = !{!4762}
!4762 = !DIDerivedType(tag: DW_TAG_member, name: "children", scope: !4760, file: !151, line: 49, baseType: !4763, size: 64)
!4763 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4764, size: 64, elements: !156)
!4764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4760, size: 32)
!4765 = !DIDerivedType(tag: DW_TAG_member, name: "pended_on", scope: !4752, file: !6, line: 452, baseType: !4766, size: 32, offset: 64)
!4766 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4531, size: 32)
!4767 = !DIDerivedType(tag: DW_TAG_member, name: "user_options", scope: !4752, file: !6, line: 455, baseType: !161, size: 8, offset: 96)
!4768 = !DIDerivedType(tag: DW_TAG_member, name: "thread_state", scope: !4752, file: !6, line: 458, baseType: !161, size: 8, offset: 104)
!4769 = !DIDerivedType(tag: DW_TAG_member, scope: !4752, file: !6, line: 474, baseType: !4770, size: 16, offset: 112)
!4770 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4752, file: !6, line: 474, size: 16, elements: !4771)
!4771 = !{!4772, !4777}
!4772 = !DIDerivedType(tag: DW_TAG_member, scope: !4770, file: !6, line: 475, baseType: !4773, size: 16)
!4773 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4770, file: !6, line: 475, size: 16, elements: !4774)
!4774 = !{!4775, !4776}
!4775 = !DIDerivedType(tag: DW_TAG_member, name: "prio", scope: !4773, file: !6, line: 480, baseType: !170, size: 8)
!4776 = !DIDerivedType(tag: DW_TAG_member, name: "sched_locked", scope: !4773, file: !6, line: 481, baseType: !161, size: 8, offset: 8)
!4777 = !DIDerivedType(tag: DW_TAG_member, name: "preempt", scope: !4770, file: !6, line: 484, baseType: !174, size: 16)
!4778 = !DIDerivedType(tag: DW_TAG_member, name: "order_key", scope: !4752, file: !6, line: 491, baseType: !58, size: 32, offset: 128)
!4779 = !DIDerivedType(tag: DW_TAG_member, name: "swap_data", scope: !4752, file: !6, line: 511, baseType: !60, size: 32, offset: 160)
!4780 = !DIDerivedType(tag: DW_TAG_member, name: "timeout", scope: !4752, file: !6, line: 515, baseType: !4781, size: 192, offset: 192)
!4781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_timeout", file: !99, line: 221, size: 192, elements: !4782)
!4782 = !{!4783, !4784, !4790}
!4783 = !DIDerivedType(tag: DW_TAG_member, name: "node", scope: !4781, file: !99, line: 222, baseType: !4758, size: 64)
!4784 = !DIDerivedType(tag: DW_TAG_member, name: "fn", scope: !4781, file: !99, line: 223, baseType: !4785, size: 32, offset: 64)
!4785 = !DIDerivedType(tag: DW_TAG_typedef, name: "_timeout_func_t", file: !99, line: 219, baseType: !4786)
!4786 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4787, size: 32)
!4787 = !DISubroutineType(types: !4788)
!4788 = !{null, !4789}
!4789 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4781, size: 32)
!4790 = !DIDerivedType(tag: DW_TAG_member, name: "dticks", scope: !4781, file: !99, line: 226, baseType: !55, size: 64, offset: 128)
!4791 = !DIDerivedType(tag: DW_TAG_member, name: "join_waiters", scope: !4752, file: !6, line: 518, baseType: !4531, size: 64, offset: 384)
!4792 = !DIDerivedType(tag: DW_TAG_member, name: "callee_saved", scope: !4749, file: !6, line: 575, baseType: !4793, size: 288, offset: 448)
!4793 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_callee_saved", file: !192, line: 25, size: 288, elements: !4794)
!4794 = !{!4795, !4796, !4797, !4798, !4799, !4800, !4801, !4802, !4803}
!4795 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !4793, file: !192, line: 26, baseType: !58, size: 32)
!4796 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !4793, file: !192, line: 27, baseType: !58, size: 32, offset: 32)
!4797 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !4793, file: !192, line: 28, baseType: !58, size: 32, offset: 64)
!4798 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !4793, file: !192, line: 29, baseType: !58, size: 32, offset: 96)
!4799 = !DIDerivedType(tag: DW_TAG_member, name: "v5", scope: !4793, file: !192, line: 30, baseType: !58, size: 32, offset: 128)
!4800 = !DIDerivedType(tag: DW_TAG_member, name: "v6", scope: !4793, file: !192, line: 31, baseType: !58, size: 32, offset: 160)
!4801 = !DIDerivedType(tag: DW_TAG_member, name: "v7", scope: !4793, file: !192, line: 32, baseType: !58, size: 32, offset: 192)
!4802 = !DIDerivedType(tag: DW_TAG_member, name: "v8", scope: !4793, file: !192, line: 33, baseType: !58, size: 32, offset: 224)
!4803 = !DIDerivedType(tag: DW_TAG_member, name: "psp", scope: !4793, file: !192, line: 34, baseType: !58, size: 32, offset: 256)
!4804 = !DIDerivedType(tag: DW_TAG_member, name: "init_data", scope: !4749, file: !6, line: 578, baseType: !60, size: 32, offset: 736)
!4805 = !DIDerivedType(tag: DW_TAG_member, name: "fn_abort", scope: !4749, file: !6, line: 583, baseType: !205, size: 32, offset: 768)
!4806 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4749, file: !6, line: 595, baseType: !209, size: 256, offset: 800)
!4807 = !DIDerivedType(tag: DW_TAG_member, name: "errno_var", scope: !4749, file: !6, line: 610, baseType: !61, size: 32, offset: 1056)
!4808 = !DIDerivedType(tag: DW_TAG_member, name: "stack_info", scope: !4749, file: !6, line: 616, baseType: !4809, size: 96, offset: 1088)
!4809 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_stack_info", file: !6, line: 525, size: 96, elements: !4810)
!4810 = !{!4811, !4812, !4813}
!4811 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !4809, file: !6, line: 529, baseType: !134, size: 32)
!4812 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !4809, file: !6, line: 538, baseType: !79, size: 32, offset: 32)
!4813 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !4809, file: !6, line: 544, baseType: !79, size: 32, offset: 64)
!4814 = !DIDerivedType(tag: DW_TAG_member, name: "resource_pool", scope: !4749, file: !6, line: 641, baseType: !4815, size: 32, offset: 1184)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 32)
!4816 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_mem_pool", file: !86, line: 30, size: 32, elements: !4817)
!4817 = !{!4818}
!4818 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4816, file: !86, line: 31, baseType: !4819, size: 32)
!4819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4820, size: 32)
!4820 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_heap", file: !99, line: 267, size: 192, elements: !4821)
!4821 = !{!4822, !4828, !4829}
!4822 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4820, file: !99, line: 268, baseType: !4823, size: 96)
!4823 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "sys_heap", file: !103, line: 51, size: 96, elements: !4824)
!4824 = !{!4825, !4826, !4827}
!4825 = !DIDerivedType(tag: DW_TAG_member, name: "heap", scope: !4823, file: !103, line: 52, baseType: !106, size: 32)
!4826 = !DIDerivedType(tag: DW_TAG_member, name: "init_mem", scope: !4823, file: !103, line: 53, baseType: !60, size: 32, offset: 32)
!4827 = !DIDerivedType(tag: DW_TAG_member, name: "init_bytes", scope: !4823, file: !103, line: 54, baseType: !79, size: 32, offset: 64)
!4828 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !4820, file: !99, line: 269, baseType: !4531, size: 64, offset: 96)
!4829 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !4820, file: !99, line: 270, baseType: !4582, size: 32, offset: 160)
!4830 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !4749, file: !6, line: 644, baseType: !4831, size: 64, offset: 1216)
!4831 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_thread_arch", file: !192, line: 60, size: 64, elements: !4832)
!4832 = !{!4833, !4834}
!4833 = !DIDerivedType(tag: DW_TAG_member, name: "basepri", scope: !4831, file: !192, line: 63, baseType: !58, size: 32)
!4834 = !DIDerivedType(tag: DW_TAG_member, name: "swap_return_value", scope: !4831, file: !192, line: 66, baseType: !58, size: 32, offset: 32)
!4835 = !DILocation(line: 194, column: 2, scope: !4744)
!4836 = !DILocation(line: 194, column: 2, scope: !4837)
!4837 = distinct !DILexicalBlock(scope: !4744, file: !765, line: 194, column: 2)
!4838 = !{i32 -2141845368}
!4839 = !DILocation(line: 195, column: 9, scope: !4744)
!4840 = !DILocation(line: 195, column: 2, scope: !4744)
!4841 = distinct !DISubprogram(name: "k_thread_priority_get", scope: !765, file: !765, line: 254, type: !4842, scopeLine: 255, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4842 = !DISubroutineType(types: !4843)
!4843 = !{!61, !4747}
!4844 = !DILocalVariable(name: "thread", arg: 1, scope: !4841, file: !765, line: 254, type: !4747)
!4845 = !DILocation(line: 254, column: 67, scope: !4841)
!4846 = !DILocation(line: 261, column: 2, scope: !4841)
!4847 = !DILocation(line: 261, column: 2, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4841, file: !765, line: 261, column: 2)
!4849 = !{i32 -2141845028}
!4850 = !DILocation(line: 262, column: 38, scope: !4841)
!4851 = !DILocation(line: 262, column: 9, scope: !4841)
!4852 = !DILocation(line: 262, column: 2, scope: !4841)
!4853 = distinct !DISubprogram(name: "k_thread_priority_set", scope: !765, file: !765, line: 267, type: !4854, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4854 = !DISubroutineType(types: !4855)
!4855 = !{null, !4747, !61}
!4856 = !DILocalVariable(name: "thread", arg: 1, scope: !4853, file: !765, line: 267, type: !4747)
!4857 = !DILocation(line: 267, column: 68, scope: !4853)
!4858 = !DILocalVariable(name: "prio", arg: 2, scope: !4853, file: !765, line: 267, type: !61)
!4859 = !DILocation(line: 267, column: 80, scope: !4853)
!4860 = !DILocation(line: 275, column: 2, scope: !4853)
!4861 = !DILocation(line: 275, column: 2, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4853, file: !765, line: 275, column: 2)
!4863 = !{i32 -2141844960}
!4864 = !DILocation(line: 276, column: 31, scope: !4853)
!4865 = !DILocation(line: 276, column: 39, scope: !4853)
!4866 = !DILocation(line: 276, column: 2, scope: !4853)
!4867 = !DILocation(line: 277, column: 1, scope: !4853)
!4868 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4869 = !DILocalVariable(name: "et", scope: !4868, file: !573, line: 177, type: !58)
!4870 = !DILocation(line: 177, column: 11, scope: !4868)
!4871 = !DILocation(line: 179, column: 2, scope: !4868)
!4872 = !DILocation(line: 180, column: 7, scope: !4868)
!4873 = !DILocation(line: 180, column: 5, scope: !4868)
!4874 = !DILocation(line: 181, column: 9, scope: !4868)
!4875 = !DILocation(line: 181, column: 2, scope: !4868)
!4876 = distinct !DISubprogram(name: "k_pipe_put", scope: !765, file: !765, line: 925, type: !4877, scopeLine: 926, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4877 = !DISubroutineType(types: !4878)
!4878 = !{!61, !4573, !60, !79, !4879, !79, !4726}
!4879 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 32)
!4880 = !DILocalVariable(name: "pipe", arg: 1, scope: !4876, file: !765, line: 925, type: !4573)
!4881 = !DILocation(line: 925, column: 64, scope: !4876)
!4882 = !DILocalVariable(name: "data", arg: 2, scope: !4876, file: !765, line: 925, type: !60)
!4883 = !DILocation(line: 925, column: 77, scope: !4876)
!4884 = !DILocalVariable(name: "bytes_to_write", arg: 3, scope: !4876, file: !765, line: 925, type: !79)
!4885 = !DILocation(line: 925, column: 90, scope: !4876)
!4886 = !DILocalVariable(name: "bytes_written", arg: 4, scope: !4876, file: !765, line: 925, type: !4879)
!4887 = !DILocation(line: 925, column: 115, scope: !4876)
!4888 = !DILocalVariable(name: "min_xfer", arg: 5, scope: !4876, file: !765, line: 925, type: !79)
!4889 = !DILocation(line: 925, column: 137, scope: !4876)
!4890 = !DILocalVariable(name: "timeout", arg: 6, scope: !4876, file: !765, line: 925, type: !4726)
!4891 = !DILocation(line: 925, column: 159, scope: !4876)
!4892 = !DILocation(line: 938, column: 2, scope: !4876)
!4893 = !DILocation(line: 938, column: 2, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4876, file: !765, line: 938, column: 2)
!4895 = !{i32 -2141841684}
!4896 = !DILocation(line: 939, column: 27, scope: !4876)
!4897 = !DILocation(line: 939, column: 33, scope: !4876)
!4898 = !DILocation(line: 939, column: 39, scope: !4876)
!4899 = !DILocation(line: 939, column: 55, scope: !4876)
!4900 = !DILocation(line: 939, column: 70, scope: !4876)
!4901 = !DILocation(line: 939, column: 9, scope: !4876)
!4902 = !DILocation(line: 939, column: 2, scope: !4876)
!4903 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4904 = !DILocalVariable(name: "ts", arg: 1, scope: !4903, file: !63, line: 33, type: !58)
!4905 = !DILocation(line: 33, column: 54, scope: !4903)
!4906 = !DILocalVariable(name: "t", scope: !4903, file: !63, line: 35, type: !58)
!4907 = !DILocation(line: 35, column: 11, scope: !4903)
!4908 = !DILocation(line: 38, column: 2, scope: !4903)
!4909 = !DILocation(line: 40, column: 6, scope: !4903)
!4910 = !DILocation(line: 40, column: 4, scope: !4903)
!4911 = !DILocalVariable(name: "res", scope: !4903, file: !63, line: 41, type: !58)
!4912 = !DILocation(line: 41, column: 11, scope: !4903)
!4913 = !DILocation(line: 41, column: 18, scope: !4903)
!4914 = !DILocation(line: 41, column: 23, scope: !4903)
!4915 = !DILocation(line: 41, column: 20, scope: !4903)
!4916 = !DILocation(line: 41, column: 17, scope: !4903)
!4917 = !DILocation(line: 41, column: 30, scope: !4903)
!4918 = !DILocation(line: 41, column: 34, scope: !4903)
!4919 = !DILocation(line: 41, column: 32, scope: !4903)
!4920 = !DILocation(line: 41, column: 53, scope: !4903)
!4921 = !DILocation(line: 41, column: 51, scope: !4903)
!4922 = !DILocation(line: 41, column: 58, scope: !4903)
!4923 = !DILocation(line: 41, column: 56, scope: !4903)
!4924 = !DILocation(line: 43, column: 6, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4903, file: !63, line: 43, column: 6)
!4926 = !DILocation(line: 43, column: 9, scope: !4925)
!4927 = !DILocation(line: 43, column: 6, scope: !4903)
!4928 = !DILocation(line: 44, column: 10, scope: !4929)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !63, line: 43, column: 14)
!4930 = !DILocation(line: 44, column: 7, scope: !4929)
!4931 = !DILocation(line: 45, column: 2, scope: !4929)
!4932 = !DILocation(line: 46, column: 9, scope: !4903)
!4933 = !DILocation(line: 46, column: 2, scope: !4903)
!4934 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4935 = !DILocalVariable(name: "t", arg: 1, scope: !4936, file: !856, line: 78, type: !69)
!4936 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!4937 = !DILocation(line: 78, column: 63, scope: !4936, inlinedAt: !4938)
!4938 = distinct !DILocation(line: 904, column: 9, scope: !4934)
!4939 = !DILocalVariable(name: "from_hz", arg: 2, scope: !4936, file: !856, line: 78, type: !58)
!4940 = !DILocation(line: 78, column: 75, scope: !4936, inlinedAt: !4938)
!4941 = !DILocalVariable(name: "to_hz", arg: 3, scope: !4936, file: !856, line: 79, type: !58)
!4942 = !DILocation(line: 79, column: 18, scope: !4936, inlinedAt: !4938)
!4943 = !DILocalVariable(name: "const_hz", arg: 4, scope: !4936, file: !856, line: 79, type: !863)
!4944 = !DILocation(line: 79, column: 30, scope: !4936, inlinedAt: !4938)
!4945 = !DILocalVariable(name: "result32", arg: 5, scope: !4936, file: !856, line: 80, type: !863)
!4946 = !DILocation(line: 80, column: 14, scope: !4936, inlinedAt: !4938)
!4947 = !DILocalVariable(name: "round_up", arg: 6, scope: !4936, file: !856, line: 80, type: !863)
!4948 = !DILocation(line: 80, column: 29, scope: !4936, inlinedAt: !4938)
!4949 = !DILocalVariable(name: "round_off", arg: 7, scope: !4936, file: !856, line: 81, type: !863)
!4950 = !DILocation(line: 81, column: 14, scope: !4936, inlinedAt: !4938)
!4951 = !DILocalVariable(name: "mul_ratio", scope: !4936, file: !856, line: 84, type: !863)
!4952 = !DILocation(line: 84, column: 7, scope: !4936, inlinedAt: !4938)
!4953 = !DILocalVariable(name: "div_ratio", scope: !4936, file: !856, line: 86, type: !863)
!4954 = !DILocation(line: 86, column: 7, scope: !4936, inlinedAt: !4938)
!4955 = !DILocalVariable(name: "off", scope: !4936, file: !856, line: 93, type: !69)
!4956 = !DILocation(line: 93, column: 11, scope: !4936, inlinedAt: !4938)
!4957 = !DILocalVariable(name: "rdivisor", scope: !4958, file: !856, line: 96, type: !58)
!4958 = distinct !DILexicalBlock(scope: !4959, file: !856, line: 95, column: 18)
!4959 = distinct !DILexicalBlock(scope: !4936, file: !856, line: 95, column: 6)
!4960 = !DILocation(line: 96, column: 12, scope: !4958, inlinedAt: !4938)
!4961 = !DILocalVariable(name: "t", arg: 1, scope: !4934, file: !856, line: 901, type: !69)
!4962 = !DILocation(line: 901, column: 68, scope: !4934)
!4963 = !DILocation(line: 904, column: 17, scope: !4934)
!4964 = !DILocation(line: 904, column: 20, scope: !4934)
!4965 = !DILocation(line: 84, column: 19, scope: !4936, inlinedAt: !4938)
!4966 = !DILocation(line: 84, column: 28, scope: !4936, inlinedAt: !4938)
!4967 = !DILocation(line: 85, column: 4, scope: !4936, inlinedAt: !4938)
!4968 = !DILocation(line: 85, column: 12, scope: !4936, inlinedAt: !4938)
!4969 = !DILocation(line: 85, column: 10, scope: !4936, inlinedAt: !4938)
!4970 = !DILocation(line: 85, column: 21, scope: !4936, inlinedAt: !4938)
!4971 = !DILocation(line: 85, column: 26, scope: !4936, inlinedAt: !4938)
!4972 = !DILocation(line: 85, column: 34, scope: !4936, inlinedAt: !4938)
!4973 = !DILocation(line: 85, column: 32, scope: !4936, inlinedAt: !4938)
!4974 = !DILocation(line: 85, column: 43, scope: !4936, inlinedAt: !4938)
!4975 = !DILocation(line: 0, scope: !4936, inlinedAt: !4938)
!4976 = !DILocation(line: 86, column: 19, scope: !4936, inlinedAt: !4938)
!4977 = !DILocation(line: 86, column: 28, scope: !4936, inlinedAt: !4938)
!4978 = !DILocation(line: 87, column: 4, scope: !4936, inlinedAt: !4938)
!4979 = !DILocation(line: 87, column: 14, scope: !4936, inlinedAt: !4938)
!4980 = !DILocation(line: 87, column: 12, scope: !4936, inlinedAt: !4938)
!4981 = !DILocation(line: 87, column: 21, scope: !4936, inlinedAt: !4938)
!4982 = !DILocation(line: 87, column: 26, scope: !4936, inlinedAt: !4938)
!4983 = !DILocation(line: 87, column: 36, scope: !4936, inlinedAt: !4938)
!4984 = !DILocation(line: 87, column: 34, scope: !4936, inlinedAt: !4938)
!4985 = !DILocation(line: 87, column: 43, scope: !4936, inlinedAt: !4938)
!4986 = !DILocation(line: 89, column: 6, scope: !4987, inlinedAt: !4938)
!4987 = distinct !DILexicalBlock(scope: !4936, file: !856, line: 89, column: 6)
!4988 = !DILocation(line: 89, column: 17, scope: !4987, inlinedAt: !4938)
!4989 = !DILocation(line: 89, column: 14, scope: !4987, inlinedAt: !4938)
!4990 = !DILocation(line: 89, column: 6, scope: !4936, inlinedAt: !4938)
!4991 = !DILocation(line: 90, column: 10, scope: !4992, inlinedAt: !4938)
!4992 = distinct !DILexicalBlock(scope: !4987, file: !856, line: 89, column: 24)
!4993 = !DILocation(line: 90, column: 32, scope: !4992, inlinedAt: !4938)
!4994 = !DILocation(line: 90, column: 22, scope: !4992, inlinedAt: !4938)
!4995 = !DILocation(line: 90, column: 21, scope: !4992, inlinedAt: !4938)
!4996 = !DILocation(line: 90, column: 37, scope: !4992, inlinedAt: !4938)
!4997 = !DILocation(line: 90, column: 3, scope: !4992, inlinedAt: !4938)
!4998 = !DILocation(line: 95, column: 7, scope: !4959, inlinedAt: !4938)
!4999 = !DILocation(line: 95, column: 6, scope: !4936, inlinedAt: !4938)
!5000 = !DILocation(line: 96, column: 23, scope: !4958, inlinedAt: !4938)
!5001 = !DILocation(line: 96, column: 36, scope: !4958, inlinedAt: !4938)
!5002 = !DILocation(line: 96, column: 46, scope: !4958, inlinedAt: !4938)
!5003 = !DILocation(line: 96, column: 44, scope: !4958, inlinedAt: !4938)
!5004 = !DILocation(line: 96, column: 55, scope: !4958, inlinedAt: !4938)
!5005 = !DILocation(line: 98, column: 7, scope: !5006, inlinedAt: !4938)
!5006 = distinct !DILexicalBlock(scope: !4958, file: !856, line: 98, column: 7)
!5007 = !DILocation(line: 98, column: 7, scope: !4958, inlinedAt: !4938)
!5008 = !DILocation(line: 99, column: 10, scope: !5009, inlinedAt: !4938)
!5009 = distinct !DILexicalBlock(scope: !5006, file: !856, line: 98, column: 17)
!5010 = !DILocation(line: 99, column: 19, scope: !5009, inlinedAt: !4938)
!5011 = !DILocation(line: 99, column: 8, scope: !5009, inlinedAt: !4938)
!5012 = !DILocation(line: 100, column: 3, scope: !5009, inlinedAt: !4938)
!5013 = !DILocation(line: 100, column: 14, scope: !5014, inlinedAt: !4938)
!5014 = distinct !DILexicalBlock(scope: !5006, file: !856, line: 100, column: 14)
!5015 = !DILocation(line: 100, column: 14, scope: !5006, inlinedAt: !4938)
!5016 = !DILocation(line: 101, column: 10, scope: !5017, inlinedAt: !4938)
!5017 = distinct !DILexicalBlock(scope: !5014, file: !856, line: 100, column: 25)
!5018 = !DILocation(line: 101, column: 19, scope: !5017, inlinedAt: !4938)
!5019 = !DILocation(line: 101, column: 8, scope: !5017, inlinedAt: !4938)
!5020 = !DILocation(line: 102, column: 3, scope: !5017, inlinedAt: !4938)
!5021 = !DILocation(line: 103, column: 2, scope: !4958, inlinedAt: !4938)
!5022 = !DILocation(line: 110, column: 6, scope: !5023, inlinedAt: !4938)
!5023 = distinct !DILexicalBlock(scope: !4936, file: !856, line: 110, column: 6)
!5024 = !DILocation(line: 110, column: 6, scope: !4936, inlinedAt: !4938)
!5025 = !DILocation(line: 111, column: 8, scope: !5026, inlinedAt: !4938)
!5026 = distinct !DILexicalBlock(scope: !5023, file: !856, line: 110, column: 17)
!5027 = !DILocation(line: 111, column: 5, scope: !5026, inlinedAt: !4938)
!5028 = !DILocation(line: 112, column: 7, scope: !5029, inlinedAt: !4938)
!5029 = distinct !DILexicalBlock(scope: !5026, file: !856, line: 112, column: 7)
!5030 = !DILocation(line: 112, column: 16, scope: !5029, inlinedAt: !4938)
!5031 = !DILocation(line: 112, column: 20, scope: !5029, inlinedAt: !4938)
!5032 = !DILocation(line: 112, column: 22, scope: !5029, inlinedAt: !4938)
!5033 = !DILocation(line: 112, column: 7, scope: !5026, inlinedAt: !4938)
!5034 = !DILocation(line: 113, column: 22, scope: !5035, inlinedAt: !4938)
!5035 = distinct !DILexicalBlock(scope: !5029, file: !856, line: 112, column: 36)
!5036 = !DILocation(line: 113, column: 12, scope: !5035, inlinedAt: !4938)
!5037 = !DILocation(line: 113, column: 28, scope: !5035, inlinedAt: !4938)
!5038 = !DILocation(line: 113, column: 38, scope: !5035, inlinedAt: !4938)
!5039 = !DILocation(line: 113, column: 36, scope: !5035, inlinedAt: !4938)
!5040 = !DILocation(line: 113, column: 25, scope: !5035, inlinedAt: !4938)
!5041 = !DILocation(line: 113, column: 11, scope: !5035, inlinedAt: !4938)
!5042 = !DILocation(line: 113, column: 4, scope: !5035, inlinedAt: !4938)
!5043 = !DILocation(line: 115, column: 11, scope: !5044, inlinedAt: !4938)
!5044 = distinct !DILexicalBlock(scope: !5029, file: !856, line: 114, column: 10)
!5045 = !DILocation(line: 115, column: 16, scope: !5044, inlinedAt: !4938)
!5046 = !DILocation(line: 115, column: 26, scope: !5044, inlinedAt: !4938)
!5047 = !DILocation(line: 115, column: 24, scope: !5044, inlinedAt: !4938)
!5048 = !DILocation(line: 115, column: 15, scope: !5044, inlinedAt: !4938)
!5049 = !DILocation(line: 115, column: 13, scope: !5044, inlinedAt: !4938)
!5050 = !DILocation(line: 115, column: 4, scope: !5044, inlinedAt: !4938)
!5051 = !DILocation(line: 117, column: 13, scope: !5052, inlinedAt: !4938)
!5052 = distinct !DILexicalBlock(scope: !5023, file: !856, line: 117, column: 13)
!5053 = !DILocation(line: 117, column: 13, scope: !5023, inlinedAt: !4938)
!5054 = !DILocation(line: 118, column: 7, scope: !5055, inlinedAt: !4938)
!5055 = distinct !DILexicalBlock(scope: !5056, file: !856, line: 118, column: 7)
!5056 = distinct !DILexicalBlock(scope: !5052, file: !856, line: 117, column: 24)
!5057 = !DILocation(line: 118, column: 7, scope: !5056, inlinedAt: !4938)
!5058 = !DILocation(line: 119, column: 22, scope: !5059, inlinedAt: !4938)
!5059 = distinct !DILexicalBlock(scope: !5055, file: !856, line: 118, column: 17)
!5060 = !DILocation(line: 119, column: 12, scope: !5059, inlinedAt: !4938)
!5061 = !DILocation(line: 119, column: 28, scope: !5059, inlinedAt: !4938)
!5062 = !DILocation(line: 119, column: 36, scope: !5059, inlinedAt: !4938)
!5063 = !DILocation(line: 119, column: 34, scope: !5059, inlinedAt: !4938)
!5064 = !DILocation(line: 119, column: 25, scope: !5059, inlinedAt: !4938)
!5065 = !DILocation(line: 119, column: 11, scope: !5059, inlinedAt: !4938)
!5066 = !DILocation(line: 119, column: 4, scope: !5059, inlinedAt: !4938)
!5067 = !DILocation(line: 121, column: 11, scope: !5068, inlinedAt: !4938)
!5068 = distinct !DILexicalBlock(scope: !5055, file: !856, line: 120, column: 10)
!5069 = !DILocation(line: 121, column: 16, scope: !5068, inlinedAt: !4938)
!5070 = !DILocation(line: 121, column: 24, scope: !5068, inlinedAt: !4938)
!5071 = !DILocation(line: 121, column: 22, scope: !5068, inlinedAt: !4938)
!5072 = !DILocation(line: 121, column: 15, scope: !5068, inlinedAt: !4938)
!5073 = !DILocation(line: 121, column: 13, scope: !5068, inlinedAt: !4938)
!5074 = !DILocation(line: 121, column: 4, scope: !5068, inlinedAt: !4938)
!5075 = !DILocation(line: 124, column: 7, scope: !5076, inlinedAt: !4938)
!5076 = distinct !DILexicalBlock(scope: !5077, file: !856, line: 124, column: 7)
!5077 = distinct !DILexicalBlock(scope: !5052, file: !856, line: 123, column: 9)
!5078 = !DILocation(line: 124, column: 7, scope: !5077, inlinedAt: !4938)
!5079 = !DILocation(line: 125, column: 23, scope: !5080, inlinedAt: !4938)
!5080 = distinct !DILexicalBlock(scope: !5076, file: !856, line: 124, column: 17)
!5081 = !DILocation(line: 125, column: 27, scope: !5080, inlinedAt: !4938)
!5082 = !DILocation(line: 125, column: 25, scope: !5080, inlinedAt: !4938)
!5083 = !DILocation(line: 125, column: 35, scope: !5080, inlinedAt: !4938)
!5084 = !DILocation(line: 125, column: 33, scope: !5080, inlinedAt: !4938)
!5085 = !DILocation(line: 125, column: 42, scope: !5080, inlinedAt: !4938)
!5086 = !DILocation(line: 125, column: 40, scope: !5080, inlinedAt: !4938)
!5087 = !DILocation(line: 125, column: 11, scope: !5080, inlinedAt: !4938)
!5088 = !DILocation(line: 125, column: 4, scope: !5080, inlinedAt: !4938)
!5089 = !DILocation(line: 127, column: 12, scope: !5090, inlinedAt: !4938)
!5090 = distinct !DILexicalBlock(scope: !5076, file: !856, line: 126, column: 10)
!5091 = !DILocation(line: 127, column: 16, scope: !5090, inlinedAt: !4938)
!5092 = !DILocation(line: 127, column: 14, scope: !5090, inlinedAt: !4938)
!5093 = !DILocation(line: 127, column: 24, scope: !5090, inlinedAt: !4938)
!5094 = !DILocation(line: 127, column: 22, scope: !5090, inlinedAt: !4938)
!5095 = !DILocation(line: 127, column: 31, scope: !5090, inlinedAt: !4938)
!5096 = !DILocation(line: 127, column: 29, scope: !5090, inlinedAt: !4938)
!5097 = !DILocation(line: 127, column: 4, scope: !5090, inlinedAt: !4938)
!5098 = !DILocation(line: 130, column: 1, scope: !4936, inlinedAt: !4938)
!5099 = !DILocation(line: 904, column: 2, scope: !4934)
!5100 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5101 = !DILocation(line: 82, column: 20, scope: !5100)
!5102 = !DILocation(line: 82, column: 18, scope: !5100)
!5103 = !DILocation(line: 90, column: 6, scope: !5104)
!5104 = distinct !DILexicalBlock(scope: !5100, file: !63, line: 90, column: 6)
!5105 = !DILocation(line: 90, column: 22, scope: !5104)
!5106 = !DILocation(line: 90, column: 6, scope: !5100)
!5107 = !DILocation(line: 91, column: 3, scope: !5108)
!5108 = distinct !DILexicalBlock(scope: !5104, file: !63, line: 90, column: 39)
!5109 = !DILocation(line: 93, column: 2, scope: !5100)
!5110 = !DILocation(line: 94, column: 1, scope: !5100)
!5111 = distinct !DISubprogram(name: "high_timer_overflow", scope: !63, file: !63, line: 102, type: !1073, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5112 = !DILocation(line: 107, column: 6, scope: !5113)
!5113 = distinct !DILexicalBlock(scope: !5111, file: !63, line: 107, column: 6)
!5114 = !DILocation(line: 107, column: 26, scope: !5113)
!5115 = !DILocation(line: 107, column: 56, scope: !5113)
!5116 = !DILocation(line: 107, column: 22, scope: !5113)
!5117 = !DILocation(line: 107, column: 6, scope: !5111)
!5118 = !DILocation(line: 109, column: 3, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5113, file: !63, line: 108, column: 39)
!5120 = !DILocation(line: 111, column: 2, scope: !5111)
!5121 = !DILocation(line: 112, column: 1, scope: !5111)
!5122 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5123 = !DILocalVariable(name: "reftime", arg: 1, scope: !5122, file: !6, line: 2133, type: !1088)
!5124 = !DILocation(line: 2133, column: 47, scope: !5122)
!5125 = !DILocalVariable(name: "uptime", scope: !5122, file: !6, line: 2135, type: !55)
!5126 = !DILocation(line: 2135, column: 10, scope: !5122)
!5127 = !DILocalVariable(name: "delta", scope: !5122, file: !6, line: 2135, type: !55)
!5128 = !DILocation(line: 2135, column: 18, scope: !5122)
!5129 = !DILocation(line: 2137, column: 11, scope: !5122)
!5130 = !DILocation(line: 2137, column: 9, scope: !5122)
!5131 = !DILocation(line: 2138, column: 10, scope: !5122)
!5132 = !DILocation(line: 2138, column: 20, scope: !5122)
!5133 = !DILocation(line: 2138, column: 19, scope: !5122)
!5134 = !DILocation(line: 2138, column: 17, scope: !5122)
!5135 = !DILocation(line: 2138, column: 8, scope: !5122)
!5136 = !DILocation(line: 2139, column: 13, scope: !5122)
!5137 = !DILocation(line: 2139, column: 3, scope: !5122)
!5138 = !DILocation(line: 2139, column: 11, scope: !5122)
!5139 = !DILocation(line: 2141, column: 9, scope: !5122)
!5140 = !DILocation(line: 2141, column: 2, scope: !5122)
!5141 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5142 = !DILocation(line: 2061, column: 31, scope: !5141)
!5143 = !DILocation(line: 2061, column: 9, scope: !5141)
!5144 = !DILocation(line: 2061, column: 2, scope: !5141)
!5145 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5146 = !DILocation(line: 509, column: 2, scope: !5145)
!5147 = !DILocation(line: 509, column: 2, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !5145, file: !765, line: 509, column: 2)
!5149 = !{i32 -2141843804}
!5150 = !DILocation(line: 510, column: 9, scope: !5145)
!5151 = !DILocation(line: 510, column: 2, scope: !5145)
!5152 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5153 = !DILocation(line: 78, column: 63, scope: !4936, inlinedAt: !5154)
!5154 = distinct !DILocation(line: 1072, column: 9, scope: !5152)
!5155 = !DILocation(line: 78, column: 75, scope: !4936, inlinedAt: !5154)
!5156 = !DILocation(line: 79, column: 18, scope: !4936, inlinedAt: !5154)
!5157 = !DILocation(line: 79, column: 30, scope: !4936, inlinedAt: !5154)
!5158 = !DILocation(line: 80, column: 14, scope: !4936, inlinedAt: !5154)
!5159 = !DILocation(line: 80, column: 29, scope: !4936, inlinedAt: !5154)
!5160 = !DILocation(line: 81, column: 14, scope: !4936, inlinedAt: !5154)
!5161 = !DILocation(line: 84, column: 7, scope: !4936, inlinedAt: !5154)
!5162 = !DILocation(line: 86, column: 7, scope: !4936, inlinedAt: !5154)
!5163 = !DILocation(line: 93, column: 11, scope: !4936, inlinedAt: !5154)
!5164 = !DILocation(line: 96, column: 12, scope: !4958, inlinedAt: !5154)
!5165 = !DILocalVariable(name: "t", arg: 1, scope: !5152, file: !856, line: 1069, type: !69)
!5166 = !DILocation(line: 1069, column: 70, scope: !5152)
!5167 = !DILocation(line: 1072, column: 17, scope: !5152)
!5168 = !DILocation(line: 84, column: 19, scope: !4936, inlinedAt: !5154)
!5169 = !DILocation(line: 84, column: 28, scope: !4936, inlinedAt: !5154)
!5170 = !DILocation(line: 85, column: 4, scope: !4936, inlinedAt: !5154)
!5171 = !DILocation(line: 85, column: 12, scope: !4936, inlinedAt: !5154)
!5172 = !DILocation(line: 85, column: 10, scope: !4936, inlinedAt: !5154)
!5173 = !DILocation(line: 85, column: 21, scope: !4936, inlinedAt: !5154)
!5174 = !DILocation(line: 85, column: 26, scope: !4936, inlinedAt: !5154)
!5175 = !DILocation(line: 85, column: 34, scope: !4936, inlinedAt: !5154)
!5176 = !DILocation(line: 85, column: 32, scope: !4936, inlinedAt: !5154)
!5177 = !DILocation(line: 85, column: 43, scope: !4936, inlinedAt: !5154)
!5178 = !DILocation(line: 0, scope: !4936, inlinedAt: !5154)
!5179 = !DILocation(line: 86, column: 19, scope: !4936, inlinedAt: !5154)
!5180 = !DILocation(line: 86, column: 28, scope: !4936, inlinedAt: !5154)
!5181 = !DILocation(line: 87, column: 4, scope: !4936, inlinedAt: !5154)
!5182 = !DILocation(line: 87, column: 14, scope: !4936, inlinedAt: !5154)
!5183 = !DILocation(line: 87, column: 12, scope: !4936, inlinedAt: !5154)
!5184 = !DILocation(line: 87, column: 21, scope: !4936, inlinedAt: !5154)
!5185 = !DILocation(line: 87, column: 26, scope: !4936, inlinedAt: !5154)
!5186 = !DILocation(line: 87, column: 36, scope: !4936, inlinedAt: !5154)
!5187 = !DILocation(line: 87, column: 34, scope: !4936, inlinedAt: !5154)
!5188 = !DILocation(line: 87, column: 43, scope: !4936, inlinedAt: !5154)
!5189 = !DILocation(line: 89, column: 6, scope: !4987, inlinedAt: !5154)
!5190 = !DILocation(line: 89, column: 17, scope: !4987, inlinedAt: !5154)
!5191 = !DILocation(line: 89, column: 14, scope: !4987, inlinedAt: !5154)
!5192 = !DILocation(line: 89, column: 6, scope: !4936, inlinedAt: !5154)
!5193 = !DILocation(line: 90, column: 10, scope: !4992, inlinedAt: !5154)
!5194 = !DILocation(line: 90, column: 32, scope: !4992, inlinedAt: !5154)
!5195 = !DILocation(line: 90, column: 22, scope: !4992, inlinedAt: !5154)
!5196 = !DILocation(line: 90, column: 21, scope: !4992, inlinedAt: !5154)
!5197 = !DILocation(line: 90, column: 37, scope: !4992, inlinedAt: !5154)
!5198 = !DILocation(line: 90, column: 3, scope: !4992, inlinedAt: !5154)
!5199 = !DILocation(line: 95, column: 7, scope: !4959, inlinedAt: !5154)
!5200 = !DILocation(line: 95, column: 6, scope: !4936, inlinedAt: !5154)
!5201 = !DILocation(line: 96, column: 23, scope: !4958, inlinedAt: !5154)
!5202 = !DILocation(line: 96, column: 36, scope: !4958, inlinedAt: !5154)
!5203 = !DILocation(line: 96, column: 46, scope: !4958, inlinedAt: !5154)
!5204 = !DILocation(line: 96, column: 44, scope: !4958, inlinedAt: !5154)
!5205 = !DILocation(line: 96, column: 55, scope: !4958, inlinedAt: !5154)
!5206 = !DILocation(line: 98, column: 7, scope: !5006, inlinedAt: !5154)
!5207 = !DILocation(line: 98, column: 7, scope: !4958, inlinedAt: !5154)
!5208 = !DILocation(line: 99, column: 10, scope: !5009, inlinedAt: !5154)
!5209 = !DILocation(line: 99, column: 19, scope: !5009, inlinedAt: !5154)
!5210 = !DILocation(line: 99, column: 8, scope: !5009, inlinedAt: !5154)
!5211 = !DILocation(line: 100, column: 3, scope: !5009, inlinedAt: !5154)
!5212 = !DILocation(line: 100, column: 14, scope: !5014, inlinedAt: !5154)
!5213 = !DILocation(line: 100, column: 14, scope: !5006, inlinedAt: !5154)
!5214 = !DILocation(line: 101, column: 10, scope: !5017, inlinedAt: !5154)
!5215 = !DILocation(line: 101, column: 19, scope: !5017, inlinedAt: !5154)
!5216 = !DILocation(line: 101, column: 8, scope: !5017, inlinedAt: !5154)
!5217 = !DILocation(line: 102, column: 3, scope: !5017, inlinedAt: !5154)
!5218 = !DILocation(line: 103, column: 2, scope: !4958, inlinedAt: !5154)
!5219 = !DILocation(line: 110, column: 6, scope: !5023, inlinedAt: !5154)
!5220 = !DILocation(line: 110, column: 6, scope: !4936, inlinedAt: !5154)
!5221 = !DILocation(line: 111, column: 8, scope: !5026, inlinedAt: !5154)
!5222 = !DILocation(line: 111, column: 5, scope: !5026, inlinedAt: !5154)
!5223 = !DILocation(line: 112, column: 7, scope: !5029, inlinedAt: !5154)
!5224 = !DILocation(line: 112, column: 16, scope: !5029, inlinedAt: !5154)
!5225 = !DILocation(line: 112, column: 20, scope: !5029, inlinedAt: !5154)
!5226 = !DILocation(line: 112, column: 22, scope: !5029, inlinedAt: !5154)
!5227 = !DILocation(line: 112, column: 7, scope: !5026, inlinedAt: !5154)
!5228 = !DILocation(line: 113, column: 22, scope: !5035, inlinedAt: !5154)
!5229 = !DILocation(line: 113, column: 12, scope: !5035, inlinedAt: !5154)
!5230 = !DILocation(line: 113, column: 28, scope: !5035, inlinedAt: !5154)
!5231 = !DILocation(line: 113, column: 38, scope: !5035, inlinedAt: !5154)
!5232 = !DILocation(line: 113, column: 36, scope: !5035, inlinedAt: !5154)
!5233 = !DILocation(line: 113, column: 25, scope: !5035, inlinedAt: !5154)
!5234 = !DILocation(line: 113, column: 11, scope: !5035, inlinedAt: !5154)
!5235 = !DILocation(line: 113, column: 4, scope: !5035, inlinedAt: !5154)
!5236 = !DILocation(line: 115, column: 11, scope: !5044, inlinedAt: !5154)
!5237 = !DILocation(line: 115, column: 16, scope: !5044, inlinedAt: !5154)
!5238 = !DILocation(line: 115, column: 26, scope: !5044, inlinedAt: !5154)
!5239 = !DILocation(line: 115, column: 24, scope: !5044, inlinedAt: !5154)
!5240 = !DILocation(line: 115, column: 15, scope: !5044, inlinedAt: !5154)
!5241 = !DILocation(line: 115, column: 13, scope: !5044, inlinedAt: !5154)
!5242 = !DILocation(line: 115, column: 4, scope: !5044, inlinedAt: !5154)
!5243 = !DILocation(line: 117, column: 13, scope: !5052, inlinedAt: !5154)
!5244 = !DILocation(line: 117, column: 13, scope: !5023, inlinedAt: !5154)
!5245 = !DILocation(line: 118, column: 7, scope: !5055, inlinedAt: !5154)
!5246 = !DILocation(line: 118, column: 7, scope: !5056, inlinedAt: !5154)
!5247 = !DILocation(line: 119, column: 22, scope: !5059, inlinedAt: !5154)
!5248 = !DILocation(line: 119, column: 12, scope: !5059, inlinedAt: !5154)
!5249 = !DILocation(line: 119, column: 28, scope: !5059, inlinedAt: !5154)
!5250 = !DILocation(line: 119, column: 36, scope: !5059, inlinedAt: !5154)
!5251 = !DILocation(line: 119, column: 34, scope: !5059, inlinedAt: !5154)
!5252 = !DILocation(line: 119, column: 25, scope: !5059, inlinedAt: !5154)
!5253 = !DILocation(line: 119, column: 11, scope: !5059, inlinedAt: !5154)
!5254 = !DILocation(line: 119, column: 4, scope: !5059, inlinedAt: !5154)
!5255 = !DILocation(line: 121, column: 11, scope: !5068, inlinedAt: !5154)
!5256 = !DILocation(line: 121, column: 16, scope: !5068, inlinedAt: !5154)
!5257 = !DILocation(line: 121, column: 24, scope: !5068, inlinedAt: !5154)
!5258 = !DILocation(line: 121, column: 22, scope: !5068, inlinedAt: !5154)
!5259 = !DILocation(line: 121, column: 15, scope: !5068, inlinedAt: !5154)
!5260 = !DILocation(line: 121, column: 13, scope: !5068, inlinedAt: !5154)
!5261 = !DILocation(line: 121, column: 4, scope: !5068, inlinedAt: !5154)
!5262 = !DILocation(line: 124, column: 7, scope: !5076, inlinedAt: !5154)
!5263 = !DILocation(line: 124, column: 7, scope: !5077, inlinedAt: !5154)
!5264 = !DILocation(line: 125, column: 23, scope: !5080, inlinedAt: !5154)
!5265 = !DILocation(line: 125, column: 27, scope: !5080, inlinedAt: !5154)
!5266 = !DILocation(line: 125, column: 25, scope: !5080, inlinedAt: !5154)
!5267 = !DILocation(line: 125, column: 35, scope: !5080, inlinedAt: !5154)
!5268 = !DILocation(line: 125, column: 33, scope: !5080, inlinedAt: !5154)
!5269 = !DILocation(line: 125, column: 42, scope: !5080, inlinedAt: !5154)
!5270 = !DILocation(line: 125, column: 40, scope: !5080, inlinedAt: !5154)
!5271 = !DILocation(line: 125, column: 11, scope: !5080, inlinedAt: !5154)
!5272 = !DILocation(line: 125, column: 4, scope: !5080, inlinedAt: !5154)
!5273 = !DILocation(line: 127, column: 12, scope: !5090, inlinedAt: !5154)
!5274 = !DILocation(line: 127, column: 16, scope: !5090, inlinedAt: !5154)
!5275 = !DILocation(line: 127, column: 14, scope: !5090, inlinedAt: !5154)
!5276 = !DILocation(line: 127, column: 24, scope: !5090, inlinedAt: !5154)
!5277 = !DILocation(line: 127, column: 22, scope: !5090, inlinedAt: !5154)
!5278 = !DILocation(line: 127, column: 31, scope: !5090, inlinedAt: !5154)
!5279 = !DILocation(line: 127, column: 29, scope: !5090, inlinedAt: !5154)
!5280 = !DILocation(line: 127, column: 4, scope: !5090, inlinedAt: !5154)
!5281 = !DILocation(line: 130, column: 1, scope: !4936, inlinedAt: !5154)
!5282 = !DILocation(line: 1072, column: 2, scope: !5152)
!5283 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5284 = !DILocation(line: 55, column: 2, scope: !5283)
!5285 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5286 = !DILocation(line: 935, column: 3, scope: !5287, inlinedAt: !5288)
!5287 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5288 = distinct !DILocation(line: 31, column: 2, scope: !5285)
!5289 = !{i32 2231322}
!5290 = !DILocation(line: 32, column: 1, scope: !5285)
!5291 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5292 = !DILocation(line: 2174, column: 9, scope: !5291)
!5293 = !DILocation(line: 2174, column: 2, scope: !5291)
!5294 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5295 = !DILocation(line: 26, column: 9, scope: !5294)
!5296 = !DILocation(line: 26, column: 2, scope: !5294)
!5297 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5298 = !DILocation(line: 72, column: 18, scope: !5297)
!5299 = !DILocation(line: 74, column: 2, scope: !5297)
!5300 = !DILocation(line: 75, column: 20, scope: !5297)
!5301 = !DILocation(line: 75, column: 18, scope: !5297)
!5302 = !DILocation(line: 76, column: 1, scope: !5297)
!5303 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !5304, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5304 = !DISubroutineType(types: !5305)
!5305 = !{!412, !4726}
!5306 = !DILocalVariable(name: "timeout", arg: 1, scope: !5303, file: !765, line: 117, type: !4726)
!5307 = !DILocation(line: 117, column: 61, scope: !5303)
!5308 = !DILocation(line: 126, column: 2, scope: !5303)
!5309 = !DILocation(line: 126, column: 2, scope: !5310)
!5310 = distinct !DILexicalBlock(scope: !5303, file: !765, line: 126, column: 2)
!5311 = !{i32 -2141845708}
!5312 = !DILocation(line: 127, column: 9, scope: !5303)
!5313 = !DILocation(line: 127, column: 2, scope: !5303)
!5314 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !6, file: !6, line: 3796, type: !4525, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !569, retainedNodes: !609)
!5315 = !DILocalVariable(name: "sem", arg: 1, scope: !5314, file: !6, line: 3796, type: !4527)
!5316 = !DILocation(line: 3796, column: 53, scope: !5314)
!5317 = !DILocation(line: 3798, column: 2, scope: !5314)
!5318 = !DILocation(line: 3798, column: 7, scope: !5314)
!5319 = !DILocation(line: 3798, column: 13, scope: !5314)
!5320 = !DILocation(line: 3799, column: 1, scope: !5314)
!5321 = distinct !DISubprogram(name: "piperecvtask", scope: !5322, file: !5322, line: 33, type: !206, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5322 = !DIFile(filename: "appl/Zephyr/app_kernel/src/pipe_r.c", directory: "/home/kenny/ara")
!5323 = !DILocalVariable(name: "getsize", scope: !5321, file: !5322, line: 35, type: !61)
!5324 = !DILocation(line: 35, column: 6, scope: !5321)
!5325 = !DILocalVariable(name: "gettime", scope: !5321, file: !5322, line: 36, type: !59)
!5326 = !DILocation(line: 36, column: 15, scope: !5321)
!5327 = !DILocalVariable(name: "getcount", scope: !5321, file: !5322, line: 37, type: !61)
!5328 = !DILocation(line: 37, column: 6, scope: !5321)
!5329 = !DILocalVariable(name: "pipe", scope: !5321, file: !5322, line: 38, type: !61)
!5330 = !DILocation(line: 38, column: 6, scope: !5321)
!5331 = !DILocalVariable(name: "prio", scope: !5321, file: !5322, line: 39, type: !61)
!5332 = !DILocation(line: 39, column: 6, scope: !5321)
!5333 = !DILocalVariable(name: "getinfo", scope: !5321, file: !5322, line: 40, type: !5334)
!5334 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "getinfo", file: !1390, line: 18, size: 96, elements: !5335)
!5335 = !{!5336, !5337, !5338}
!5336 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5334, file: !1390, line: 19, baseType: !61, size: 32)
!5337 = !DIDerivedType(tag: DW_TAG_member, name: "time", scope: !5334, file: !1390, line: 20, baseType: !59, size: 32, offset: 32)
!5338 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5334, file: !1390, line: 21, baseType: !61, size: 32, offset: 64)
!5339 = !DILocation(line: 40, column: 17, scope: !5321)
!5340 = !DILocation(line: 44, column: 15, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5321, file: !5322, line: 44, column: 2)
!5342 = !DILocation(line: 44, column: 7, scope: !5341)
!5343 = !DILocation(line: 44, column: 20, scope: !5344)
!5344 = distinct !DILexicalBlock(scope: !5341, file: !5322, line: 44, column: 2)
!5345 = !DILocation(line: 44, column: 28, scope: !5344)
!5346 = !DILocation(line: 44, column: 2, scope: !5341)
!5347 = !DILocation(line: 45, column: 13, scope: !5348)
!5348 = distinct !DILexicalBlock(scope: !5349, file: !5322, line: 45, column: 3)
!5349 = distinct !DILexicalBlock(scope: !5344, file: !5322, line: 44, column: 65)
!5350 = !DILocation(line: 45, column: 8, scope: !5348)
!5351 = !DILocation(line: 45, column: 18, scope: !5352)
!5352 = distinct !DILexicalBlock(scope: !5348, file: !5322, line: 45, column: 3)
!5353 = !DILocation(line: 45, column: 23, scope: !5352)
!5354 = !DILocation(line: 45, column: 3, scope: !5348)
!5355 = !DILocation(line: 46, column: 13, scope: !5356)
!5356 = distinct !DILexicalBlock(scope: !5352, file: !5322, line: 45, column: 36)
!5357 = !DILocation(line: 47, column: 23, scope: !5356)
!5358 = !DILocation(line: 47, column: 12, scope: !5356)
!5359 = !DILocation(line: 47, column: 38, scope: !5356)
!5360 = !DILocation(line: 48, column: 5, scope: !5356)
!5361 = !DILocation(line: 47, column: 4, scope: !5356)
!5362 = !DILocation(line: 49, column: 19, scope: !5356)
!5363 = !DILocation(line: 49, column: 12, scope: !5356)
!5364 = !DILocation(line: 49, column: 17, scope: !5356)
!5365 = !DILocation(line: 50, column: 19, scope: !5356)
!5366 = !DILocation(line: 50, column: 12, scope: !5356)
!5367 = !DILocation(line: 50, column: 17, scope: !5356)
!5368 = !DILocation(line: 51, column: 20, scope: !5356)
!5369 = !DILocation(line: 51, column: 12, scope: !5356)
!5370 = !DILocation(line: 51, column: 18, scope: !5356)
!5371 = !DILocation(line: 53, column: 25, scope: !5356)
!5372 = !DILocation(line: 53, column: 35, scope: !5356)
!5373 = !DILocation(line: 53, column: 4, scope: !5356)
!5374 = !DILocation(line: 54, column: 3, scope: !5356)
!5375 = !DILocation(line: 45, column: 32, scope: !5352)
!5376 = !DILocation(line: 45, column: 3, scope: !5352)
!5377 = distinct !{!5377, !5354, !5378}
!5378 = !DILocation(line: 54, column: 3, scope: !5348)
!5379 = !DILocation(line: 55, column: 2, scope: !5349)
!5380 = !DILocation(line: 44, column: 58, scope: !5344)
!5381 = !DILocation(line: 44, column: 2, scope: !5344)
!5382 = distinct !{!5382, !5346, !5383}
!5383 = !DILocation(line: 55, column: 2, scope: !5341)
!5384 = !DILocation(line: 57, column: 12, scope: !5385)
!5385 = distinct !DILexicalBlock(scope: !5321, file: !5322, line: 57, column: 2)
!5386 = !DILocation(line: 57, column: 7, scope: !5385)
!5387 = !DILocation(line: 57, column: 17, scope: !5388)
!5388 = distinct !DILexicalBlock(scope: !5385, file: !5322, line: 57, column: 2)
!5389 = !DILocation(line: 57, column: 22, scope: !5388)
!5390 = !DILocation(line: 57, column: 2, scope: !5385)
!5391 = !DILocation(line: 59, column: 15, scope: !5392)
!5392 = distinct !DILexicalBlock(scope: !5393, file: !5322, line: 59, column: 2)
!5393 = distinct !DILexicalBlock(scope: !5388, file: !5322, line: 57, column: 35)
!5394 = !DILocation(line: 59, column: 7, scope: !5392)
!5395 = !DILocation(line: 59, column: 38, scope: !5396)
!5396 = distinct !DILexicalBlock(scope: !5392, file: !5322, line: 59, column: 2)
!5397 = !DILocation(line: 59, column: 46, scope: !5396)
!5398 = !DILocation(line: 59, column: 2, scope: !5392)
!5399 = !DILocation(line: 60, column: 34, scope: !5400)
!5400 = distinct !DILexicalBlock(scope: !5396, file: !5322, line: 59, column: 67)
!5401 = !DILocation(line: 60, column: 32, scope: !5400)
!5402 = !DILocation(line: 60, column: 12, scope: !5400)
!5403 = !DILocation(line: 61, column: 13, scope: !5404)
!5404 = distinct !DILexicalBlock(scope: !5400, file: !5322, line: 61, column: 3)
!5405 = !DILocation(line: 61, column: 8, scope: !5404)
!5406 = !DILocation(line: 61, column: 18, scope: !5407)
!5407 = distinct !DILexicalBlock(scope: !5404, file: !5322, line: 61, column: 3)
!5408 = !DILocation(line: 61, column: 23, scope: !5407)
!5409 = !DILocation(line: 61, column: 3, scope: !5404)
!5410 = !DILocation(line: 63, column: 23, scope: !5411)
!5411 = distinct !DILexicalBlock(scope: !5407, file: !5322, line: 61, column: 36)
!5412 = !DILocation(line: 63, column: 12, scope: !5411)
!5413 = !DILocation(line: 64, column: 6, scope: !5411)
!5414 = !DILocation(line: 64, column: 15, scope: !5411)
!5415 = !DILocation(line: 63, column: 4, scope: !5411)
!5416 = !DILocation(line: 65, column: 19, scope: !5411)
!5417 = !DILocation(line: 65, column: 12, scope: !5411)
!5418 = !DILocation(line: 65, column: 17, scope: !5411)
!5419 = !DILocation(line: 66, column: 19, scope: !5411)
!5420 = !DILocation(line: 66, column: 12, scope: !5411)
!5421 = !DILocation(line: 66, column: 17, scope: !5411)
!5422 = !DILocation(line: 67, column: 20, scope: !5411)
!5423 = !DILocation(line: 67, column: 12, scope: !5411)
!5424 = !DILocation(line: 67, column: 18, scope: !5411)
!5425 = !DILocation(line: 69, column: 25, scope: !5411)
!5426 = !DILocation(line: 69, column: 35, scope: !5411)
!5427 = !DILocation(line: 69, column: 4, scope: !5411)
!5428 = !DILocation(line: 70, column: 3, scope: !5411)
!5429 = !DILocation(line: 61, column: 32, scope: !5407)
!5430 = !DILocation(line: 61, column: 3, scope: !5407)
!5431 = distinct !{!5431, !5409, !5432}
!5432 = !DILocation(line: 70, column: 3, scope: !5404)
!5433 = !DILocation(line: 71, column: 2, scope: !5400)
!5434 = !DILocation(line: 59, column: 60, scope: !5396)
!5435 = !DILocation(line: 59, column: 2, scope: !5396)
!5436 = distinct !{!5436, !5398, !5437}
!5437 = !DILocation(line: 71, column: 2, scope: !5392)
!5438 = !DILocation(line: 72, column: 2, scope: !5393)
!5439 = !DILocation(line: 57, column: 31, scope: !5388)
!5440 = !DILocation(line: 57, column: 2, scope: !5388)
!5441 = distinct !{!5441, !5390, !5442}
!5442 = !DILocation(line: 72, column: 2, scope: !5385)
!5443 = !DILocation(line: 74, column: 1, scope: !5321)
!5444 = distinct !DISubprogram(name: "pipeget", scope: !5322, file: !5322, line: 89, type: !5445, scopeLine: 91, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5445 = !DISubroutineType(types: !5446)
!5446 = !{!61, !5447, !572, !61, !61, !2061}
!5447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5448, size: 32)
!5448 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_pipe", file: !6, line: 4324, size: 352, elements: !5449)
!5449 = !{!5450, !5451, !5452, !5453, !5454, !5455, !5459, !5482}
!5450 = !DIDerivedType(tag: DW_TAG_member, name: "buffer", scope: !5448, file: !6, line: 4325, baseType: !261, size: 32)
!5451 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !5448, file: !6, line: 4326, baseType: !79, size: 32, offset: 32)
!5452 = !DIDerivedType(tag: DW_TAG_member, name: "bytes_used", scope: !5448, file: !6, line: 4327, baseType: !79, size: 32, offset: 64)
!5453 = !DIDerivedType(tag: DW_TAG_member, name: "read_index", scope: !5448, file: !6, line: 4328, baseType: !79, size: 32, offset: 96)
!5454 = !DIDerivedType(tag: DW_TAG_member, name: "write_index", scope: !5448, file: !6, line: 4329, baseType: !79, size: 32, offset: 128)
!5455 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5448, file: !6, line: 4330, baseType: !5456, size: 32, offset: 160)
!5456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_spinlock", file: !99, line: 234, size: 32, elements: !5457)
!5457 = !{!5458}
!5458 = !DIDerivedType(tag: DW_TAG_member, name: "thread_cpu", scope: !5456, file: !99, line: 243, baseType: !134, size: 32)
!5459 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5448, file: !6, line: 4335, baseType: !5460, size: 128, offset: 192)
!5460 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !5448, file: !6, line: 4332, size: 128, elements: !5461)
!5461 = !{!5462, !5481}
!5462 = !DIDerivedType(tag: DW_TAG_member, name: "readers", scope: !5460, file: !6, line: 4333, baseType: !5463, size: 64)
!5463 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !5464)
!5464 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !5465)
!5465 = !{!5466}
!5466 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !5464, file: !99, line: 209, baseType: !5467, size: 64)
!5467 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !5468)
!5468 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !5469)
!5469 = !{!5470, !5476}
!5470 = !DIDerivedType(tag: DW_TAG_member, scope: !5468, file: !116, line: 32, baseType: !5471, size: 32)
!5471 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5468, file: !116, line: 32, size: 32, elements: !5472)
!5472 = !{!5473, !5475}
!5473 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !5471, file: !116, line: 33, baseType: !5474, size: 32)
!5474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5468, size: 32)
!5475 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !5471, file: !116, line: 34, baseType: !5474, size: 32)
!5476 = !DIDerivedType(tag: DW_TAG_member, scope: !5468, file: !116, line: 36, baseType: !5477, size: 32, offset: 32)
!5477 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !5468, file: !116, line: 36, size: 32, elements: !5478)
!5478 = !{!5479, !5480}
!5479 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !5477, file: !116, line: 37, baseType: !5474, size: 32)
!5480 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !5477, file: !116, line: 38, baseType: !5474, size: 32)
!5481 = !DIDerivedType(tag: DW_TAG_member, name: "writers", scope: !5460, file: !6, line: 4334, baseType: !5463, size: 64, offset: 64)
!5482 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5448, file: !6, line: 4339, baseType: !161, size: 8, offset: 320)
!5483 = !DILocalVariable(name: "pipe", arg: 1, scope: !5444, file: !5322, line: 89, type: !5447)
!5484 = !DILocation(line: 89, column: 28, scope: !5444)
!5485 = !DILocalVariable(name: "option", arg: 2, scope: !5444, file: !5322, line: 89, type: !572)
!5486 = !DILocation(line: 89, column: 52, scope: !5444)
!5487 = !DILocalVariable(name: "size", arg: 3, scope: !5444, file: !5322, line: 89, type: !61)
!5488 = !DILocation(line: 89, column: 64, scope: !5444)
!5489 = !DILocalVariable(name: "count", arg: 4, scope: !5444, file: !5322, line: 89, type: !61)
!5490 = !DILocation(line: 89, column: 74, scope: !5444)
!5491 = !DILocalVariable(name: "time", arg: 5, scope: !5444, file: !5322, line: 90, type: !2061)
!5492 = !DILocation(line: 90, column: 18, scope: !5444)
!5493 = !DILocalVariable(name: "i", scope: !5444, file: !5322, line: 92, type: !61)
!5494 = !DILocation(line: 92, column: 6, scope: !5444)
!5495 = !DILocalVariable(name: "t", scope: !5444, file: !5322, line: 93, type: !59)
!5496 = !DILocation(line: 93, column: 15, scope: !5444)
!5497 = !DILocalVariable(name: "sizexferd_total", scope: !5444, file: !5322, line: 94, type: !79)
!5498 = !DILocation(line: 94, column: 9, scope: !5444)
!5499 = !DILocalVariable(name: "size2xfer_total", scope: !5444, file: !5322, line: 95, type: !79)
!5500 = !DILocation(line: 95, column: 9, scope: !5444)
!5501 = !DILocation(line: 95, column: 27, scope: !5444)
!5502 = !DILocation(line: 95, column: 34, scope: !5444)
!5503 = !DILocation(line: 95, column: 32, scope: !5444)
!5504 = !DILocation(line: 98, column: 20, scope: !5444)
!5505 = !DILocation(line: 98, column: 2, scope: !5444)
!5506 = !DILocation(line: 99, column: 6, scope: !5444)
!5507 = !DILocation(line: 99, column: 4, scope: !5444)
!5508 = !DILocation(line: 100, column: 9, scope: !5509)
!5509 = distinct !DILexicalBlock(scope: !5444, file: !5322, line: 100, column: 2)
!5510 = !DILocation(line: 100, column: 7, scope: !5509)
!5511 = !DILocation(line: 100, column: 14, scope: !5512)
!5512 = distinct !DILexicalBlock(scope: !5509, file: !5322, line: 100, column: 2)
!5513 = !DILocation(line: 100, column: 21, scope: !5512)
!5514 = !DILocation(line: 100, column: 32, scope: !5512)
!5515 = !DILocation(line: 100, column: 36, scope: !5512)
!5516 = !DILocation(line: 100, column: 40, scope: !5512)
!5517 = !DILocation(line: 100, column: 38, scope: !5512)
!5518 = !DILocation(line: 100, column: 2, scope: !5509)
!5519 = !DILocalVariable(name: "sizexferd", scope: !5520, file: !5322, line: 101, type: !79)
!5520 = distinct !DILexicalBlock(scope: !5512, file: !5322, line: 100, column: 53)
!5521 = !DILocation(line: 101, column: 10, scope: !5520)
!5522 = !DILocalVariable(name: "size2xfer", scope: !5520, file: !5322, line: 102, type: !79)
!5523 = !DILocation(line: 102, column: 10, scope: !5520)
!5524 = !DILocation(line: 102, column: 22, scope: !5520)
!5525 = !DILocalVariable(name: "ret", scope: !5520, file: !5322, line: 103, type: !61)
!5526 = !DILocation(line: 103, column: 7, scope: !5520)
!5527 = !DILocation(line: 105, column: 20, scope: !5520)
!5528 = !DILocation(line: 105, column: 37, scope: !5520)
!5529 = !DILocation(line: 106, column: 18, scope: !5520)
!5530 = !DILocation(line: 106, column: 26, scope: !5520)
!5531 = !DILocation(line: 105, column: 9, scope: !5520)
!5532 = !DILocation(line: 105, column: 7, scope: !5520)
!5533 = !DILocation(line: 108, column: 7, scope: !5534)
!5534 = distinct !DILexicalBlock(scope: !5520, file: !5322, line: 108, column: 7)
!5535 = !DILocation(line: 108, column: 11, scope: !5534)
!5536 = !DILocation(line: 108, column: 7, scope: !5520)
!5537 = !DILocation(line: 109, column: 4, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5534, file: !5322, line: 108, column: 17)
!5539 = !DILocation(line: 112, column: 7, scope: !5540)
!5540 = distinct !DILexicalBlock(scope: !5520, file: !5322, line: 112, column: 7)
!5541 = !DILocation(line: 112, column: 14, scope: !5540)
!5542 = !DILocation(line: 112, column: 25, scope: !5540)
!5543 = !DILocation(line: 112, column: 28, scope: !5540)
!5544 = !DILocation(line: 112, column: 41, scope: !5540)
!5545 = !DILocation(line: 112, column: 38, scope: !5540)
!5546 = !DILocation(line: 112, column: 7, scope: !5520)
!5547 = !DILocation(line: 113, column: 4, scope: !5548)
!5548 = distinct !DILexicalBlock(scope: !5540, file: !5322, line: 112, column: 52)
!5549 = !DILocation(line: 116, column: 22, scope: !5520)
!5550 = !DILocation(line: 116, column: 19, scope: !5520)
!5551 = !DILocation(line: 117, column: 7, scope: !5552)
!5552 = distinct !DILexicalBlock(scope: !5520, file: !5322, line: 117, column: 7)
!5553 = !DILocation(line: 117, column: 26, scope: !5552)
!5554 = !DILocation(line: 117, column: 23, scope: !5552)
!5555 = !DILocation(line: 117, column: 7, scope: !5520)
!5556 = !DILocation(line: 118, column: 4, scope: !5557)
!5557 = distinct !DILexicalBlock(scope: !5552, file: !5322, line: 117, column: 43)
!5558 = !DILocation(line: 121, column: 7, scope: !5559)
!5559 = distinct !DILexicalBlock(scope: !5520, file: !5322, line: 121, column: 7)
!5560 = !DILocation(line: 121, column: 25, scope: !5559)
!5561 = !DILocation(line: 121, column: 23, scope: !5559)
!5562 = !DILocation(line: 121, column: 7, scope: !5520)
!5563 = !DILocation(line: 122, column: 4, scope: !5564)
!5564 = distinct !DILexicalBlock(scope: !5559, file: !5322, line: 121, column: 42)
!5565 = !DILocation(line: 124, column: 2, scope: !5520)
!5566 = !DILocation(line: 100, column: 49, scope: !5512)
!5567 = !DILocation(line: 100, column: 2, scope: !5512)
!5568 = distinct !{!5568, !5518, !5569}
!5569 = !DILocation(line: 124, column: 2, scope: !5509)
!5570 = !DILocation(line: 126, column: 27, scope: !5444)
!5571 = !DILocation(line: 126, column: 6, scope: !5444)
!5572 = !DILocation(line: 126, column: 4, scope: !5444)
!5573 = !DILocation(line: 127, column: 10, scope: !5444)
!5574 = !DILocation(line: 127, column: 3, scope: !5444)
!5575 = !DILocation(line: 127, column: 8, scope: !5444)
!5576 = !DILocation(line: 128, column: 6, scope: !5577)
!5577 = distinct !DILexicalBlock(scope: !5444, file: !5322, line: 128, column: 6)
!5578 = !DILocation(line: 128, column: 23, scope: !5577)
!5579 = !DILocation(line: 128, column: 6, scope: !5444)
!5580 = !DILocation(line: 129, column: 7, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5582, file: !5322, line: 129, column: 7)
!5582 = distinct !DILexicalBlock(scope: !5577, file: !5322, line: 128, column: 28)
!5583 = !DILocation(line: 129, column: 7, scope: !5582)
!5584 = !DILocation(line: 130, column: 4, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5581, file: !5322, line: 129, column: 30)
!5586 = !DILocation(line: 133, column: 3, scope: !5585)
!5587 = !DILocation(line: 134, column: 4, scope: !5588)
!5588 = distinct !DILexicalBlock(scope: !5581, file: !5322, line: 133, column: 10)
!5589 = !DILocation(line: 138, column: 3, scope: !5582)
!5590 = !DILocation(line: 140, column: 2, scope: !5582)
!5591 = !DILocation(line: 141, column: 2, scope: !5444)
!5592 = !DILocation(line: 142, column: 1, scope: !5444)
!5593 = distinct !DISubprogram(name: "k_msgq_put", scope: !765, file: !765, line: 815, type: !5594, scopeLine: 816, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5594 = !DISubroutineType(types: !5595)
!5595 = !{!61, !5596, !802, !5609}
!5596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5597, size: 32)
!5597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_msgq", file: !6, line: 3848, size: 352, elements: !5598)
!5598 = !{!5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5608}
!5599 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5597, file: !6, line: 3850, baseType: !5463, size: 64)
!5600 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !5597, file: !6, line: 3852, baseType: !5456, size: 32, offset: 64)
!5601 = !DIDerivedType(tag: DW_TAG_member, name: "msg_size", scope: !5597, file: !6, line: 3854, baseType: !79, size: 32, offset: 96)
!5602 = !DIDerivedType(tag: DW_TAG_member, name: "max_msgs", scope: !5597, file: !6, line: 3856, baseType: !58, size: 32, offset: 128)
!5603 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_start", scope: !5597, file: !6, line: 3858, baseType: !429, size: 32, offset: 160)
!5604 = !DIDerivedType(tag: DW_TAG_member, name: "buffer_end", scope: !5597, file: !6, line: 3860, baseType: !429, size: 32, offset: 192)
!5605 = !DIDerivedType(tag: DW_TAG_member, name: "read_ptr", scope: !5597, file: !6, line: 3862, baseType: !429, size: 32, offset: 224)
!5606 = !DIDerivedType(tag: DW_TAG_member, name: "write_ptr", scope: !5597, file: !6, line: 3864, baseType: !429, size: 32, offset: 256)
!5607 = !DIDerivedType(tag: DW_TAG_member, name: "used_msgs", scope: !5597, file: !6, line: 3866, baseType: !58, size: 32, offset: 288)
!5608 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !5597, file: !6, line: 3872, baseType: !161, size: 8, offset: 320)
!5609 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !5610)
!5610 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !5611)
!5611 = !{!5612}
!5612 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !5610, file: !54, line: 68, baseType: !53, size: 64)
!5613 = !DILocalVariable(name: "msgq", arg: 1, scope: !5593, file: !765, line: 815, type: !5596)
!5614 = !DILocation(line: 815, column: 64, scope: !5593)
!5615 = !DILocalVariable(name: "data", arg: 2, scope: !5593, file: !765, line: 815, type: !802)
!5616 = !DILocation(line: 815, column: 83, scope: !5593)
!5617 = !DILocalVariable(name: "timeout", arg: 3, scope: !5593, file: !765, line: 815, type: !5609)
!5618 = !DILocation(line: 815, column: 101, scope: !5593)
!5619 = !DILocation(line: 824, column: 2, scope: !5593)
!5620 = !DILocation(line: 824, column: 2, scope: !5621)
!5621 = distinct !DILexicalBlock(scope: !5593, file: !765, line: 824, column: 2)
!5622 = !{i32 -2141850908}
!5623 = !DILocation(line: 825, column: 27, scope: !5593)
!5624 = !DILocation(line: 825, column: 33, scope: !5593)
!5625 = !DILocation(line: 825, column: 9, scope: !5593)
!5626 = !DILocation(line: 825, column: 2, scope: !5593)
!5627 = distinct !DISubprogram(name: "k_sem_take", scope: !765, file: !765, line: 746, type: !5628, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5628 = !DISubroutineType(types: !5629)
!5629 = !{!61, !5630, !5609}
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5631, size: 32)
!5631 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !5632)
!5632 = !{!5633, !5634, !5635}
!5633 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !5631, file: !6, line: 3705, baseType: !5463, size: 64)
!5634 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !5631, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!5635 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !5631, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!5636 = !DILocalVariable(name: "sem", arg: 1, scope: !5627, file: !765, line: 746, type: !5630)
!5637 = !DILocation(line: 746, column: 63, scope: !5627)
!5638 = !DILocalVariable(name: "timeout", arg: 2, scope: !5627, file: !765, line: 746, type: !5609)
!5639 = !DILocation(line: 746, column: 80, scope: !5627)
!5640 = !DILocation(line: 755, column: 2, scope: !5627)
!5641 = !DILocation(line: 755, column: 2, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5627, file: !765, line: 755, column: 2)
!5643 = !{i32 -2141851248}
!5644 = !DILocation(line: 756, column: 27, scope: !5627)
!5645 = !DILocation(line: 756, column: 9, scope: !5627)
!5646 = !DILocation(line: 756, column: 2, scope: !5627)
!5647 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5648 = !DILocalVariable(name: "et", scope: !5647, file: !573, line: 177, type: !58)
!5649 = !DILocation(line: 177, column: 11, scope: !5647)
!5650 = !DILocation(line: 179, column: 2, scope: !5647)
!5651 = !DILocation(line: 180, column: 7, scope: !5647)
!5652 = !DILocation(line: 180, column: 5, scope: !5647)
!5653 = !DILocation(line: 181, column: 9, scope: !5647)
!5654 = !DILocation(line: 181, column: 2, scope: !5647)
!5655 = distinct !DISubprogram(name: "k_pipe_get", scope: !765, file: !765, line: 944, type: !5656, scopeLine: 945, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5656 = !DISubroutineType(types: !5657)
!5657 = !{!61, !5447, !60, !79, !4879, !79, !5609}
!5658 = !DILocalVariable(name: "pipe", arg: 1, scope: !5655, file: !765, line: 944, type: !5447)
!5659 = !DILocation(line: 944, column: 64, scope: !5655)
!5660 = !DILocalVariable(name: "data", arg: 2, scope: !5655, file: !765, line: 944, type: !60)
!5661 = !DILocation(line: 944, column: 77, scope: !5655)
!5662 = !DILocalVariable(name: "bytes_to_read", arg: 3, scope: !5655, file: !765, line: 944, type: !79)
!5663 = !DILocation(line: 944, column: 90, scope: !5655)
!5664 = !DILocalVariable(name: "bytes_read", arg: 4, scope: !5655, file: !765, line: 944, type: !4879)
!5665 = !DILocation(line: 944, column: 114, scope: !5655)
!5666 = !DILocalVariable(name: "min_xfer", arg: 5, scope: !5655, file: !765, line: 944, type: !79)
!5667 = !DILocation(line: 944, column: 133, scope: !5655)
!5668 = !DILocalVariable(name: "timeout", arg: 6, scope: !5655, file: !765, line: 944, type: !5609)
!5669 = !DILocation(line: 944, column: 155, scope: !5655)
!5670 = !DILocation(line: 957, column: 2, scope: !5655)
!5671 = !DILocation(line: 957, column: 2, scope: !5672)
!5672 = distinct !DILexicalBlock(scope: !5655, file: !765, line: 957, column: 2)
!5673 = !{i32 -2141850296}
!5674 = !DILocation(line: 958, column: 27, scope: !5655)
!5675 = !DILocation(line: 958, column: 33, scope: !5655)
!5676 = !DILocation(line: 958, column: 39, scope: !5655)
!5677 = !DILocation(line: 958, column: 54, scope: !5655)
!5678 = !DILocation(line: 958, column: 66, scope: !5655)
!5679 = !DILocation(line: 958, column: 9, scope: !5655)
!5680 = !DILocation(line: 958, column: 2, scope: !5655)
!5681 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5682 = !DILocalVariable(name: "ts", arg: 1, scope: !5681, file: !63, line: 33, type: !58)
!5683 = !DILocation(line: 33, column: 54, scope: !5681)
!5684 = !DILocalVariable(name: "t", scope: !5681, file: !63, line: 35, type: !58)
!5685 = !DILocation(line: 35, column: 11, scope: !5681)
!5686 = !DILocation(line: 38, column: 2, scope: !5681)
!5687 = !DILocation(line: 40, column: 6, scope: !5681)
!5688 = !DILocation(line: 40, column: 4, scope: !5681)
!5689 = !DILocalVariable(name: "res", scope: !5681, file: !63, line: 41, type: !58)
!5690 = !DILocation(line: 41, column: 11, scope: !5681)
!5691 = !DILocation(line: 41, column: 18, scope: !5681)
!5692 = !DILocation(line: 41, column: 23, scope: !5681)
!5693 = !DILocation(line: 41, column: 20, scope: !5681)
!5694 = !DILocation(line: 41, column: 17, scope: !5681)
!5695 = !DILocation(line: 41, column: 30, scope: !5681)
!5696 = !DILocation(line: 41, column: 34, scope: !5681)
!5697 = !DILocation(line: 41, column: 32, scope: !5681)
!5698 = !DILocation(line: 41, column: 53, scope: !5681)
!5699 = !DILocation(line: 41, column: 51, scope: !5681)
!5700 = !DILocation(line: 41, column: 58, scope: !5681)
!5701 = !DILocation(line: 41, column: 56, scope: !5681)
!5702 = !DILocation(line: 43, column: 6, scope: !5703)
!5703 = distinct !DILexicalBlock(scope: !5681, file: !63, line: 43, column: 6)
!5704 = !DILocation(line: 43, column: 9, scope: !5703)
!5705 = !DILocation(line: 43, column: 6, scope: !5681)
!5706 = !DILocation(line: 44, column: 10, scope: !5707)
!5707 = distinct !DILexicalBlock(scope: !5703, file: !63, line: 43, column: 14)
!5708 = !DILocation(line: 44, column: 7, scope: !5707)
!5709 = !DILocation(line: 45, column: 2, scope: !5707)
!5710 = !DILocation(line: 46, column: 9, scope: !5681)
!5711 = !DILocation(line: 46, column: 2, scope: !5681)
!5712 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5713 = !DILocalVariable(name: "t", arg: 1, scope: !5714, file: !856, line: 78, type: !69)
!5714 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5715 = !DILocation(line: 78, column: 63, scope: !5714, inlinedAt: !5716)
!5716 = distinct !DILocation(line: 904, column: 9, scope: !5712)
!5717 = !DILocalVariable(name: "from_hz", arg: 2, scope: !5714, file: !856, line: 78, type: !58)
!5718 = !DILocation(line: 78, column: 75, scope: !5714, inlinedAt: !5716)
!5719 = !DILocalVariable(name: "to_hz", arg: 3, scope: !5714, file: !856, line: 79, type: !58)
!5720 = !DILocation(line: 79, column: 18, scope: !5714, inlinedAt: !5716)
!5721 = !DILocalVariable(name: "const_hz", arg: 4, scope: !5714, file: !856, line: 79, type: !863)
!5722 = !DILocation(line: 79, column: 30, scope: !5714, inlinedAt: !5716)
!5723 = !DILocalVariable(name: "result32", arg: 5, scope: !5714, file: !856, line: 80, type: !863)
!5724 = !DILocation(line: 80, column: 14, scope: !5714, inlinedAt: !5716)
!5725 = !DILocalVariable(name: "round_up", arg: 6, scope: !5714, file: !856, line: 80, type: !863)
!5726 = !DILocation(line: 80, column: 29, scope: !5714, inlinedAt: !5716)
!5727 = !DILocalVariable(name: "round_off", arg: 7, scope: !5714, file: !856, line: 81, type: !863)
!5728 = !DILocation(line: 81, column: 14, scope: !5714, inlinedAt: !5716)
!5729 = !DILocalVariable(name: "mul_ratio", scope: !5714, file: !856, line: 84, type: !863)
!5730 = !DILocation(line: 84, column: 7, scope: !5714, inlinedAt: !5716)
!5731 = !DILocalVariable(name: "div_ratio", scope: !5714, file: !856, line: 86, type: !863)
!5732 = !DILocation(line: 86, column: 7, scope: !5714, inlinedAt: !5716)
!5733 = !DILocalVariable(name: "off", scope: !5714, file: !856, line: 93, type: !69)
!5734 = !DILocation(line: 93, column: 11, scope: !5714, inlinedAt: !5716)
!5735 = !DILocalVariable(name: "rdivisor", scope: !5736, file: !856, line: 96, type: !58)
!5736 = distinct !DILexicalBlock(scope: !5737, file: !856, line: 95, column: 18)
!5737 = distinct !DILexicalBlock(scope: !5714, file: !856, line: 95, column: 6)
!5738 = !DILocation(line: 96, column: 12, scope: !5736, inlinedAt: !5716)
!5739 = !DILocalVariable(name: "t", arg: 1, scope: !5712, file: !856, line: 901, type: !69)
!5740 = !DILocation(line: 901, column: 68, scope: !5712)
!5741 = !DILocation(line: 904, column: 17, scope: !5712)
!5742 = !DILocation(line: 904, column: 20, scope: !5712)
!5743 = !DILocation(line: 84, column: 19, scope: !5714, inlinedAt: !5716)
!5744 = !DILocation(line: 84, column: 28, scope: !5714, inlinedAt: !5716)
!5745 = !DILocation(line: 85, column: 4, scope: !5714, inlinedAt: !5716)
!5746 = !DILocation(line: 85, column: 12, scope: !5714, inlinedAt: !5716)
!5747 = !DILocation(line: 85, column: 10, scope: !5714, inlinedAt: !5716)
!5748 = !DILocation(line: 85, column: 21, scope: !5714, inlinedAt: !5716)
!5749 = !DILocation(line: 85, column: 26, scope: !5714, inlinedAt: !5716)
!5750 = !DILocation(line: 85, column: 34, scope: !5714, inlinedAt: !5716)
!5751 = !DILocation(line: 85, column: 32, scope: !5714, inlinedAt: !5716)
!5752 = !DILocation(line: 85, column: 43, scope: !5714, inlinedAt: !5716)
!5753 = !DILocation(line: 0, scope: !5714, inlinedAt: !5716)
!5754 = !DILocation(line: 86, column: 19, scope: !5714, inlinedAt: !5716)
!5755 = !DILocation(line: 86, column: 28, scope: !5714, inlinedAt: !5716)
!5756 = !DILocation(line: 87, column: 4, scope: !5714, inlinedAt: !5716)
!5757 = !DILocation(line: 87, column: 14, scope: !5714, inlinedAt: !5716)
!5758 = !DILocation(line: 87, column: 12, scope: !5714, inlinedAt: !5716)
!5759 = !DILocation(line: 87, column: 21, scope: !5714, inlinedAt: !5716)
!5760 = !DILocation(line: 87, column: 26, scope: !5714, inlinedAt: !5716)
!5761 = !DILocation(line: 87, column: 36, scope: !5714, inlinedAt: !5716)
!5762 = !DILocation(line: 87, column: 34, scope: !5714, inlinedAt: !5716)
!5763 = !DILocation(line: 87, column: 43, scope: !5714, inlinedAt: !5716)
!5764 = !DILocation(line: 89, column: 6, scope: !5765, inlinedAt: !5716)
!5765 = distinct !DILexicalBlock(scope: !5714, file: !856, line: 89, column: 6)
!5766 = !DILocation(line: 89, column: 17, scope: !5765, inlinedAt: !5716)
!5767 = !DILocation(line: 89, column: 14, scope: !5765, inlinedAt: !5716)
!5768 = !DILocation(line: 89, column: 6, scope: !5714, inlinedAt: !5716)
!5769 = !DILocation(line: 90, column: 10, scope: !5770, inlinedAt: !5716)
!5770 = distinct !DILexicalBlock(scope: !5765, file: !856, line: 89, column: 24)
!5771 = !DILocation(line: 90, column: 32, scope: !5770, inlinedAt: !5716)
!5772 = !DILocation(line: 90, column: 22, scope: !5770, inlinedAt: !5716)
!5773 = !DILocation(line: 90, column: 21, scope: !5770, inlinedAt: !5716)
!5774 = !DILocation(line: 90, column: 37, scope: !5770, inlinedAt: !5716)
!5775 = !DILocation(line: 90, column: 3, scope: !5770, inlinedAt: !5716)
!5776 = !DILocation(line: 95, column: 7, scope: !5737, inlinedAt: !5716)
!5777 = !DILocation(line: 95, column: 6, scope: !5714, inlinedAt: !5716)
!5778 = !DILocation(line: 96, column: 23, scope: !5736, inlinedAt: !5716)
!5779 = !DILocation(line: 96, column: 36, scope: !5736, inlinedAt: !5716)
!5780 = !DILocation(line: 96, column: 46, scope: !5736, inlinedAt: !5716)
!5781 = !DILocation(line: 96, column: 44, scope: !5736, inlinedAt: !5716)
!5782 = !DILocation(line: 96, column: 55, scope: !5736, inlinedAt: !5716)
!5783 = !DILocation(line: 98, column: 7, scope: !5784, inlinedAt: !5716)
!5784 = distinct !DILexicalBlock(scope: !5736, file: !856, line: 98, column: 7)
!5785 = !DILocation(line: 98, column: 7, scope: !5736, inlinedAt: !5716)
!5786 = !DILocation(line: 99, column: 10, scope: !5787, inlinedAt: !5716)
!5787 = distinct !DILexicalBlock(scope: !5784, file: !856, line: 98, column: 17)
!5788 = !DILocation(line: 99, column: 19, scope: !5787, inlinedAt: !5716)
!5789 = !DILocation(line: 99, column: 8, scope: !5787, inlinedAt: !5716)
!5790 = !DILocation(line: 100, column: 3, scope: !5787, inlinedAt: !5716)
!5791 = !DILocation(line: 100, column: 14, scope: !5792, inlinedAt: !5716)
!5792 = distinct !DILexicalBlock(scope: !5784, file: !856, line: 100, column: 14)
!5793 = !DILocation(line: 100, column: 14, scope: !5784, inlinedAt: !5716)
!5794 = !DILocation(line: 101, column: 10, scope: !5795, inlinedAt: !5716)
!5795 = distinct !DILexicalBlock(scope: !5792, file: !856, line: 100, column: 25)
!5796 = !DILocation(line: 101, column: 19, scope: !5795, inlinedAt: !5716)
!5797 = !DILocation(line: 101, column: 8, scope: !5795, inlinedAt: !5716)
!5798 = !DILocation(line: 102, column: 3, scope: !5795, inlinedAt: !5716)
!5799 = !DILocation(line: 103, column: 2, scope: !5736, inlinedAt: !5716)
!5800 = !DILocation(line: 110, column: 6, scope: !5801, inlinedAt: !5716)
!5801 = distinct !DILexicalBlock(scope: !5714, file: !856, line: 110, column: 6)
!5802 = !DILocation(line: 110, column: 6, scope: !5714, inlinedAt: !5716)
!5803 = !DILocation(line: 111, column: 8, scope: !5804, inlinedAt: !5716)
!5804 = distinct !DILexicalBlock(scope: !5801, file: !856, line: 110, column: 17)
!5805 = !DILocation(line: 111, column: 5, scope: !5804, inlinedAt: !5716)
!5806 = !DILocation(line: 112, column: 7, scope: !5807, inlinedAt: !5716)
!5807 = distinct !DILexicalBlock(scope: !5804, file: !856, line: 112, column: 7)
!5808 = !DILocation(line: 112, column: 16, scope: !5807, inlinedAt: !5716)
!5809 = !DILocation(line: 112, column: 20, scope: !5807, inlinedAt: !5716)
!5810 = !DILocation(line: 112, column: 22, scope: !5807, inlinedAt: !5716)
!5811 = !DILocation(line: 112, column: 7, scope: !5804, inlinedAt: !5716)
!5812 = !DILocation(line: 113, column: 22, scope: !5813, inlinedAt: !5716)
!5813 = distinct !DILexicalBlock(scope: !5807, file: !856, line: 112, column: 36)
!5814 = !DILocation(line: 113, column: 12, scope: !5813, inlinedAt: !5716)
!5815 = !DILocation(line: 113, column: 28, scope: !5813, inlinedAt: !5716)
!5816 = !DILocation(line: 113, column: 38, scope: !5813, inlinedAt: !5716)
!5817 = !DILocation(line: 113, column: 36, scope: !5813, inlinedAt: !5716)
!5818 = !DILocation(line: 113, column: 25, scope: !5813, inlinedAt: !5716)
!5819 = !DILocation(line: 113, column: 11, scope: !5813, inlinedAt: !5716)
!5820 = !DILocation(line: 113, column: 4, scope: !5813, inlinedAt: !5716)
!5821 = !DILocation(line: 115, column: 11, scope: !5822, inlinedAt: !5716)
!5822 = distinct !DILexicalBlock(scope: !5807, file: !856, line: 114, column: 10)
!5823 = !DILocation(line: 115, column: 16, scope: !5822, inlinedAt: !5716)
!5824 = !DILocation(line: 115, column: 26, scope: !5822, inlinedAt: !5716)
!5825 = !DILocation(line: 115, column: 24, scope: !5822, inlinedAt: !5716)
!5826 = !DILocation(line: 115, column: 15, scope: !5822, inlinedAt: !5716)
!5827 = !DILocation(line: 115, column: 13, scope: !5822, inlinedAt: !5716)
!5828 = !DILocation(line: 115, column: 4, scope: !5822, inlinedAt: !5716)
!5829 = !DILocation(line: 117, column: 13, scope: !5830, inlinedAt: !5716)
!5830 = distinct !DILexicalBlock(scope: !5801, file: !856, line: 117, column: 13)
!5831 = !DILocation(line: 117, column: 13, scope: !5801, inlinedAt: !5716)
!5832 = !DILocation(line: 118, column: 7, scope: !5833, inlinedAt: !5716)
!5833 = distinct !DILexicalBlock(scope: !5834, file: !856, line: 118, column: 7)
!5834 = distinct !DILexicalBlock(scope: !5830, file: !856, line: 117, column: 24)
!5835 = !DILocation(line: 118, column: 7, scope: !5834, inlinedAt: !5716)
!5836 = !DILocation(line: 119, column: 22, scope: !5837, inlinedAt: !5716)
!5837 = distinct !DILexicalBlock(scope: !5833, file: !856, line: 118, column: 17)
!5838 = !DILocation(line: 119, column: 12, scope: !5837, inlinedAt: !5716)
!5839 = !DILocation(line: 119, column: 28, scope: !5837, inlinedAt: !5716)
!5840 = !DILocation(line: 119, column: 36, scope: !5837, inlinedAt: !5716)
!5841 = !DILocation(line: 119, column: 34, scope: !5837, inlinedAt: !5716)
!5842 = !DILocation(line: 119, column: 25, scope: !5837, inlinedAt: !5716)
!5843 = !DILocation(line: 119, column: 11, scope: !5837, inlinedAt: !5716)
!5844 = !DILocation(line: 119, column: 4, scope: !5837, inlinedAt: !5716)
!5845 = !DILocation(line: 121, column: 11, scope: !5846, inlinedAt: !5716)
!5846 = distinct !DILexicalBlock(scope: !5833, file: !856, line: 120, column: 10)
!5847 = !DILocation(line: 121, column: 16, scope: !5846, inlinedAt: !5716)
!5848 = !DILocation(line: 121, column: 24, scope: !5846, inlinedAt: !5716)
!5849 = !DILocation(line: 121, column: 22, scope: !5846, inlinedAt: !5716)
!5850 = !DILocation(line: 121, column: 15, scope: !5846, inlinedAt: !5716)
!5851 = !DILocation(line: 121, column: 13, scope: !5846, inlinedAt: !5716)
!5852 = !DILocation(line: 121, column: 4, scope: !5846, inlinedAt: !5716)
!5853 = !DILocation(line: 124, column: 7, scope: !5854, inlinedAt: !5716)
!5854 = distinct !DILexicalBlock(scope: !5855, file: !856, line: 124, column: 7)
!5855 = distinct !DILexicalBlock(scope: !5830, file: !856, line: 123, column: 9)
!5856 = !DILocation(line: 124, column: 7, scope: !5855, inlinedAt: !5716)
!5857 = !DILocation(line: 125, column: 23, scope: !5858, inlinedAt: !5716)
!5858 = distinct !DILexicalBlock(scope: !5854, file: !856, line: 124, column: 17)
!5859 = !DILocation(line: 125, column: 27, scope: !5858, inlinedAt: !5716)
!5860 = !DILocation(line: 125, column: 25, scope: !5858, inlinedAt: !5716)
!5861 = !DILocation(line: 125, column: 35, scope: !5858, inlinedAt: !5716)
!5862 = !DILocation(line: 125, column: 33, scope: !5858, inlinedAt: !5716)
!5863 = !DILocation(line: 125, column: 42, scope: !5858, inlinedAt: !5716)
!5864 = !DILocation(line: 125, column: 40, scope: !5858, inlinedAt: !5716)
!5865 = !DILocation(line: 125, column: 11, scope: !5858, inlinedAt: !5716)
!5866 = !DILocation(line: 125, column: 4, scope: !5858, inlinedAt: !5716)
!5867 = !DILocation(line: 127, column: 12, scope: !5868, inlinedAt: !5716)
!5868 = distinct !DILexicalBlock(scope: !5854, file: !856, line: 126, column: 10)
!5869 = !DILocation(line: 127, column: 16, scope: !5868, inlinedAt: !5716)
!5870 = !DILocation(line: 127, column: 14, scope: !5868, inlinedAt: !5716)
!5871 = !DILocation(line: 127, column: 24, scope: !5868, inlinedAt: !5716)
!5872 = !DILocation(line: 127, column: 22, scope: !5868, inlinedAt: !5716)
!5873 = !DILocation(line: 127, column: 31, scope: !5868, inlinedAt: !5716)
!5874 = !DILocation(line: 127, column: 29, scope: !5868, inlinedAt: !5716)
!5875 = !DILocation(line: 127, column: 4, scope: !5868, inlinedAt: !5716)
!5876 = !DILocation(line: 130, column: 1, scope: !5714, inlinedAt: !5716)
!5877 = !DILocation(line: 904, column: 2, scope: !5712)
!5878 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5879 = !DILocation(line: 82, column: 20, scope: !5878)
!5880 = !DILocation(line: 82, column: 18, scope: !5878)
!5881 = !DILocation(line: 90, column: 6, scope: !5882)
!5882 = distinct !DILexicalBlock(scope: !5878, file: !63, line: 90, column: 6)
!5883 = !DILocation(line: 90, column: 22, scope: !5882)
!5884 = !DILocation(line: 90, column: 6, scope: !5878)
!5885 = !DILocation(line: 91, column: 3, scope: !5886)
!5886 = distinct !DILexicalBlock(scope: !5882, file: !63, line: 90, column: 39)
!5887 = !DILocation(line: 93, column: 2, scope: !5878)
!5888 = !DILocation(line: 94, column: 1, scope: !5878)
!5889 = distinct !DISubprogram(name: "high_timer_overflow", scope: !63, file: !63, line: 102, type: !1073, scopeLine: 103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5890 = !DILocation(line: 107, column: 6, scope: !5891)
!5891 = distinct !DILexicalBlock(scope: !5889, file: !63, line: 107, column: 6)
!5892 = !DILocation(line: 107, column: 26, scope: !5891)
!5893 = !DILocation(line: 107, column: 56, scope: !5891)
!5894 = !DILocation(line: 107, column: 22, scope: !5891)
!5895 = !DILocation(line: 107, column: 6, scope: !5889)
!5896 = !DILocation(line: 109, column: 3, scope: !5897)
!5897 = distinct !DILexicalBlock(scope: !5891, file: !63, line: 108, column: 39)
!5898 = !DILocation(line: 111, column: 2, scope: !5889)
!5899 = !DILocation(line: 112, column: 1, scope: !5889)
!5900 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5901 = !DILocalVariable(name: "reftime", arg: 1, scope: !5900, file: !6, line: 2133, type: !1088)
!5902 = !DILocation(line: 2133, column: 47, scope: !5900)
!5903 = !DILocalVariable(name: "uptime", scope: !5900, file: !6, line: 2135, type: !55)
!5904 = !DILocation(line: 2135, column: 10, scope: !5900)
!5905 = !DILocalVariable(name: "delta", scope: !5900, file: !6, line: 2135, type: !55)
!5906 = !DILocation(line: 2135, column: 18, scope: !5900)
!5907 = !DILocation(line: 2137, column: 11, scope: !5900)
!5908 = !DILocation(line: 2137, column: 9, scope: !5900)
!5909 = !DILocation(line: 2138, column: 10, scope: !5900)
!5910 = !DILocation(line: 2138, column: 20, scope: !5900)
!5911 = !DILocation(line: 2138, column: 19, scope: !5900)
!5912 = !DILocation(line: 2138, column: 17, scope: !5900)
!5913 = !DILocation(line: 2138, column: 8, scope: !5900)
!5914 = !DILocation(line: 2139, column: 13, scope: !5900)
!5915 = !DILocation(line: 2139, column: 3, scope: !5900)
!5916 = !DILocation(line: 2139, column: 11, scope: !5900)
!5917 = !DILocation(line: 2141, column: 9, scope: !5900)
!5918 = !DILocation(line: 2141, column: 2, scope: !5900)
!5919 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5920 = !DILocation(line: 2061, column: 31, scope: !5919)
!5921 = !DILocation(line: 2061, column: 9, scope: !5919)
!5922 = !DILocation(line: 2061, column: 2, scope: !5919)
!5923 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5924 = !DILocation(line: 509, column: 2, scope: !5923)
!5925 = !DILocation(line: 509, column: 2, scope: !5926)
!5926 = distinct !DILexicalBlock(scope: !5923, file: !765, line: 509, column: 2)
!5927 = !{i32 -2141852484}
!5928 = !DILocation(line: 510, column: 9, scope: !5923)
!5929 = !DILocation(line: 510, column: 2, scope: !5923)
!5930 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!5931 = !DILocation(line: 78, column: 63, scope: !5714, inlinedAt: !5932)
!5932 = distinct !DILocation(line: 1072, column: 9, scope: !5930)
!5933 = !DILocation(line: 78, column: 75, scope: !5714, inlinedAt: !5932)
!5934 = !DILocation(line: 79, column: 18, scope: !5714, inlinedAt: !5932)
!5935 = !DILocation(line: 79, column: 30, scope: !5714, inlinedAt: !5932)
!5936 = !DILocation(line: 80, column: 14, scope: !5714, inlinedAt: !5932)
!5937 = !DILocation(line: 80, column: 29, scope: !5714, inlinedAt: !5932)
!5938 = !DILocation(line: 81, column: 14, scope: !5714, inlinedAt: !5932)
!5939 = !DILocation(line: 84, column: 7, scope: !5714, inlinedAt: !5932)
!5940 = !DILocation(line: 86, column: 7, scope: !5714, inlinedAt: !5932)
!5941 = !DILocation(line: 93, column: 11, scope: !5714, inlinedAt: !5932)
!5942 = !DILocation(line: 96, column: 12, scope: !5736, inlinedAt: !5932)
!5943 = !DILocalVariable(name: "t", arg: 1, scope: !5930, file: !856, line: 1069, type: !69)
!5944 = !DILocation(line: 1069, column: 70, scope: !5930)
!5945 = !DILocation(line: 1072, column: 17, scope: !5930)
!5946 = !DILocation(line: 84, column: 19, scope: !5714, inlinedAt: !5932)
!5947 = !DILocation(line: 84, column: 28, scope: !5714, inlinedAt: !5932)
!5948 = !DILocation(line: 85, column: 4, scope: !5714, inlinedAt: !5932)
!5949 = !DILocation(line: 85, column: 12, scope: !5714, inlinedAt: !5932)
!5950 = !DILocation(line: 85, column: 10, scope: !5714, inlinedAt: !5932)
!5951 = !DILocation(line: 85, column: 21, scope: !5714, inlinedAt: !5932)
!5952 = !DILocation(line: 85, column: 26, scope: !5714, inlinedAt: !5932)
!5953 = !DILocation(line: 85, column: 34, scope: !5714, inlinedAt: !5932)
!5954 = !DILocation(line: 85, column: 32, scope: !5714, inlinedAt: !5932)
!5955 = !DILocation(line: 85, column: 43, scope: !5714, inlinedAt: !5932)
!5956 = !DILocation(line: 0, scope: !5714, inlinedAt: !5932)
!5957 = !DILocation(line: 86, column: 19, scope: !5714, inlinedAt: !5932)
!5958 = !DILocation(line: 86, column: 28, scope: !5714, inlinedAt: !5932)
!5959 = !DILocation(line: 87, column: 4, scope: !5714, inlinedAt: !5932)
!5960 = !DILocation(line: 87, column: 14, scope: !5714, inlinedAt: !5932)
!5961 = !DILocation(line: 87, column: 12, scope: !5714, inlinedAt: !5932)
!5962 = !DILocation(line: 87, column: 21, scope: !5714, inlinedAt: !5932)
!5963 = !DILocation(line: 87, column: 26, scope: !5714, inlinedAt: !5932)
!5964 = !DILocation(line: 87, column: 36, scope: !5714, inlinedAt: !5932)
!5965 = !DILocation(line: 87, column: 34, scope: !5714, inlinedAt: !5932)
!5966 = !DILocation(line: 87, column: 43, scope: !5714, inlinedAt: !5932)
!5967 = !DILocation(line: 89, column: 6, scope: !5765, inlinedAt: !5932)
!5968 = !DILocation(line: 89, column: 17, scope: !5765, inlinedAt: !5932)
!5969 = !DILocation(line: 89, column: 14, scope: !5765, inlinedAt: !5932)
!5970 = !DILocation(line: 89, column: 6, scope: !5714, inlinedAt: !5932)
!5971 = !DILocation(line: 90, column: 10, scope: !5770, inlinedAt: !5932)
!5972 = !DILocation(line: 90, column: 32, scope: !5770, inlinedAt: !5932)
!5973 = !DILocation(line: 90, column: 22, scope: !5770, inlinedAt: !5932)
!5974 = !DILocation(line: 90, column: 21, scope: !5770, inlinedAt: !5932)
!5975 = !DILocation(line: 90, column: 37, scope: !5770, inlinedAt: !5932)
!5976 = !DILocation(line: 90, column: 3, scope: !5770, inlinedAt: !5932)
!5977 = !DILocation(line: 95, column: 7, scope: !5737, inlinedAt: !5932)
!5978 = !DILocation(line: 95, column: 6, scope: !5714, inlinedAt: !5932)
!5979 = !DILocation(line: 96, column: 23, scope: !5736, inlinedAt: !5932)
!5980 = !DILocation(line: 96, column: 36, scope: !5736, inlinedAt: !5932)
!5981 = !DILocation(line: 96, column: 46, scope: !5736, inlinedAt: !5932)
!5982 = !DILocation(line: 96, column: 44, scope: !5736, inlinedAt: !5932)
!5983 = !DILocation(line: 96, column: 55, scope: !5736, inlinedAt: !5932)
!5984 = !DILocation(line: 98, column: 7, scope: !5784, inlinedAt: !5932)
!5985 = !DILocation(line: 98, column: 7, scope: !5736, inlinedAt: !5932)
!5986 = !DILocation(line: 99, column: 10, scope: !5787, inlinedAt: !5932)
!5987 = !DILocation(line: 99, column: 19, scope: !5787, inlinedAt: !5932)
!5988 = !DILocation(line: 99, column: 8, scope: !5787, inlinedAt: !5932)
!5989 = !DILocation(line: 100, column: 3, scope: !5787, inlinedAt: !5932)
!5990 = !DILocation(line: 100, column: 14, scope: !5792, inlinedAt: !5932)
!5991 = !DILocation(line: 100, column: 14, scope: !5784, inlinedAt: !5932)
!5992 = !DILocation(line: 101, column: 10, scope: !5795, inlinedAt: !5932)
!5993 = !DILocation(line: 101, column: 19, scope: !5795, inlinedAt: !5932)
!5994 = !DILocation(line: 101, column: 8, scope: !5795, inlinedAt: !5932)
!5995 = !DILocation(line: 102, column: 3, scope: !5795, inlinedAt: !5932)
!5996 = !DILocation(line: 103, column: 2, scope: !5736, inlinedAt: !5932)
!5997 = !DILocation(line: 110, column: 6, scope: !5801, inlinedAt: !5932)
!5998 = !DILocation(line: 110, column: 6, scope: !5714, inlinedAt: !5932)
!5999 = !DILocation(line: 111, column: 8, scope: !5804, inlinedAt: !5932)
!6000 = !DILocation(line: 111, column: 5, scope: !5804, inlinedAt: !5932)
!6001 = !DILocation(line: 112, column: 7, scope: !5807, inlinedAt: !5932)
!6002 = !DILocation(line: 112, column: 16, scope: !5807, inlinedAt: !5932)
!6003 = !DILocation(line: 112, column: 20, scope: !5807, inlinedAt: !5932)
!6004 = !DILocation(line: 112, column: 22, scope: !5807, inlinedAt: !5932)
!6005 = !DILocation(line: 112, column: 7, scope: !5804, inlinedAt: !5932)
!6006 = !DILocation(line: 113, column: 22, scope: !5813, inlinedAt: !5932)
!6007 = !DILocation(line: 113, column: 12, scope: !5813, inlinedAt: !5932)
!6008 = !DILocation(line: 113, column: 28, scope: !5813, inlinedAt: !5932)
!6009 = !DILocation(line: 113, column: 38, scope: !5813, inlinedAt: !5932)
!6010 = !DILocation(line: 113, column: 36, scope: !5813, inlinedAt: !5932)
!6011 = !DILocation(line: 113, column: 25, scope: !5813, inlinedAt: !5932)
!6012 = !DILocation(line: 113, column: 11, scope: !5813, inlinedAt: !5932)
!6013 = !DILocation(line: 113, column: 4, scope: !5813, inlinedAt: !5932)
!6014 = !DILocation(line: 115, column: 11, scope: !5822, inlinedAt: !5932)
!6015 = !DILocation(line: 115, column: 16, scope: !5822, inlinedAt: !5932)
!6016 = !DILocation(line: 115, column: 26, scope: !5822, inlinedAt: !5932)
!6017 = !DILocation(line: 115, column: 24, scope: !5822, inlinedAt: !5932)
!6018 = !DILocation(line: 115, column: 15, scope: !5822, inlinedAt: !5932)
!6019 = !DILocation(line: 115, column: 13, scope: !5822, inlinedAt: !5932)
!6020 = !DILocation(line: 115, column: 4, scope: !5822, inlinedAt: !5932)
!6021 = !DILocation(line: 117, column: 13, scope: !5830, inlinedAt: !5932)
!6022 = !DILocation(line: 117, column: 13, scope: !5801, inlinedAt: !5932)
!6023 = !DILocation(line: 118, column: 7, scope: !5833, inlinedAt: !5932)
!6024 = !DILocation(line: 118, column: 7, scope: !5834, inlinedAt: !5932)
!6025 = !DILocation(line: 119, column: 22, scope: !5837, inlinedAt: !5932)
!6026 = !DILocation(line: 119, column: 12, scope: !5837, inlinedAt: !5932)
!6027 = !DILocation(line: 119, column: 28, scope: !5837, inlinedAt: !5932)
!6028 = !DILocation(line: 119, column: 36, scope: !5837, inlinedAt: !5932)
!6029 = !DILocation(line: 119, column: 34, scope: !5837, inlinedAt: !5932)
!6030 = !DILocation(line: 119, column: 25, scope: !5837, inlinedAt: !5932)
!6031 = !DILocation(line: 119, column: 11, scope: !5837, inlinedAt: !5932)
!6032 = !DILocation(line: 119, column: 4, scope: !5837, inlinedAt: !5932)
!6033 = !DILocation(line: 121, column: 11, scope: !5846, inlinedAt: !5932)
!6034 = !DILocation(line: 121, column: 16, scope: !5846, inlinedAt: !5932)
!6035 = !DILocation(line: 121, column: 24, scope: !5846, inlinedAt: !5932)
!6036 = !DILocation(line: 121, column: 22, scope: !5846, inlinedAt: !5932)
!6037 = !DILocation(line: 121, column: 15, scope: !5846, inlinedAt: !5932)
!6038 = !DILocation(line: 121, column: 13, scope: !5846, inlinedAt: !5932)
!6039 = !DILocation(line: 121, column: 4, scope: !5846, inlinedAt: !5932)
!6040 = !DILocation(line: 124, column: 7, scope: !5854, inlinedAt: !5932)
!6041 = !DILocation(line: 124, column: 7, scope: !5855, inlinedAt: !5932)
!6042 = !DILocation(line: 125, column: 23, scope: !5858, inlinedAt: !5932)
!6043 = !DILocation(line: 125, column: 27, scope: !5858, inlinedAt: !5932)
!6044 = !DILocation(line: 125, column: 25, scope: !5858, inlinedAt: !5932)
!6045 = !DILocation(line: 125, column: 35, scope: !5858, inlinedAt: !5932)
!6046 = !DILocation(line: 125, column: 33, scope: !5858, inlinedAt: !5932)
!6047 = !DILocation(line: 125, column: 42, scope: !5858, inlinedAt: !5932)
!6048 = !DILocation(line: 125, column: 40, scope: !5858, inlinedAt: !5932)
!6049 = !DILocation(line: 125, column: 11, scope: !5858, inlinedAt: !5932)
!6050 = !DILocation(line: 125, column: 4, scope: !5858, inlinedAt: !5932)
!6051 = !DILocation(line: 127, column: 12, scope: !5868, inlinedAt: !5932)
!6052 = !DILocation(line: 127, column: 16, scope: !5868, inlinedAt: !5932)
!6053 = !DILocation(line: 127, column: 14, scope: !5868, inlinedAt: !5932)
!6054 = !DILocation(line: 127, column: 24, scope: !5868, inlinedAt: !5932)
!6055 = !DILocation(line: 127, column: 22, scope: !5868, inlinedAt: !5932)
!6056 = !DILocation(line: 127, column: 31, scope: !5868, inlinedAt: !5932)
!6057 = !DILocation(line: 127, column: 29, scope: !5868, inlinedAt: !5932)
!6058 = !DILocation(line: 127, column: 4, scope: !5868, inlinedAt: !5932)
!6059 = !DILocation(line: 130, column: 1, scope: !5714, inlinedAt: !5932)
!6060 = !DILocation(line: 1072, column: 2, scope: !5930)
!6061 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6062 = !DILocation(line: 55, column: 2, scope: !6061)
!6063 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6064 = !DILocation(line: 935, column: 3, scope: !6065, inlinedAt: !6066)
!6065 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6066 = distinct !DILocation(line: 31, column: 2, scope: !6063)
!6067 = !{i32 2222642}
!6068 = !DILocation(line: 32, column: 1, scope: !6063)
!6069 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6070 = !DILocation(line: 2174, column: 9, scope: !6069)
!6071 = !DILocation(line: 2174, column: 2, scope: !6069)
!6072 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6073 = !DILocation(line: 26, column: 9, scope: !6072)
!6074 = !DILocation(line: 26, column: 2, scope: !6072)
!6075 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6076 = !DILocation(line: 72, column: 18, scope: !6075)
!6077 = !DILocation(line: 74, column: 2, scope: !6075)
!6078 = !DILocation(line: 75, column: 20, scope: !6075)
!6079 = !DILocation(line: 75, column: 18, scope: !6075)
!6080 = !DILocation(line: 76, column: 1, scope: !6075)
!6081 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !6082, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !581, retainedNodes: !609)
!6082 = !DISubroutineType(types: !6083)
!6083 = !{!412, !5609}
!6084 = !DILocalVariable(name: "timeout", arg: 1, scope: !6081, file: !765, line: 117, type: !5609)
!6085 = !DILocation(line: 117, column: 61, scope: !6081)
!6086 = !DILocation(line: 126, column: 2, scope: !6081)
!6087 = !DILocation(line: 126, column: 2, scope: !6088)
!6088 = distinct !DILexicalBlock(scope: !6081, file: !765, line: 126, column: 2)
!6089 = !{i32 -2141854388}
!6090 = !DILocation(line: 127, column: 9, scope: !6081)
!6091 = !DILocation(line: 127, column: 2, scope: !6081)
!6092 = distinct !DISubprogram(name: "recvtask", scope: !590, file: !590, line: 33, type: !404, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !586, retainedNodes: !609)
!6093 = !DILocalVariable(name: "p1", arg: 1, scope: !6092, file: !590, line: 33, type: !60)
!6094 = !DILocation(line: 33, column: 21, scope: !6092)
!6095 = !DILocalVariable(name: "p2", arg: 2, scope: !6092, file: !590, line: 33, type: !60)
!6096 = !DILocation(line: 33, column: 31, scope: !6092)
!6097 = !DILocalVariable(name: "p3", arg: 3, scope: !6092, file: !590, line: 33, type: !60)
!6098 = !DILocation(line: 33, column: 41, scope: !6092)
!6099 = !DILocation(line: 37, column: 24, scope: !6092)
!6100 = !DILocation(line: 37, column: 2, scope: !6092)
!6101 = !DILocation(line: 38, column: 2, scope: !6092)
!6102 = !DILocation(line: 41, column: 24, scope: !6092)
!6103 = !DILocation(line: 41, column: 2, scope: !6092)
!6104 = !DILocation(line: 42, column: 2, scope: !6092)
!6105 = !DILocation(line: 45, column: 24, scope: !6092)
!6106 = !DILocation(line: 45, column: 2, scope: !6092)
!6107 = !DILocation(line: 46, column: 2, scope: !6092)
!6108 = !DILocation(line: 49, column: 24, scope: !6092)
!6109 = !DILocation(line: 49, column: 2, scope: !6092)
!6110 = !DILocation(line: 50, column: 2, scope: !6092)
!6111 = !DILocation(line: 52, column: 1, scope: !6092)
!6112 = distinct !DISubprogram(name: "k_sem_take", scope: !765, file: !765, line: 746, type: !6113, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !586, retainedNodes: !609)
!6113 = !DISubroutineType(types: !6114)
!6114 = !{!61, !6115, !6139}
!6115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6116, size: 32)
!6116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !6117)
!6117 = !{!6118, !6137, !6138}
!6118 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6116, file: !6, line: 3705, baseType: !6119, size: 64)
!6119 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !6120)
!6120 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !6121)
!6121 = !{!6122}
!6122 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6120, file: !99, line: 209, baseType: !6123, size: 64)
!6123 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !6124)
!6124 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !6125)
!6125 = !{!6126, !6132}
!6126 = !DIDerivedType(tag: DW_TAG_member, scope: !6124, file: !116, line: 32, baseType: !6127, size: 32)
!6127 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6124, file: !116, line: 32, size: 32, elements: !6128)
!6128 = !{!6129, !6131}
!6129 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6127, file: !116, line: 33, baseType: !6130, size: 32)
!6130 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6124, size: 32)
!6131 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6127, file: !116, line: 34, baseType: !6130, size: 32)
!6132 = !DIDerivedType(tag: DW_TAG_member, scope: !6124, file: !116, line: 36, baseType: !6133, size: 32, offset: 32)
!6133 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6124, file: !116, line: 36, size: 32, elements: !6134)
!6134 = !{!6135, !6136}
!6135 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6133, file: !116, line: 37, baseType: !6130, size: 32)
!6136 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6133, file: !116, line: 38, baseType: !6130, size: 32)
!6137 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6116, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!6138 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6116, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!6139 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !6140)
!6140 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !6141)
!6141 = !{!6142}
!6142 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6140, file: !54, line: 68, baseType: !53, size: 64)
!6143 = !DILocalVariable(name: "sem", arg: 1, scope: !6112, file: !765, line: 746, type: !6115)
!6144 = !DILocation(line: 746, column: 63, scope: !6112)
!6145 = !DILocalVariable(name: "timeout", arg: 2, scope: !6112, file: !765, line: 746, type: !6139)
!6146 = !DILocation(line: 746, column: 80, scope: !6112)
!6147 = !DILocation(line: 755, column: 2, scope: !6112)
!6148 = !DILocation(line: 755, column: 2, scope: !6149)
!6149 = distinct !DILexicalBlock(scope: !6112, file: !765, line: 755, column: 2)
!6150 = !{i32 -2141853273}
!6151 = !DILocation(line: 756, column: 27, scope: !6112)
!6152 = !DILocation(line: 756, column: 9, scope: !6112)
!6153 = !DILocation(line: 756, column: 2, scope: !6112)
!6154 = distinct !DISubprogram(name: "sema_test", scope: !6155, file: !6155, line: 20, type: !206, scopeLine: 21, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6155 = !DIFile(filename: "appl/Zephyr/app_kernel/src/sema_b.c", directory: "/home/kenny/ara")
!6156 = !DILocalVariable(name: "et", scope: !6154, file: !6155, line: 22, type: !58)
!6157 = !DILocation(line: 22, column: 11, scope: !6154)
!6158 = !DILocalVariable(name: "i", scope: !6154, file: !6155, line: 23, type: !61)
!6159 = !DILocation(line: 23, column: 6, scope: !6154)
!6160 = !DILocation(line: 25, column: 2, scope: !6154)
!6161 = !DILocation(line: 26, column: 7, scope: !6154)
!6162 = !DILocation(line: 26, column: 5, scope: !6154)
!6163 = !DILocation(line: 27, column: 9, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6154, file: !6155, line: 27, column: 2)
!6165 = !DILocation(line: 27, column: 7, scope: !6164)
!6166 = !DILocation(line: 27, column: 14, scope: !6167)
!6167 = distinct !DILexicalBlock(scope: !6164, file: !6155, line: 27, column: 2)
!6168 = !DILocation(line: 27, column: 16, scope: !6167)
!6169 = !DILocation(line: 27, column: 2, scope: !6164)
!6170 = !DILocation(line: 28, column: 4, scope: !6171)
!6171 = distinct !DILexicalBlock(scope: !6167, file: !6155, line: 27, column: 40)
!6172 = !DILocation(line: 29, column: 2, scope: !6171)
!6173 = !DILocation(line: 27, column: 36, scope: !6167)
!6174 = !DILocation(line: 27, column: 2, scope: !6167)
!6175 = distinct !{!6175, !6169, !6176}
!6176 = !DILocation(line: 29, column: 2, scope: !6164)
!6177 = !DILocation(line: 30, column: 28, scope: !6154)
!6178 = !DILocation(line: 30, column: 7, scope: !6154)
!6179 = !DILocation(line: 30, column: 5, scope: !6154)
!6180 = !DILocation(line: 31, column: 2, scope: !6154)
!6181 = !DILocation(line: 33, column: 2, scope: !6182)
!6182 = distinct !DILexicalBlock(scope: !6154, file: !6155, line: 33, column: 2)
!6183 = !DILocation(line: 36, column: 2, scope: !6154)
!6184 = !DILocation(line: 37, column: 2, scope: !6154)
!6185 = !DILocation(line: 39, column: 7, scope: !6154)
!6186 = !DILocation(line: 39, column: 5, scope: !6154)
!6187 = !DILocation(line: 40, column: 9, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6154, file: !6155, line: 40, column: 2)
!6189 = !DILocation(line: 40, column: 7, scope: !6188)
!6190 = !DILocation(line: 40, column: 14, scope: !6191)
!6191 = distinct !DILexicalBlock(scope: !6188, file: !6155, line: 40, column: 2)
!6192 = !DILocation(line: 40, column: 16, scope: !6191)
!6193 = !DILocation(line: 40, column: 2, scope: !6188)
!6194 = !DILocation(line: 41, column: 3, scope: !6195)
!6195 = distinct !DILexicalBlock(scope: !6191, file: !6155, line: 40, column: 40)
!6196 = !DILocation(line: 42, column: 2, scope: !6195)
!6197 = !DILocation(line: 40, column: 36, scope: !6191)
!6198 = !DILocation(line: 40, column: 2, scope: !6191)
!6199 = distinct !{!6199, !6193, !6200}
!6200 = !DILocation(line: 42, column: 2, scope: !6188)
!6201 = !DILocation(line: 43, column: 28, scope: !6154)
!6202 = !DILocation(line: 43, column: 7, scope: !6154)
!6203 = !DILocation(line: 43, column: 5, scope: !6154)
!6204 = !DILocation(line: 44, column: 2, scope: !6154)
!6205 = !DILocation(line: 46, column: 2, scope: !6206)
!6206 = distinct !DILexicalBlock(scope: !6154, file: !6155, line: 46, column: 2)
!6207 = !DILocation(line: 49, column: 7, scope: !6154)
!6208 = !DILocation(line: 49, column: 5, scope: !6154)
!6209 = !DILocation(line: 50, column: 9, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6154, file: !6155, line: 50, column: 2)
!6211 = !DILocation(line: 50, column: 7, scope: !6210)
!6212 = !DILocation(line: 50, column: 14, scope: !6213)
!6213 = distinct !DILexicalBlock(scope: !6210, file: !6155, line: 50, column: 2)
!6214 = !DILocation(line: 50, column: 16, scope: !6213)
!6215 = !DILocation(line: 50, column: 2, scope: !6210)
!6216 = !DILocation(line: 51, column: 3, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6213, file: !6155, line: 50, column: 40)
!6218 = !DILocation(line: 52, column: 2, scope: !6217)
!6219 = !DILocation(line: 50, column: 36, scope: !6213)
!6220 = !DILocation(line: 50, column: 2, scope: !6213)
!6221 = distinct !{!6221, !6215, !6222}
!6222 = !DILocation(line: 52, column: 2, scope: !6210)
!6223 = !DILocation(line: 53, column: 28, scope: !6154)
!6224 = !DILocation(line: 53, column: 7, scope: !6154)
!6225 = !DILocation(line: 53, column: 5, scope: !6154)
!6226 = !DILocation(line: 54, column: 2, scope: !6154)
!6227 = !DILocation(line: 56, column: 2, scope: !6228)
!6228 = distinct !DILexicalBlock(scope: !6154, file: !6155, line: 56, column: 2)
!6229 = !DILocation(line: 60, column: 1, scope: !6154)
!6230 = distinct !DISubprogram(name: "BENCH_START", scope: !573, file: !573, line: 175, type: !755, scopeLine: 176, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6231 = !DILocalVariable(name: "et", scope: !6230, file: !573, line: 177, type: !58)
!6232 = !DILocation(line: 177, column: 11, scope: !6230)
!6233 = !DILocation(line: 179, column: 2, scope: !6230)
!6234 = !DILocation(line: 180, column: 7, scope: !6230)
!6235 = !DILocation(line: 180, column: 5, scope: !6230)
!6236 = !DILocation(line: 181, column: 9, scope: !6230)
!6237 = !DILocation(line: 181, column: 2, scope: !6230)
!6238 = distinct !DISubprogram(name: "k_sem_give", scope: !765, file: !765, line: 761, type: !6239, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6239 = !DISubroutineType(types: !6240)
!6240 = !{null, !6241}
!6241 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6242, size: 32)
!6242 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !6243)
!6243 = !{!6244, !6263, !6264}
!6244 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6242, file: !6, line: 3705, baseType: !6245, size: 64)
!6245 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !6246)
!6246 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !6247)
!6247 = !{!6248}
!6248 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6246, file: !99, line: 209, baseType: !6249, size: 64)
!6249 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !6250)
!6250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !6251)
!6251 = !{!6252, !6258}
!6252 = !DIDerivedType(tag: DW_TAG_member, scope: !6250, file: !116, line: 32, baseType: !6253, size: 32)
!6253 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6250, file: !116, line: 32, size: 32, elements: !6254)
!6254 = !{!6255, !6257}
!6255 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6253, file: !116, line: 33, baseType: !6256, size: 32)
!6256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6250, size: 32)
!6257 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6253, file: !116, line: 34, baseType: !6256, size: 32)
!6258 = !DIDerivedType(tag: DW_TAG_member, scope: !6250, file: !116, line: 36, baseType: !6259, size: 32, offset: 32)
!6259 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6250, file: !116, line: 36, size: 32, elements: !6260)
!6260 = !{!6261, !6262}
!6261 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6259, file: !116, line: 37, baseType: !6256, size: 32)
!6262 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6259, file: !116, line: 38, baseType: !6256, size: 32)
!6263 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6242, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!6264 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6242, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!6265 = !DILocalVariable(name: "sem", arg: 1, scope: !6238, file: !765, line: 761, type: !6241)
!6266 = !DILocation(line: 761, column: 64, scope: !6238)
!6267 = !DILocation(line: 769, column: 2, scope: !6238)
!6268 = !DILocation(line: 769, column: 2, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6238, file: !765, line: 769, column: 2)
!6270 = !{i32 -2141849408}
!6271 = !DILocation(line: 770, column: 20, scope: !6238)
!6272 = !DILocation(line: 770, column: 2, scope: !6238)
!6273 = !DILocation(line: 771, column: 1, scope: !6238)
!6274 = distinct !DISubprogram(name: "TIME_STAMP_DELTA_GET", scope: !63, file: !63, line: 33, type: !823, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6275 = !DILocalVariable(name: "ts", arg: 1, scope: !6274, file: !63, line: 33, type: !58)
!6276 = !DILocation(line: 33, column: 54, scope: !6274)
!6277 = !DILocalVariable(name: "t", scope: !6274, file: !63, line: 35, type: !58)
!6278 = !DILocation(line: 35, column: 11, scope: !6274)
!6279 = !DILocation(line: 38, column: 2, scope: !6274)
!6280 = !DILocation(line: 40, column: 6, scope: !6274)
!6281 = !DILocation(line: 40, column: 4, scope: !6274)
!6282 = !DILocalVariable(name: "res", scope: !6274, file: !63, line: 41, type: !58)
!6283 = !DILocation(line: 41, column: 11, scope: !6274)
!6284 = !DILocation(line: 41, column: 18, scope: !6274)
!6285 = !DILocation(line: 41, column: 23, scope: !6274)
!6286 = !DILocation(line: 41, column: 20, scope: !6274)
!6287 = !DILocation(line: 41, column: 17, scope: !6274)
!6288 = !DILocation(line: 41, column: 30, scope: !6274)
!6289 = !DILocation(line: 41, column: 34, scope: !6274)
!6290 = !DILocation(line: 41, column: 32, scope: !6274)
!6291 = !DILocation(line: 41, column: 53, scope: !6274)
!6292 = !DILocation(line: 41, column: 51, scope: !6274)
!6293 = !DILocation(line: 41, column: 58, scope: !6274)
!6294 = !DILocation(line: 41, column: 56, scope: !6274)
!6295 = !DILocation(line: 43, column: 6, scope: !6296)
!6296 = distinct !DILexicalBlock(scope: !6274, file: !63, line: 43, column: 6)
!6297 = !DILocation(line: 43, column: 9, scope: !6296)
!6298 = !DILocation(line: 43, column: 6, scope: !6274)
!6299 = !DILocation(line: 44, column: 10, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6296, file: !63, line: 43, column: 14)
!6301 = !DILocation(line: 44, column: 7, scope: !6300)
!6302 = !DILocation(line: 45, column: 2, scope: !6300)
!6303 = !DILocation(line: 46, column: 9, scope: !6274)
!6304 = !DILocation(line: 46, column: 2, scope: !6274)
!6305 = distinct !DISubprogram(name: "check_result", scope: !573, file: !573, line: 184, type: !206, scopeLine: 185, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6306 = !DILocation(line: 186, column: 6, scope: !6307)
!6307 = distinct !DILexicalBlock(scope: !6305, file: !573, line: 186, column: 6)
!6308 = !DILocation(line: 186, column: 23, scope: !6307)
!6309 = !DILocation(line: 186, column: 6, scope: !6305)
!6310 = !DILocation(line: 187, column: 3, scope: !6311)
!6311 = distinct !DILexicalBlock(scope: !6312, file: !573, line: 187, column: 3)
!6312 = distinct !DILexicalBlock(scope: !6307, file: !573, line: 186, column: 28)
!6313 = !DILocation(line: 188, column: 3, scope: !6312)
!6314 = !DILocation(line: 190, column: 1, scope: !6305)
!6315 = distinct !DISubprogram(name: "k_cyc_to_ns_floor64", scope: !856, file: !856, line: 901, type: !857, scopeLine: 902, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6316 = !DILocalVariable(name: "t", arg: 1, scope: !6317, file: !856, line: 78, type: !69)
!6317 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6318 = !DILocation(line: 78, column: 63, scope: !6317, inlinedAt: !6319)
!6319 = distinct !DILocation(line: 904, column: 9, scope: !6315)
!6320 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6317, file: !856, line: 78, type: !58)
!6321 = !DILocation(line: 78, column: 75, scope: !6317, inlinedAt: !6319)
!6322 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6317, file: !856, line: 79, type: !58)
!6323 = !DILocation(line: 79, column: 18, scope: !6317, inlinedAt: !6319)
!6324 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6317, file: !856, line: 79, type: !863)
!6325 = !DILocation(line: 79, column: 30, scope: !6317, inlinedAt: !6319)
!6326 = !DILocalVariable(name: "result32", arg: 5, scope: !6317, file: !856, line: 80, type: !863)
!6327 = !DILocation(line: 80, column: 14, scope: !6317, inlinedAt: !6319)
!6328 = !DILocalVariable(name: "round_up", arg: 6, scope: !6317, file: !856, line: 80, type: !863)
!6329 = !DILocation(line: 80, column: 29, scope: !6317, inlinedAt: !6319)
!6330 = !DILocalVariable(name: "round_off", arg: 7, scope: !6317, file: !856, line: 81, type: !863)
!6331 = !DILocation(line: 81, column: 14, scope: !6317, inlinedAt: !6319)
!6332 = !DILocalVariable(name: "mul_ratio", scope: !6317, file: !856, line: 84, type: !863)
!6333 = !DILocation(line: 84, column: 7, scope: !6317, inlinedAt: !6319)
!6334 = !DILocalVariable(name: "div_ratio", scope: !6317, file: !856, line: 86, type: !863)
!6335 = !DILocation(line: 86, column: 7, scope: !6317, inlinedAt: !6319)
!6336 = !DILocalVariable(name: "off", scope: !6317, file: !856, line: 93, type: !69)
!6337 = !DILocation(line: 93, column: 11, scope: !6317, inlinedAt: !6319)
!6338 = !DILocalVariable(name: "rdivisor", scope: !6339, file: !856, line: 96, type: !58)
!6339 = distinct !DILexicalBlock(scope: !6340, file: !856, line: 95, column: 18)
!6340 = distinct !DILexicalBlock(scope: !6317, file: !856, line: 95, column: 6)
!6341 = !DILocation(line: 96, column: 12, scope: !6339, inlinedAt: !6319)
!6342 = !DILocalVariable(name: "t", arg: 1, scope: !6315, file: !856, line: 901, type: !69)
!6343 = !DILocation(line: 901, column: 68, scope: !6315)
!6344 = !DILocation(line: 904, column: 17, scope: !6315)
!6345 = !DILocation(line: 904, column: 20, scope: !6315)
!6346 = !DILocation(line: 84, column: 19, scope: !6317, inlinedAt: !6319)
!6347 = !DILocation(line: 84, column: 28, scope: !6317, inlinedAt: !6319)
!6348 = !DILocation(line: 85, column: 4, scope: !6317, inlinedAt: !6319)
!6349 = !DILocation(line: 85, column: 12, scope: !6317, inlinedAt: !6319)
!6350 = !DILocation(line: 85, column: 10, scope: !6317, inlinedAt: !6319)
!6351 = !DILocation(line: 85, column: 21, scope: !6317, inlinedAt: !6319)
!6352 = !DILocation(line: 85, column: 26, scope: !6317, inlinedAt: !6319)
!6353 = !DILocation(line: 85, column: 34, scope: !6317, inlinedAt: !6319)
!6354 = !DILocation(line: 85, column: 32, scope: !6317, inlinedAt: !6319)
!6355 = !DILocation(line: 85, column: 43, scope: !6317, inlinedAt: !6319)
!6356 = !DILocation(line: 0, scope: !6317, inlinedAt: !6319)
!6357 = !DILocation(line: 86, column: 19, scope: !6317, inlinedAt: !6319)
!6358 = !DILocation(line: 86, column: 28, scope: !6317, inlinedAt: !6319)
!6359 = !DILocation(line: 87, column: 4, scope: !6317, inlinedAt: !6319)
!6360 = !DILocation(line: 87, column: 14, scope: !6317, inlinedAt: !6319)
!6361 = !DILocation(line: 87, column: 12, scope: !6317, inlinedAt: !6319)
!6362 = !DILocation(line: 87, column: 21, scope: !6317, inlinedAt: !6319)
!6363 = !DILocation(line: 87, column: 26, scope: !6317, inlinedAt: !6319)
!6364 = !DILocation(line: 87, column: 36, scope: !6317, inlinedAt: !6319)
!6365 = !DILocation(line: 87, column: 34, scope: !6317, inlinedAt: !6319)
!6366 = !DILocation(line: 87, column: 43, scope: !6317, inlinedAt: !6319)
!6367 = !DILocation(line: 89, column: 6, scope: !6368, inlinedAt: !6319)
!6368 = distinct !DILexicalBlock(scope: !6317, file: !856, line: 89, column: 6)
!6369 = !DILocation(line: 89, column: 17, scope: !6368, inlinedAt: !6319)
!6370 = !DILocation(line: 89, column: 14, scope: !6368, inlinedAt: !6319)
!6371 = !DILocation(line: 89, column: 6, scope: !6317, inlinedAt: !6319)
!6372 = !DILocation(line: 90, column: 10, scope: !6373, inlinedAt: !6319)
!6373 = distinct !DILexicalBlock(scope: !6368, file: !856, line: 89, column: 24)
!6374 = !DILocation(line: 90, column: 32, scope: !6373, inlinedAt: !6319)
!6375 = !DILocation(line: 90, column: 22, scope: !6373, inlinedAt: !6319)
!6376 = !DILocation(line: 90, column: 21, scope: !6373, inlinedAt: !6319)
!6377 = !DILocation(line: 90, column: 37, scope: !6373, inlinedAt: !6319)
!6378 = !DILocation(line: 90, column: 3, scope: !6373, inlinedAt: !6319)
!6379 = !DILocation(line: 95, column: 7, scope: !6340, inlinedAt: !6319)
!6380 = !DILocation(line: 95, column: 6, scope: !6317, inlinedAt: !6319)
!6381 = !DILocation(line: 96, column: 23, scope: !6339, inlinedAt: !6319)
!6382 = !DILocation(line: 96, column: 36, scope: !6339, inlinedAt: !6319)
!6383 = !DILocation(line: 96, column: 46, scope: !6339, inlinedAt: !6319)
!6384 = !DILocation(line: 96, column: 44, scope: !6339, inlinedAt: !6319)
!6385 = !DILocation(line: 96, column: 55, scope: !6339, inlinedAt: !6319)
!6386 = !DILocation(line: 98, column: 7, scope: !6387, inlinedAt: !6319)
!6387 = distinct !DILexicalBlock(scope: !6339, file: !856, line: 98, column: 7)
!6388 = !DILocation(line: 98, column: 7, scope: !6339, inlinedAt: !6319)
!6389 = !DILocation(line: 99, column: 10, scope: !6390, inlinedAt: !6319)
!6390 = distinct !DILexicalBlock(scope: !6387, file: !856, line: 98, column: 17)
!6391 = !DILocation(line: 99, column: 19, scope: !6390, inlinedAt: !6319)
!6392 = !DILocation(line: 99, column: 8, scope: !6390, inlinedAt: !6319)
!6393 = !DILocation(line: 100, column: 3, scope: !6390, inlinedAt: !6319)
!6394 = !DILocation(line: 100, column: 14, scope: !6395, inlinedAt: !6319)
!6395 = distinct !DILexicalBlock(scope: !6387, file: !856, line: 100, column: 14)
!6396 = !DILocation(line: 100, column: 14, scope: !6387, inlinedAt: !6319)
!6397 = !DILocation(line: 101, column: 10, scope: !6398, inlinedAt: !6319)
!6398 = distinct !DILexicalBlock(scope: !6395, file: !856, line: 100, column: 25)
!6399 = !DILocation(line: 101, column: 19, scope: !6398, inlinedAt: !6319)
!6400 = !DILocation(line: 101, column: 8, scope: !6398, inlinedAt: !6319)
!6401 = !DILocation(line: 102, column: 3, scope: !6398, inlinedAt: !6319)
!6402 = !DILocation(line: 103, column: 2, scope: !6339, inlinedAt: !6319)
!6403 = !DILocation(line: 110, column: 6, scope: !6404, inlinedAt: !6319)
!6404 = distinct !DILexicalBlock(scope: !6317, file: !856, line: 110, column: 6)
!6405 = !DILocation(line: 110, column: 6, scope: !6317, inlinedAt: !6319)
!6406 = !DILocation(line: 111, column: 8, scope: !6407, inlinedAt: !6319)
!6407 = distinct !DILexicalBlock(scope: !6404, file: !856, line: 110, column: 17)
!6408 = !DILocation(line: 111, column: 5, scope: !6407, inlinedAt: !6319)
!6409 = !DILocation(line: 112, column: 7, scope: !6410, inlinedAt: !6319)
!6410 = distinct !DILexicalBlock(scope: !6407, file: !856, line: 112, column: 7)
!6411 = !DILocation(line: 112, column: 16, scope: !6410, inlinedAt: !6319)
!6412 = !DILocation(line: 112, column: 20, scope: !6410, inlinedAt: !6319)
!6413 = !DILocation(line: 112, column: 22, scope: !6410, inlinedAt: !6319)
!6414 = !DILocation(line: 112, column: 7, scope: !6407, inlinedAt: !6319)
!6415 = !DILocation(line: 113, column: 22, scope: !6416, inlinedAt: !6319)
!6416 = distinct !DILexicalBlock(scope: !6410, file: !856, line: 112, column: 36)
!6417 = !DILocation(line: 113, column: 12, scope: !6416, inlinedAt: !6319)
!6418 = !DILocation(line: 113, column: 28, scope: !6416, inlinedAt: !6319)
!6419 = !DILocation(line: 113, column: 38, scope: !6416, inlinedAt: !6319)
!6420 = !DILocation(line: 113, column: 36, scope: !6416, inlinedAt: !6319)
!6421 = !DILocation(line: 113, column: 25, scope: !6416, inlinedAt: !6319)
!6422 = !DILocation(line: 113, column: 11, scope: !6416, inlinedAt: !6319)
!6423 = !DILocation(line: 113, column: 4, scope: !6416, inlinedAt: !6319)
!6424 = !DILocation(line: 115, column: 11, scope: !6425, inlinedAt: !6319)
!6425 = distinct !DILexicalBlock(scope: !6410, file: !856, line: 114, column: 10)
!6426 = !DILocation(line: 115, column: 16, scope: !6425, inlinedAt: !6319)
!6427 = !DILocation(line: 115, column: 26, scope: !6425, inlinedAt: !6319)
!6428 = !DILocation(line: 115, column: 24, scope: !6425, inlinedAt: !6319)
!6429 = !DILocation(line: 115, column: 15, scope: !6425, inlinedAt: !6319)
!6430 = !DILocation(line: 115, column: 13, scope: !6425, inlinedAt: !6319)
!6431 = !DILocation(line: 115, column: 4, scope: !6425, inlinedAt: !6319)
!6432 = !DILocation(line: 117, column: 13, scope: !6433, inlinedAt: !6319)
!6433 = distinct !DILexicalBlock(scope: !6404, file: !856, line: 117, column: 13)
!6434 = !DILocation(line: 117, column: 13, scope: !6404, inlinedAt: !6319)
!6435 = !DILocation(line: 118, column: 7, scope: !6436, inlinedAt: !6319)
!6436 = distinct !DILexicalBlock(scope: !6437, file: !856, line: 118, column: 7)
!6437 = distinct !DILexicalBlock(scope: !6433, file: !856, line: 117, column: 24)
!6438 = !DILocation(line: 118, column: 7, scope: !6437, inlinedAt: !6319)
!6439 = !DILocation(line: 119, column: 22, scope: !6440, inlinedAt: !6319)
!6440 = distinct !DILexicalBlock(scope: !6436, file: !856, line: 118, column: 17)
!6441 = !DILocation(line: 119, column: 12, scope: !6440, inlinedAt: !6319)
!6442 = !DILocation(line: 119, column: 28, scope: !6440, inlinedAt: !6319)
!6443 = !DILocation(line: 119, column: 36, scope: !6440, inlinedAt: !6319)
!6444 = !DILocation(line: 119, column: 34, scope: !6440, inlinedAt: !6319)
!6445 = !DILocation(line: 119, column: 25, scope: !6440, inlinedAt: !6319)
!6446 = !DILocation(line: 119, column: 11, scope: !6440, inlinedAt: !6319)
!6447 = !DILocation(line: 119, column: 4, scope: !6440, inlinedAt: !6319)
!6448 = !DILocation(line: 121, column: 11, scope: !6449, inlinedAt: !6319)
!6449 = distinct !DILexicalBlock(scope: !6436, file: !856, line: 120, column: 10)
!6450 = !DILocation(line: 121, column: 16, scope: !6449, inlinedAt: !6319)
!6451 = !DILocation(line: 121, column: 24, scope: !6449, inlinedAt: !6319)
!6452 = !DILocation(line: 121, column: 22, scope: !6449, inlinedAt: !6319)
!6453 = !DILocation(line: 121, column: 15, scope: !6449, inlinedAt: !6319)
!6454 = !DILocation(line: 121, column: 13, scope: !6449, inlinedAt: !6319)
!6455 = !DILocation(line: 121, column: 4, scope: !6449, inlinedAt: !6319)
!6456 = !DILocation(line: 124, column: 7, scope: !6457, inlinedAt: !6319)
!6457 = distinct !DILexicalBlock(scope: !6458, file: !856, line: 124, column: 7)
!6458 = distinct !DILexicalBlock(scope: !6433, file: !856, line: 123, column: 9)
!6459 = !DILocation(line: 124, column: 7, scope: !6458, inlinedAt: !6319)
!6460 = !DILocation(line: 125, column: 23, scope: !6461, inlinedAt: !6319)
!6461 = distinct !DILexicalBlock(scope: !6457, file: !856, line: 124, column: 17)
!6462 = !DILocation(line: 125, column: 27, scope: !6461, inlinedAt: !6319)
!6463 = !DILocation(line: 125, column: 25, scope: !6461, inlinedAt: !6319)
!6464 = !DILocation(line: 125, column: 35, scope: !6461, inlinedAt: !6319)
!6465 = !DILocation(line: 125, column: 33, scope: !6461, inlinedAt: !6319)
!6466 = !DILocation(line: 125, column: 42, scope: !6461, inlinedAt: !6319)
!6467 = !DILocation(line: 125, column: 40, scope: !6461, inlinedAt: !6319)
!6468 = !DILocation(line: 125, column: 11, scope: !6461, inlinedAt: !6319)
!6469 = !DILocation(line: 125, column: 4, scope: !6461, inlinedAt: !6319)
!6470 = !DILocation(line: 127, column: 12, scope: !6471, inlinedAt: !6319)
!6471 = distinct !DILexicalBlock(scope: !6457, file: !856, line: 126, column: 10)
!6472 = !DILocation(line: 127, column: 16, scope: !6471, inlinedAt: !6319)
!6473 = !DILocation(line: 127, column: 14, scope: !6471, inlinedAt: !6319)
!6474 = !DILocation(line: 127, column: 24, scope: !6471, inlinedAt: !6319)
!6475 = !DILocation(line: 127, column: 22, scope: !6471, inlinedAt: !6319)
!6476 = !DILocation(line: 127, column: 31, scope: !6471, inlinedAt: !6319)
!6477 = !DILocation(line: 127, column: 29, scope: !6471, inlinedAt: !6319)
!6478 = !DILocation(line: 127, column: 4, scope: !6471, inlinedAt: !6319)
!6479 = !DILocation(line: 130, column: 1, scope: !6317, inlinedAt: !6319)
!6480 = !DILocation(line: 904, column: 2, scope: !6315)
!6481 = distinct !DISubprogram(name: "k_sem_reset", scope: !765, file: !765, line: 775, type: !6239, scopeLine: 776, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6482 = !DILocalVariable(name: "sem", arg: 1, scope: !6481, file: !765, line: 775, type: !6241)
!6483 = !DILocation(line: 775, column: 65, scope: !6481)
!6484 = !DILocation(line: 783, column: 2, scope: !6481)
!6485 = !DILocation(line: 783, column: 2, scope: !6486)
!6486 = distinct !DILexicalBlock(scope: !6481, file: !765, line: 783, column: 2)
!6487 = !{i32 -2141849340}
!6488 = !DILocation(line: 784, column: 21, scope: !6481)
!6489 = !DILocation(line: 784, column: 2, scope: !6481)
!6490 = !DILocation(line: 785, column: 1, scope: !6481)
!6491 = distinct !DISubprogram(name: "z_impl_k_sem_reset", scope: !6, file: !6, line: 3796, type: !6239, scopeLine: 3797, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6492 = !DILocalVariable(name: "sem", arg: 1, scope: !6491, file: !6, line: 3796, type: !6241)
!6493 = !DILocation(line: 3796, column: 53, scope: !6491)
!6494 = !DILocation(line: 3798, column: 2, scope: !6491)
!6495 = !DILocation(line: 3798, column: 7, scope: !6491)
!6496 = !DILocation(line: 3798, column: 13, scope: !6491)
!6497 = !DILocation(line: 3799, column: 1, scope: !6491)
!6498 = distinct !DISubprogram(name: "sys_clock_hw_cycles_per_sec", scope: !856, file: !856, line: 50, type: !1073, scopeLine: 51, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6499 = !DILocation(line: 55, column: 2, scope: !6498)
!6500 = distinct !DISubprogram(name: "bench_test_end", scope: !63, file: !63, line: 80, type: !1073, scopeLine: 81, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6501 = !DILocation(line: 82, column: 20, scope: !6500)
!6502 = !DILocation(line: 82, column: 18, scope: !6500)
!6503 = !DILocation(line: 90, column: 6, scope: !6504)
!6504 = distinct !DILexicalBlock(scope: !6500, file: !63, line: 90, column: 6)
!6505 = !DILocation(line: 90, column: 22, scope: !6504)
!6506 = !DILocation(line: 90, column: 6, scope: !6500)
!6507 = !DILocation(line: 91, column: 3, scope: !6508)
!6508 = distinct !DILexicalBlock(scope: !6504, file: !63, line: 90, column: 39)
!6509 = !DILocation(line: 93, column: 2, scope: !6500)
!6510 = !DILocation(line: 94, column: 1, scope: !6500)
!6511 = distinct !DISubprogram(name: "k_uptime_delta", scope: !6, file: !6, line: 2133, type: !1086, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6512 = !DILocalVariable(name: "reftime", arg: 1, scope: !6511, file: !6, line: 2133, type: !1088)
!6513 = !DILocation(line: 2133, column: 47, scope: !6511)
!6514 = !DILocalVariable(name: "uptime", scope: !6511, file: !6, line: 2135, type: !55)
!6515 = !DILocation(line: 2135, column: 10, scope: !6511)
!6516 = !DILocalVariable(name: "delta", scope: !6511, file: !6, line: 2135, type: !55)
!6517 = !DILocation(line: 2135, column: 18, scope: !6511)
!6518 = !DILocation(line: 2137, column: 11, scope: !6511)
!6519 = !DILocation(line: 2137, column: 9, scope: !6511)
!6520 = !DILocation(line: 2138, column: 10, scope: !6511)
!6521 = !DILocation(line: 2138, column: 20, scope: !6511)
!6522 = !DILocation(line: 2138, column: 19, scope: !6511)
!6523 = !DILocation(line: 2138, column: 17, scope: !6511)
!6524 = !DILocation(line: 2138, column: 8, scope: !6511)
!6525 = !DILocation(line: 2139, column: 13, scope: !6511)
!6526 = !DILocation(line: 2139, column: 3, scope: !6511)
!6527 = !DILocation(line: 2139, column: 11, scope: !6511)
!6528 = !DILocation(line: 2141, column: 9, scope: !6511)
!6529 = !DILocation(line: 2141, column: 2, scope: !6511)
!6530 = distinct !DISubprogram(name: "k_uptime_get", scope: !6, file: !6, line: 2059, type: !1108, scopeLine: 2060, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6531 = !DILocation(line: 2061, column: 31, scope: !6530)
!6532 = !DILocation(line: 2061, column: 9, scope: !6530)
!6533 = !DILocation(line: 2061, column: 2, scope: !6530)
!6534 = distinct !DISubprogram(name: "k_uptime_ticks", scope: !765, file: !765, line: 500, type: !1108, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6535 = !DILocation(line: 509, column: 2, scope: !6534)
!6536 = !DILocation(line: 509, column: 2, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6534, file: !765, line: 509, column: 2)
!6538 = !{i32 -2141850712}
!6539 = !DILocation(line: 510, column: 9, scope: !6534)
!6540 = !DILocation(line: 510, column: 2, scope: !6534)
!6541 = distinct !DISubprogram(name: "k_ticks_to_ms_floor64", scope: !856, file: !856, line: 1069, type: !857, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6542 = !DILocation(line: 78, column: 63, scope: !6317, inlinedAt: !6543)
!6543 = distinct !DILocation(line: 1072, column: 9, scope: !6541)
!6544 = !DILocation(line: 78, column: 75, scope: !6317, inlinedAt: !6543)
!6545 = !DILocation(line: 79, column: 18, scope: !6317, inlinedAt: !6543)
!6546 = !DILocation(line: 79, column: 30, scope: !6317, inlinedAt: !6543)
!6547 = !DILocation(line: 80, column: 14, scope: !6317, inlinedAt: !6543)
!6548 = !DILocation(line: 80, column: 29, scope: !6317, inlinedAt: !6543)
!6549 = !DILocation(line: 81, column: 14, scope: !6317, inlinedAt: !6543)
!6550 = !DILocation(line: 84, column: 7, scope: !6317, inlinedAt: !6543)
!6551 = !DILocation(line: 86, column: 7, scope: !6317, inlinedAt: !6543)
!6552 = !DILocation(line: 93, column: 11, scope: !6317, inlinedAt: !6543)
!6553 = !DILocation(line: 96, column: 12, scope: !6339, inlinedAt: !6543)
!6554 = !DILocalVariable(name: "t", arg: 1, scope: !6541, file: !856, line: 1069, type: !69)
!6555 = !DILocation(line: 1069, column: 70, scope: !6541)
!6556 = !DILocation(line: 1072, column: 17, scope: !6541)
!6557 = !DILocation(line: 84, column: 19, scope: !6317, inlinedAt: !6543)
!6558 = !DILocation(line: 84, column: 28, scope: !6317, inlinedAt: !6543)
!6559 = !DILocation(line: 85, column: 4, scope: !6317, inlinedAt: !6543)
!6560 = !DILocation(line: 85, column: 12, scope: !6317, inlinedAt: !6543)
!6561 = !DILocation(line: 85, column: 10, scope: !6317, inlinedAt: !6543)
!6562 = !DILocation(line: 85, column: 21, scope: !6317, inlinedAt: !6543)
!6563 = !DILocation(line: 85, column: 26, scope: !6317, inlinedAt: !6543)
!6564 = !DILocation(line: 85, column: 34, scope: !6317, inlinedAt: !6543)
!6565 = !DILocation(line: 85, column: 32, scope: !6317, inlinedAt: !6543)
!6566 = !DILocation(line: 85, column: 43, scope: !6317, inlinedAt: !6543)
!6567 = !DILocation(line: 0, scope: !6317, inlinedAt: !6543)
!6568 = !DILocation(line: 86, column: 19, scope: !6317, inlinedAt: !6543)
!6569 = !DILocation(line: 86, column: 28, scope: !6317, inlinedAt: !6543)
!6570 = !DILocation(line: 87, column: 4, scope: !6317, inlinedAt: !6543)
!6571 = !DILocation(line: 87, column: 14, scope: !6317, inlinedAt: !6543)
!6572 = !DILocation(line: 87, column: 12, scope: !6317, inlinedAt: !6543)
!6573 = !DILocation(line: 87, column: 21, scope: !6317, inlinedAt: !6543)
!6574 = !DILocation(line: 87, column: 26, scope: !6317, inlinedAt: !6543)
!6575 = !DILocation(line: 87, column: 36, scope: !6317, inlinedAt: !6543)
!6576 = !DILocation(line: 87, column: 34, scope: !6317, inlinedAt: !6543)
!6577 = !DILocation(line: 87, column: 43, scope: !6317, inlinedAt: !6543)
!6578 = !DILocation(line: 89, column: 6, scope: !6368, inlinedAt: !6543)
!6579 = !DILocation(line: 89, column: 17, scope: !6368, inlinedAt: !6543)
!6580 = !DILocation(line: 89, column: 14, scope: !6368, inlinedAt: !6543)
!6581 = !DILocation(line: 89, column: 6, scope: !6317, inlinedAt: !6543)
!6582 = !DILocation(line: 90, column: 10, scope: !6373, inlinedAt: !6543)
!6583 = !DILocation(line: 90, column: 32, scope: !6373, inlinedAt: !6543)
!6584 = !DILocation(line: 90, column: 22, scope: !6373, inlinedAt: !6543)
!6585 = !DILocation(line: 90, column: 21, scope: !6373, inlinedAt: !6543)
!6586 = !DILocation(line: 90, column: 37, scope: !6373, inlinedAt: !6543)
!6587 = !DILocation(line: 90, column: 3, scope: !6373, inlinedAt: !6543)
!6588 = !DILocation(line: 95, column: 7, scope: !6340, inlinedAt: !6543)
!6589 = !DILocation(line: 95, column: 6, scope: !6317, inlinedAt: !6543)
!6590 = !DILocation(line: 96, column: 23, scope: !6339, inlinedAt: !6543)
!6591 = !DILocation(line: 96, column: 36, scope: !6339, inlinedAt: !6543)
!6592 = !DILocation(line: 96, column: 46, scope: !6339, inlinedAt: !6543)
!6593 = !DILocation(line: 96, column: 44, scope: !6339, inlinedAt: !6543)
!6594 = !DILocation(line: 96, column: 55, scope: !6339, inlinedAt: !6543)
!6595 = !DILocation(line: 98, column: 7, scope: !6387, inlinedAt: !6543)
!6596 = !DILocation(line: 98, column: 7, scope: !6339, inlinedAt: !6543)
!6597 = !DILocation(line: 99, column: 10, scope: !6390, inlinedAt: !6543)
!6598 = !DILocation(line: 99, column: 19, scope: !6390, inlinedAt: !6543)
!6599 = !DILocation(line: 99, column: 8, scope: !6390, inlinedAt: !6543)
!6600 = !DILocation(line: 100, column: 3, scope: !6390, inlinedAt: !6543)
!6601 = !DILocation(line: 100, column: 14, scope: !6395, inlinedAt: !6543)
!6602 = !DILocation(line: 100, column: 14, scope: !6387, inlinedAt: !6543)
!6603 = !DILocation(line: 101, column: 10, scope: !6398, inlinedAt: !6543)
!6604 = !DILocation(line: 101, column: 19, scope: !6398, inlinedAt: !6543)
!6605 = !DILocation(line: 101, column: 8, scope: !6398, inlinedAt: !6543)
!6606 = !DILocation(line: 102, column: 3, scope: !6398, inlinedAt: !6543)
!6607 = !DILocation(line: 103, column: 2, scope: !6339, inlinedAt: !6543)
!6608 = !DILocation(line: 110, column: 6, scope: !6404, inlinedAt: !6543)
!6609 = !DILocation(line: 110, column: 6, scope: !6317, inlinedAt: !6543)
!6610 = !DILocation(line: 111, column: 8, scope: !6407, inlinedAt: !6543)
!6611 = !DILocation(line: 111, column: 5, scope: !6407, inlinedAt: !6543)
!6612 = !DILocation(line: 112, column: 7, scope: !6410, inlinedAt: !6543)
!6613 = !DILocation(line: 112, column: 16, scope: !6410, inlinedAt: !6543)
!6614 = !DILocation(line: 112, column: 20, scope: !6410, inlinedAt: !6543)
!6615 = !DILocation(line: 112, column: 22, scope: !6410, inlinedAt: !6543)
!6616 = !DILocation(line: 112, column: 7, scope: !6407, inlinedAt: !6543)
!6617 = !DILocation(line: 113, column: 22, scope: !6416, inlinedAt: !6543)
!6618 = !DILocation(line: 113, column: 12, scope: !6416, inlinedAt: !6543)
!6619 = !DILocation(line: 113, column: 28, scope: !6416, inlinedAt: !6543)
!6620 = !DILocation(line: 113, column: 38, scope: !6416, inlinedAt: !6543)
!6621 = !DILocation(line: 113, column: 36, scope: !6416, inlinedAt: !6543)
!6622 = !DILocation(line: 113, column: 25, scope: !6416, inlinedAt: !6543)
!6623 = !DILocation(line: 113, column: 11, scope: !6416, inlinedAt: !6543)
!6624 = !DILocation(line: 113, column: 4, scope: !6416, inlinedAt: !6543)
!6625 = !DILocation(line: 115, column: 11, scope: !6425, inlinedAt: !6543)
!6626 = !DILocation(line: 115, column: 16, scope: !6425, inlinedAt: !6543)
!6627 = !DILocation(line: 115, column: 26, scope: !6425, inlinedAt: !6543)
!6628 = !DILocation(line: 115, column: 24, scope: !6425, inlinedAt: !6543)
!6629 = !DILocation(line: 115, column: 15, scope: !6425, inlinedAt: !6543)
!6630 = !DILocation(line: 115, column: 13, scope: !6425, inlinedAt: !6543)
!6631 = !DILocation(line: 115, column: 4, scope: !6425, inlinedAt: !6543)
!6632 = !DILocation(line: 117, column: 13, scope: !6433, inlinedAt: !6543)
!6633 = !DILocation(line: 117, column: 13, scope: !6404, inlinedAt: !6543)
!6634 = !DILocation(line: 118, column: 7, scope: !6436, inlinedAt: !6543)
!6635 = !DILocation(line: 118, column: 7, scope: !6437, inlinedAt: !6543)
!6636 = !DILocation(line: 119, column: 22, scope: !6440, inlinedAt: !6543)
!6637 = !DILocation(line: 119, column: 12, scope: !6440, inlinedAt: !6543)
!6638 = !DILocation(line: 119, column: 28, scope: !6440, inlinedAt: !6543)
!6639 = !DILocation(line: 119, column: 36, scope: !6440, inlinedAt: !6543)
!6640 = !DILocation(line: 119, column: 34, scope: !6440, inlinedAt: !6543)
!6641 = !DILocation(line: 119, column: 25, scope: !6440, inlinedAt: !6543)
!6642 = !DILocation(line: 119, column: 11, scope: !6440, inlinedAt: !6543)
!6643 = !DILocation(line: 119, column: 4, scope: !6440, inlinedAt: !6543)
!6644 = !DILocation(line: 121, column: 11, scope: !6449, inlinedAt: !6543)
!6645 = !DILocation(line: 121, column: 16, scope: !6449, inlinedAt: !6543)
!6646 = !DILocation(line: 121, column: 24, scope: !6449, inlinedAt: !6543)
!6647 = !DILocation(line: 121, column: 22, scope: !6449, inlinedAt: !6543)
!6648 = !DILocation(line: 121, column: 15, scope: !6449, inlinedAt: !6543)
!6649 = !DILocation(line: 121, column: 13, scope: !6449, inlinedAt: !6543)
!6650 = !DILocation(line: 121, column: 4, scope: !6449, inlinedAt: !6543)
!6651 = !DILocation(line: 124, column: 7, scope: !6457, inlinedAt: !6543)
!6652 = !DILocation(line: 124, column: 7, scope: !6458, inlinedAt: !6543)
!6653 = !DILocation(line: 125, column: 23, scope: !6461, inlinedAt: !6543)
!6654 = !DILocation(line: 125, column: 27, scope: !6461, inlinedAt: !6543)
!6655 = !DILocation(line: 125, column: 25, scope: !6461, inlinedAt: !6543)
!6656 = !DILocation(line: 125, column: 35, scope: !6461, inlinedAt: !6543)
!6657 = !DILocation(line: 125, column: 33, scope: !6461, inlinedAt: !6543)
!6658 = !DILocation(line: 125, column: 42, scope: !6461, inlinedAt: !6543)
!6659 = !DILocation(line: 125, column: 40, scope: !6461, inlinedAt: !6543)
!6660 = !DILocation(line: 125, column: 11, scope: !6461, inlinedAt: !6543)
!6661 = !DILocation(line: 125, column: 4, scope: !6461, inlinedAt: !6543)
!6662 = !DILocation(line: 127, column: 12, scope: !6471, inlinedAt: !6543)
!6663 = !DILocation(line: 127, column: 16, scope: !6471, inlinedAt: !6543)
!6664 = !DILocation(line: 127, column: 14, scope: !6471, inlinedAt: !6543)
!6665 = !DILocation(line: 127, column: 24, scope: !6471, inlinedAt: !6543)
!6666 = !DILocation(line: 127, column: 22, scope: !6471, inlinedAt: !6543)
!6667 = !DILocation(line: 127, column: 31, scope: !6471, inlinedAt: !6543)
!6668 = !DILocation(line: 127, column: 29, scope: !6471, inlinedAt: !6543)
!6669 = !DILocation(line: 127, column: 4, scope: !6471, inlinedAt: !6543)
!6670 = !DILocation(line: 130, column: 1, scope: !6317, inlinedAt: !6543)
!6671 = !DILocation(line: 1072, column: 2, scope: !6541)
!6672 = distinct !DISubprogram(name: "timestamp_serialize", scope: !1254, file: !1254, line: 28, type: !206, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6673 = !DILocation(line: 935, column: 3, scope: !6674, inlinedAt: !6675)
!6674 = distinct !DISubprogram(name: "__ISB", scope: !1257, file: !1257, line: 933, type: !206, scopeLine: 934, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6675 = distinct !DILocation(line: 31, column: 2, scope: !6672)
!6676 = !{i32 2224414}
!6677 = !DILocation(line: 32, column: 1, scope: !6672)
!6678 = distinct !DISubprogram(name: "k_cycle_get_32", scope: !6, file: !6, line: 2172, type: !755, scopeLine: 2173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6679 = !DILocation(line: 2174, column: 9, scope: !6678)
!6680 = !DILocation(line: 2174, column: 2, scope: !6678)
!6681 = distinct !DISubprogram(name: "arch_k_cycle_get_32", scope: !1265, file: !1265, line: 24, type: !755, scopeLine: 25, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6682 = !DILocation(line: 26, column: 9, scope: !6681)
!6683 = !DILocation(line: 26, column: 2, scope: !6681)
!6684 = distinct !DISubprogram(name: "bench_test_start", scope: !63, file: !63, line: 70, type: !206, scopeLine: 71, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6685 = !DILocation(line: 72, column: 18, scope: !6684)
!6686 = !DILocation(line: 74, column: 2, scope: !6684)
!6687 = !DILocation(line: 75, column: 20, scope: !6684)
!6688 = !DILocation(line: 75, column: 18, scope: !6684)
!6689 = !DILocation(line: 76, column: 1, scope: !6684)
!6690 = distinct !DISubprogram(name: "k_sleep", scope: !765, file: !765, line: 117, type: !6691, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !593, retainedNodes: !609)
!6691 = !DISubroutineType(types: !6692)
!6692 = !{!412, !6693}
!6693 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !6694)
!6694 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !6695)
!6695 = !{!6696}
!6696 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6694, file: !54, line: 68, baseType: !53, size: 64)
!6697 = !DILocalVariable(name: "timeout", arg: 1, scope: !6690, file: !765, line: 117, type: !6693)
!6698 = !DILocation(line: 117, column: 61, scope: !6690)
!6699 = !DILocation(line: 126, column: 2, scope: !6690)
!6700 = !DILocation(line: 126, column: 2, scope: !6701)
!6701 = distinct !DILexicalBlock(scope: !6690, file: !765, line: 126, column: 2)
!6702 = !{i32 -2141852616}
!6703 = !DILocation(line: 127, column: 9, scope: !6690)
!6704 = !DILocation(line: 127, column: 2, scope: !6690)
!6705 = distinct !DISubprogram(name: "waittask", scope: !6706, file: !6706, line: 22, type: !206, scopeLine: 23, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !599, retainedNodes: !609)
!6706 = !DIFile(filename: "appl/Zephyr/app_kernel/src/sema_r.c", directory: "/home/kenny/ara")
!6707 = !DILocalVariable(name: "i", scope: !6705, file: !6706, line: 24, type: !61)
!6708 = !DILocation(line: 24, column: 6, scope: !6705)
!6709 = !DILocation(line: 26, column: 9, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6705, file: !6706, line: 26, column: 2)
!6711 = !DILocation(line: 26, column: 7, scope: !6710)
!6712 = !DILocation(line: 26, column: 14, scope: !6713)
!6713 = distinct !DILexicalBlock(scope: !6710, file: !6706, line: 26, column: 2)
!6714 = !DILocation(line: 26, column: 16, scope: !6713)
!6715 = !DILocation(line: 26, column: 2, scope: !6710)
!6716 = !DILocation(line: 27, column: 21, scope: !6717)
!6717 = distinct !DILexicalBlock(scope: !6713, file: !6706, line: 26, column: 40)
!6718 = !DILocation(line: 27, column: 3, scope: !6717)
!6719 = !DILocation(line: 28, column: 2, scope: !6717)
!6720 = !DILocation(line: 26, column: 36, scope: !6713)
!6721 = !DILocation(line: 26, column: 2, scope: !6713)
!6722 = distinct !{!6722, !6715, !6723}
!6723 = !DILocation(line: 28, column: 2, scope: !6710)
!6724 = !DILocation(line: 29, column: 9, scope: !6725)
!6725 = distinct !DILexicalBlock(scope: !6705, file: !6706, line: 29, column: 2)
!6726 = !DILocation(line: 29, column: 7, scope: !6725)
!6727 = !DILocation(line: 29, column: 14, scope: !6728)
!6728 = distinct !DILexicalBlock(scope: !6725, file: !6706, line: 29, column: 2)
!6729 = !DILocation(line: 29, column: 16, scope: !6728)
!6730 = !DILocation(line: 29, column: 2, scope: !6725)
!6731 = !DILocation(line: 30, column: 21, scope: !6732)
!6732 = distinct !DILexicalBlock(scope: !6728, file: !6706, line: 29, column: 40)
!6733 = !DILocation(line: 30, column: 3, scope: !6732)
!6734 = !DILocation(line: 31, column: 2, scope: !6732)
!6735 = !DILocation(line: 29, column: 36, scope: !6728)
!6736 = !DILocation(line: 29, column: 2, scope: !6728)
!6737 = distinct !{!6737, !6730, !6738}
!6738 = !DILocation(line: 31, column: 2, scope: !6725)
!6739 = !DILocation(line: 33, column: 1, scope: !6705)
!6740 = distinct !DISubprogram(name: "k_sem_take", scope: !765, file: !765, line: 746, type: !6741, scopeLine: 747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !599, retainedNodes: !609)
!6741 = !DISubroutineType(types: !6742)
!6742 = !{!61, !6743, !6767}
!6743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6744, size: 32)
!6744 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "k_sem", file: !6, line: 3704, size: 128, elements: !6745)
!6745 = !{!6746, !6765, !6766}
!6746 = !DIDerivedType(tag: DW_TAG_member, name: "wait_q", scope: !6744, file: !6, line: 3705, baseType: !6747, size: 64)
!6747 = !DIDerivedType(tag: DW_TAG_typedef, name: "_wait_q_t", file: !99, line: 210, baseType: !6748)
!6748 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !99, line: 208, size: 64, elements: !6749)
!6749 = !{!6750}
!6750 = !DIDerivedType(tag: DW_TAG_member, name: "waitq", scope: !6748, file: !99, line: 209, baseType: !6751, size: 64)
!6751 = !DIDerivedType(tag: DW_TAG_typedef, name: "sys_dlist_t", file: !116, line: 42, baseType: !6752)
!6752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_dnode", file: !116, line: 31, size: 64, elements: !6753)
!6753 = !{!6754, !6760}
!6754 = !DIDerivedType(tag: DW_TAG_member, scope: !6752, file: !116, line: 32, baseType: !6755, size: 32)
!6755 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6752, file: !116, line: 32, size: 32, elements: !6756)
!6756 = !{!6757, !6759}
!6757 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !6755, file: !116, line: 33, baseType: !6758, size: 32)
!6758 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6752, size: 32)
!6759 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !6755, file: !116, line: 34, baseType: !6758, size: 32)
!6760 = !DIDerivedType(tag: DW_TAG_member, scope: !6752, file: !116, line: 36, baseType: !6761, size: 32, offset: 32)
!6761 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !6752, file: !116, line: 36, size: 32, elements: !6762)
!6762 = !{!6763, !6764}
!6763 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !6761, file: !116, line: 37, baseType: !6758, size: 32)
!6764 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !6761, file: !116, line: 38, baseType: !6758, size: 32)
!6765 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !6744, file: !6, line: 3706, baseType: !58, size: 32, offset: 64)
!6766 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !6744, file: !6, line: 3707, baseType: !58, size: 32, offset: 96)
!6767 = !DIDerivedType(tag: DW_TAG_typedef, name: "k_timeout_t", file: !54, line: 69, baseType: !6768)
!6768 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !54, line: 67, size: 64, elements: !6769)
!6769 = !{!6770}
!6770 = !DIDerivedType(tag: DW_TAG_member, name: "ticks", scope: !6768, file: !54, line: 68, baseType: !53, size: 64)
!6771 = !DILocalVariable(name: "sem", arg: 1, scope: !6740, file: !765, line: 746, type: !6743)
!6772 = !DILocation(line: 746, column: 63, scope: !6740)
!6773 = !DILocalVariable(name: "timeout", arg: 2, scope: !6740, file: !765, line: 746, type: !6767)
!6774 = !DILocation(line: 746, column: 80, scope: !6740)
!6775 = !DILocation(line: 755, column: 2, scope: !6740)
!6776 = !DILocation(line: 755, column: 2, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6740, file: !765, line: 755, column: 2)
!6778 = !{i32 -2141853762}
!6779 = !DILocation(line: 756, column: 27, scope: !6740)
!6780 = !DILocation(line: 756, column: 9, scope: !6740)
!6781 = !DILocation(line: 756, column: 2, scope: !6740)
!6782 = distinct !DISubprogram(name: "k_ms_to_ticks_ceil64", scope: !856, file: !856, line: 369, type: !857, scopeLine: 370, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !599, retainedNodes: !609)
!6783 = !DILocalVariable(name: "t", arg: 1, scope: !6784, file: !856, line: 78, type: !69)
!6784 = distinct !DISubprogram(name: "z_tmcvt", scope: !856, file: !856, line: 78, type: !861, scopeLine: 82, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !599, retainedNodes: !609)
!6785 = !DILocation(line: 78, column: 63, scope: !6784, inlinedAt: !6786)
!6786 = distinct !DILocation(line: 372, column: 9, scope: !6782)
!6787 = !DILocalVariable(name: "from_hz", arg: 2, scope: !6784, file: !856, line: 78, type: !58)
!6788 = !DILocation(line: 78, column: 75, scope: !6784, inlinedAt: !6786)
!6789 = !DILocalVariable(name: "to_hz", arg: 3, scope: !6784, file: !856, line: 79, type: !58)
!6790 = !DILocation(line: 79, column: 18, scope: !6784, inlinedAt: !6786)
!6791 = !DILocalVariable(name: "const_hz", arg: 4, scope: !6784, file: !856, line: 79, type: !863)
!6792 = !DILocation(line: 79, column: 30, scope: !6784, inlinedAt: !6786)
!6793 = !DILocalVariable(name: "result32", arg: 5, scope: !6784, file: !856, line: 80, type: !863)
!6794 = !DILocation(line: 80, column: 14, scope: !6784, inlinedAt: !6786)
!6795 = !DILocalVariable(name: "round_up", arg: 6, scope: !6784, file: !856, line: 80, type: !863)
!6796 = !DILocation(line: 80, column: 29, scope: !6784, inlinedAt: !6786)
!6797 = !DILocalVariable(name: "round_off", arg: 7, scope: !6784, file: !856, line: 81, type: !863)
!6798 = !DILocation(line: 81, column: 14, scope: !6784, inlinedAt: !6786)
!6799 = !DILocalVariable(name: "mul_ratio", scope: !6784, file: !856, line: 84, type: !863)
!6800 = !DILocation(line: 84, column: 7, scope: !6784, inlinedAt: !6786)
!6801 = !DILocalVariable(name: "div_ratio", scope: !6784, file: !856, line: 86, type: !863)
!6802 = !DILocation(line: 86, column: 7, scope: !6784, inlinedAt: !6786)
!6803 = !DILocalVariable(name: "off", scope: !6784, file: !856, line: 93, type: !69)
!6804 = !DILocation(line: 93, column: 11, scope: !6784, inlinedAt: !6786)
!6805 = !DILocalVariable(name: "rdivisor", scope: !6806, file: !856, line: 96, type: !58)
!6806 = distinct !DILexicalBlock(scope: !6807, file: !856, line: 95, column: 18)
!6807 = distinct !DILexicalBlock(scope: !6784, file: !856, line: 95, column: 6)
!6808 = !DILocation(line: 96, column: 12, scope: !6806, inlinedAt: !6786)
!6809 = !DILocalVariable(name: "t", arg: 1, scope: !6782, file: !856, line: 369, type: !69)
!6810 = !DILocation(line: 369, column: 69, scope: !6782)
!6811 = !DILocation(line: 372, column: 17, scope: !6782)
!6812 = !DILocation(line: 84, column: 19, scope: !6784, inlinedAt: !6786)
!6813 = !DILocation(line: 84, column: 28, scope: !6784, inlinedAt: !6786)
!6814 = !DILocation(line: 85, column: 4, scope: !6784, inlinedAt: !6786)
!6815 = !DILocation(line: 85, column: 12, scope: !6784, inlinedAt: !6786)
!6816 = !DILocation(line: 85, column: 10, scope: !6784, inlinedAt: !6786)
!6817 = !DILocation(line: 85, column: 21, scope: !6784, inlinedAt: !6786)
!6818 = !DILocation(line: 85, column: 26, scope: !6784, inlinedAt: !6786)
!6819 = !DILocation(line: 85, column: 34, scope: !6784, inlinedAt: !6786)
!6820 = !DILocation(line: 85, column: 32, scope: !6784, inlinedAt: !6786)
!6821 = !DILocation(line: 85, column: 43, scope: !6784, inlinedAt: !6786)
!6822 = !DILocation(line: 0, scope: !6784, inlinedAt: !6786)
!6823 = !DILocation(line: 86, column: 19, scope: !6784, inlinedAt: !6786)
!6824 = !DILocation(line: 86, column: 28, scope: !6784, inlinedAt: !6786)
!6825 = !DILocation(line: 87, column: 4, scope: !6784, inlinedAt: !6786)
!6826 = !DILocation(line: 87, column: 14, scope: !6784, inlinedAt: !6786)
!6827 = !DILocation(line: 87, column: 12, scope: !6784, inlinedAt: !6786)
!6828 = !DILocation(line: 87, column: 21, scope: !6784, inlinedAt: !6786)
!6829 = !DILocation(line: 87, column: 26, scope: !6784, inlinedAt: !6786)
!6830 = !DILocation(line: 87, column: 36, scope: !6784, inlinedAt: !6786)
!6831 = !DILocation(line: 87, column: 34, scope: !6784, inlinedAt: !6786)
!6832 = !DILocation(line: 87, column: 43, scope: !6784, inlinedAt: !6786)
!6833 = !DILocation(line: 89, column: 6, scope: !6834, inlinedAt: !6786)
!6834 = distinct !DILexicalBlock(scope: !6784, file: !856, line: 89, column: 6)
!6835 = !DILocation(line: 89, column: 17, scope: !6834, inlinedAt: !6786)
!6836 = !DILocation(line: 89, column: 14, scope: !6834, inlinedAt: !6786)
!6837 = !DILocation(line: 89, column: 6, scope: !6784, inlinedAt: !6786)
!6838 = !DILocation(line: 90, column: 10, scope: !6839, inlinedAt: !6786)
!6839 = distinct !DILexicalBlock(scope: !6834, file: !856, line: 89, column: 24)
!6840 = !DILocation(line: 90, column: 32, scope: !6839, inlinedAt: !6786)
!6841 = !DILocation(line: 90, column: 22, scope: !6839, inlinedAt: !6786)
!6842 = !DILocation(line: 90, column: 21, scope: !6839, inlinedAt: !6786)
!6843 = !DILocation(line: 90, column: 37, scope: !6839, inlinedAt: !6786)
!6844 = !DILocation(line: 90, column: 3, scope: !6839, inlinedAt: !6786)
!6845 = !DILocation(line: 95, column: 7, scope: !6807, inlinedAt: !6786)
!6846 = !DILocation(line: 95, column: 6, scope: !6784, inlinedAt: !6786)
!6847 = !DILocation(line: 96, column: 23, scope: !6806, inlinedAt: !6786)
!6848 = !DILocation(line: 96, column: 36, scope: !6806, inlinedAt: !6786)
!6849 = !DILocation(line: 96, column: 46, scope: !6806, inlinedAt: !6786)
!6850 = !DILocation(line: 96, column: 44, scope: !6806, inlinedAt: !6786)
!6851 = !DILocation(line: 96, column: 55, scope: !6806, inlinedAt: !6786)
!6852 = !DILocation(line: 98, column: 7, scope: !6853, inlinedAt: !6786)
!6853 = distinct !DILexicalBlock(scope: !6806, file: !856, line: 98, column: 7)
!6854 = !DILocation(line: 98, column: 7, scope: !6806, inlinedAt: !6786)
!6855 = !DILocation(line: 99, column: 10, scope: !6856, inlinedAt: !6786)
!6856 = distinct !DILexicalBlock(scope: !6853, file: !856, line: 98, column: 17)
!6857 = !DILocation(line: 99, column: 19, scope: !6856, inlinedAt: !6786)
!6858 = !DILocation(line: 99, column: 8, scope: !6856, inlinedAt: !6786)
!6859 = !DILocation(line: 100, column: 3, scope: !6856, inlinedAt: !6786)
!6860 = !DILocation(line: 100, column: 14, scope: !6861, inlinedAt: !6786)
!6861 = distinct !DILexicalBlock(scope: !6853, file: !856, line: 100, column: 14)
!6862 = !DILocation(line: 100, column: 14, scope: !6853, inlinedAt: !6786)
!6863 = !DILocation(line: 101, column: 10, scope: !6864, inlinedAt: !6786)
!6864 = distinct !DILexicalBlock(scope: !6861, file: !856, line: 100, column: 25)
!6865 = !DILocation(line: 101, column: 19, scope: !6864, inlinedAt: !6786)
!6866 = !DILocation(line: 101, column: 8, scope: !6864, inlinedAt: !6786)
!6867 = !DILocation(line: 102, column: 3, scope: !6864, inlinedAt: !6786)
!6868 = !DILocation(line: 103, column: 2, scope: !6806, inlinedAt: !6786)
!6869 = !DILocation(line: 110, column: 6, scope: !6870, inlinedAt: !6786)
!6870 = distinct !DILexicalBlock(scope: !6784, file: !856, line: 110, column: 6)
!6871 = !DILocation(line: 110, column: 6, scope: !6784, inlinedAt: !6786)
!6872 = !DILocation(line: 111, column: 8, scope: !6873, inlinedAt: !6786)
!6873 = distinct !DILexicalBlock(scope: !6870, file: !856, line: 110, column: 17)
!6874 = !DILocation(line: 111, column: 5, scope: !6873, inlinedAt: !6786)
!6875 = !DILocation(line: 112, column: 7, scope: !6876, inlinedAt: !6786)
!6876 = distinct !DILexicalBlock(scope: !6873, file: !856, line: 112, column: 7)
!6877 = !DILocation(line: 112, column: 16, scope: !6876, inlinedAt: !6786)
!6878 = !DILocation(line: 112, column: 20, scope: !6876, inlinedAt: !6786)
!6879 = !DILocation(line: 112, column: 22, scope: !6876, inlinedAt: !6786)
!6880 = !DILocation(line: 112, column: 7, scope: !6873, inlinedAt: !6786)
!6881 = !DILocation(line: 113, column: 22, scope: !6882, inlinedAt: !6786)
!6882 = distinct !DILexicalBlock(scope: !6876, file: !856, line: 112, column: 36)
!6883 = !DILocation(line: 113, column: 12, scope: !6882, inlinedAt: !6786)
!6884 = !DILocation(line: 113, column: 28, scope: !6882, inlinedAt: !6786)
!6885 = !DILocation(line: 113, column: 38, scope: !6882, inlinedAt: !6786)
!6886 = !DILocation(line: 113, column: 36, scope: !6882, inlinedAt: !6786)
!6887 = !DILocation(line: 113, column: 25, scope: !6882, inlinedAt: !6786)
!6888 = !DILocation(line: 113, column: 11, scope: !6882, inlinedAt: !6786)
!6889 = !DILocation(line: 113, column: 4, scope: !6882, inlinedAt: !6786)
!6890 = !DILocation(line: 115, column: 11, scope: !6891, inlinedAt: !6786)
!6891 = distinct !DILexicalBlock(scope: !6876, file: !856, line: 114, column: 10)
!6892 = !DILocation(line: 115, column: 16, scope: !6891, inlinedAt: !6786)
!6893 = !DILocation(line: 115, column: 26, scope: !6891, inlinedAt: !6786)
!6894 = !DILocation(line: 115, column: 24, scope: !6891, inlinedAt: !6786)
!6895 = !DILocation(line: 115, column: 15, scope: !6891, inlinedAt: !6786)
!6896 = !DILocation(line: 115, column: 13, scope: !6891, inlinedAt: !6786)
!6897 = !DILocation(line: 115, column: 4, scope: !6891, inlinedAt: !6786)
!6898 = !DILocation(line: 117, column: 13, scope: !6899, inlinedAt: !6786)
!6899 = distinct !DILexicalBlock(scope: !6870, file: !856, line: 117, column: 13)
!6900 = !DILocation(line: 117, column: 13, scope: !6870, inlinedAt: !6786)
!6901 = !DILocation(line: 118, column: 7, scope: !6902, inlinedAt: !6786)
!6902 = distinct !DILexicalBlock(scope: !6903, file: !856, line: 118, column: 7)
!6903 = distinct !DILexicalBlock(scope: !6899, file: !856, line: 117, column: 24)
!6904 = !DILocation(line: 118, column: 7, scope: !6903, inlinedAt: !6786)
!6905 = !DILocation(line: 119, column: 22, scope: !6906, inlinedAt: !6786)
!6906 = distinct !DILexicalBlock(scope: !6902, file: !856, line: 118, column: 17)
!6907 = !DILocation(line: 119, column: 12, scope: !6906, inlinedAt: !6786)
!6908 = !DILocation(line: 119, column: 28, scope: !6906, inlinedAt: !6786)
!6909 = !DILocation(line: 119, column: 36, scope: !6906, inlinedAt: !6786)
!6910 = !DILocation(line: 119, column: 34, scope: !6906, inlinedAt: !6786)
!6911 = !DILocation(line: 119, column: 25, scope: !6906, inlinedAt: !6786)
!6912 = !DILocation(line: 119, column: 11, scope: !6906, inlinedAt: !6786)
!6913 = !DILocation(line: 119, column: 4, scope: !6906, inlinedAt: !6786)
!6914 = !DILocation(line: 121, column: 11, scope: !6915, inlinedAt: !6786)
!6915 = distinct !DILexicalBlock(scope: !6902, file: !856, line: 120, column: 10)
!6916 = !DILocation(line: 121, column: 16, scope: !6915, inlinedAt: !6786)
!6917 = !DILocation(line: 121, column: 24, scope: !6915, inlinedAt: !6786)
!6918 = !DILocation(line: 121, column: 22, scope: !6915, inlinedAt: !6786)
!6919 = !DILocation(line: 121, column: 15, scope: !6915, inlinedAt: !6786)
!6920 = !DILocation(line: 121, column: 13, scope: !6915, inlinedAt: !6786)
!6921 = !DILocation(line: 121, column: 4, scope: !6915, inlinedAt: !6786)
!6922 = !DILocation(line: 124, column: 7, scope: !6923, inlinedAt: !6786)
!6923 = distinct !DILexicalBlock(scope: !6924, file: !856, line: 124, column: 7)
!6924 = distinct !DILexicalBlock(scope: !6899, file: !856, line: 123, column: 9)
!6925 = !DILocation(line: 124, column: 7, scope: !6924, inlinedAt: !6786)
!6926 = !DILocation(line: 125, column: 23, scope: !6927, inlinedAt: !6786)
!6927 = distinct !DILexicalBlock(scope: !6923, file: !856, line: 124, column: 17)
!6928 = !DILocation(line: 125, column: 27, scope: !6927, inlinedAt: !6786)
!6929 = !DILocation(line: 125, column: 25, scope: !6927, inlinedAt: !6786)
!6930 = !DILocation(line: 125, column: 35, scope: !6927, inlinedAt: !6786)
!6931 = !DILocation(line: 125, column: 33, scope: !6927, inlinedAt: !6786)
!6932 = !DILocation(line: 125, column: 42, scope: !6927, inlinedAt: !6786)
!6933 = !DILocation(line: 125, column: 40, scope: !6927, inlinedAt: !6786)
!6934 = !DILocation(line: 125, column: 11, scope: !6927, inlinedAt: !6786)
!6935 = !DILocation(line: 125, column: 4, scope: !6927, inlinedAt: !6786)
!6936 = !DILocation(line: 127, column: 12, scope: !6937, inlinedAt: !6786)
!6937 = distinct !DILexicalBlock(scope: !6923, file: !856, line: 126, column: 10)
!6938 = !DILocation(line: 127, column: 16, scope: !6937, inlinedAt: !6786)
!6939 = !DILocation(line: 127, column: 14, scope: !6937, inlinedAt: !6786)
!6940 = !DILocation(line: 127, column: 24, scope: !6937, inlinedAt: !6786)
!6941 = !DILocation(line: 127, column: 22, scope: !6937, inlinedAt: !6786)
!6942 = !DILocation(line: 127, column: 31, scope: !6937, inlinedAt: !6786)
!6943 = !DILocation(line: 127, column: 29, scope: !6937, inlinedAt: !6786)
!6944 = !DILocation(line: 127, column: 4, scope: !6937, inlinedAt: !6786)
!6945 = !DILocation(line: 130, column: 1, scope: !6784, inlinedAt: !6786)
!6946 = !DILocation(line: 372, column: 2, scope: !6782)
