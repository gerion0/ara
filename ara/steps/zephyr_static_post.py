from ara.graph import Graph
from .step import Step
from pydoc import locate
from ara.os.zephyr import Thread

class ZephyrStaticPost(Step):
    """Deserializes the dictionary encoded instance objects generated by the ZephyrStatic step."""

    def get_single_dependencies(self):
        return ["ZephyrStatic", "LLVMMap"]

    def run(self):
        assert self._graph.instances is not None
        for instance in self._graph.instances.vertices():
            vals = self._graph.instances.vp.obj[instance]
            instance_type = locate('ara.os.zephyr.' + self._graph.instances.vp.label[instance])
            if instance_type is Thread:
                vals['entry_abb'] = self._graph.cfg.get_entry_abb(self._graph.cfg.get_function_by_name(vals['entry_name']))
            inst = instance_type(**vals)
            self._graph.instances.vp.obj[instance] = inst

